:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ColorPickerButton.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ColorPickerButton:

ColorPickerButton
=================

**Inherits:** :ref:`Button<class_Button>` **<** :ref:`BaseButton<class_BaseButton>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Button that pops out a :ref:`ColorPicker<class_ColorPicker>`.

Description
-----------

Encapsulates a :ref:`ColorPicker<class_ColorPicker>` making it accessible by pressing a button. Pressing the button will toggle the :ref:`ColorPicker<class_ColorPicker>` visibility.

See also :ref:`BaseButton<class_BaseButton>` which contains common properties and methods associated with this node.

**Note:** By default, the button may not be wide enough for the color preview swatch to be visible. Make sure to set :ref:`Control.rect_min_size<class_Control_property_rect_min_size>` to a big enough value to give the button enough space.

Tutorials
---------

- `GUI Drag And Drop Demo <https://godotengine.org/asset-library/asset/133>`__

- `2D GD Paint Demo <https://godotengine.org/asset-library/asset/517>`__

Properties
----------

+---------------------------+----------------------------------------------------------------+------------------------------+
| :ref:`Color<class_Color>` | :ref:`color<class_ColorPickerButton_property_color>`           | ``Color( 0, 0, 0, 1 )``      |
+---------------------------+----------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`   | :ref:`edit_alpha<class_ColorPickerButton_property_edit_alpha>` | ``true``                     |
+---------------------------+----------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`   | toggle_mode                                                    | ``true`` *(parent override)* |
+---------------------------+----------------------------------------------------------------+------------------------------+

Methods
-------

+---------------------------------------+--------------------------------------------------------------------------+
| :ref:`ColorPicker<class_ColorPicker>` | :ref:`get_picker<class_ColorPickerButton_method_get_picker>` **(** **)** |
+---------------------------------------+--------------------------------------------------------------------------+
| :ref:`PopupPanel<class_PopupPanel>`   | :ref:`get_popup<class_ColorPickerButton_method_get_popup>` **(** **)**   |
+---------------------------------------+--------------------------------------------------------------------------+

Theme Properties
----------------

+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color<class_ColorPickerButton_theme_color_font_color>`                   | ``Color( 1, 1, 1, 1 )``         |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_disabled<class_ColorPickerButton_theme_color_font_color_disabled>` | ``Color( 0.9, 0.9, 0.9, 0.3 )`` |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_focus<class_ColorPickerButton_theme_color_font_color_focus>`       | ``Color( 1, 1, 1, 1 )``         |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_hover<class_ColorPickerButton_theme_color_font_color_hover>`       | ``Color( 1, 1, 1, 1 )``         |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_pressed<class_ColorPickerButton_theme_color_font_color_pressed>`   | ``Color( 0.8, 0.8, 0.8, 1 )``   |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`int<class_int>`           | :ref:`hseparation<class_ColorPickerButton_theme_constant_hseparation>`              | ``2``                           |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Font<class_Font>`         | :ref:`font<class_ColorPickerButton_theme_font_font>`                                |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`bg<class_ColorPickerButton_theme_icon_bg>`                                    |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`disabled<class_ColorPickerButton_theme_style_disabled>`                       |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`focus<class_ColorPickerButton_theme_style_focus>`                             |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`hover<class_ColorPickerButton_theme_style_hover>`                             |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`normal<class_ColorPickerButton_theme_style_normal>`                           |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`pressed<class_ColorPickerButton_theme_style_pressed>`                         |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+

Signals
-------

.. _class_ColorPickerButton_signal_color_changed:

- **color_changed** **(** :ref:`Color<class_Color>` color **)**

Emitted when the color changes.

----

.. _class_ColorPickerButton_signal_picker_created:

- **picker_created** **(** **)**

Emitted when the :ref:`ColorPicker<class_ColorPicker>` is created (the button is pressed for the first time).

----

.. _class_ColorPickerButton_signal_popup_closed:

- **popup_closed** **(** **)**

Emitted when the :ref:`ColorPicker<class_ColorPicker>` is closed.

Property Descriptions
---------------------

.. _class_ColorPickerButton_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_pick_color(value)   |
+-----------+-------------------------+
| *Getter*  | get_pick_color()        |
+-----------+-------------------------+

The currently selected color.

----

.. _class_ColorPickerButton_property_edit_alpha:

- :ref:`bool<class_bool>` **edit_alpha**

+-----------+-----------------------+
| *Default* | ``true``              |
+-----------+-----------------------+
| *Setter*  | set_edit_alpha(value) |
+-----------+-----------------------+
| *Getter*  | is_editing_alpha()    |
+-----------+-----------------------+

If ``true``, the alpha channel in the displayed :ref:`ColorPicker<class_ColorPicker>` will be visible.

Method Descriptions
-------------------

.. _class_ColorPickerButton_method_get_picker:

- :ref:`ColorPicker<class_ColorPicker>` **get_picker** **(** **)**

Returns the :ref:`ColorPicker<class_ColorPicker>` that this node toggles.

**Warning:** This is a required internal node, removing and freeing it may cause a crash. If you wish to hide it or any of its children, use their :ref:`CanvasItem.visible<class_CanvasItem_property_visible>` property.

----

.. _class_ColorPickerButton_method_get_popup:

- :ref:`PopupPanel<class_PopupPanel>` **get_popup** **(** **)**

Returns the control's :ref:`PopupPanel<class_PopupPanel>` which allows you to connect to popup signals. This allows you to handle events when the ColorPicker is shown or hidden.

**Warning:** This is a required internal node, removing and freeing it may cause a crash. If you wish to hide it or any of its children, use their :ref:`CanvasItem.visible<class_CanvasItem_property_visible>` property.

Theme Property Descriptions
---------------------------

.. _class_ColorPickerButton_theme_color_font_color:

- :ref:`Color<class_Color>` **font_color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

Default text :ref:`Color<class_Color>` of the ``ColorPickerButton``.

----

.. _class_ColorPickerButton_theme_color_font_color_disabled:

- :ref:`Color<class_Color>` **font_color_disabled**

+-----------+---------------------------------+
| *Default* | ``Color( 0.9, 0.9, 0.9, 0.3 )`` |
+-----------+---------------------------------+

Text :ref:`Color<class_Color>` used when the ``ColorPickerButton`` is disabled.

----

.. _class_ColorPickerButton_theme_color_font_color_focus:

- :ref:`Color<class_Color>` **font_color_focus**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

Text :ref:`Color<class_Color>` used when the ``ColorPickerButton`` is focused. Only replaces the normal text color of the button. Disabled, hovered, and pressed states take precedence over this color.

----

.. _class_ColorPickerButton_theme_color_font_color_hover:

- :ref:`Color<class_Color>` **font_color_hover**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

Text :ref:`Color<class_Color>` used when the ``ColorPickerButton`` is being hovered.

----

.. _class_ColorPickerButton_theme_color_font_color_pressed:

- :ref:`Color<class_Color>` **font_color_pressed**

+-----------+-------------------------------+
| *Default* | ``Color( 0.8, 0.8, 0.8, 1 )`` |
+-----------+-------------------------------+

Text :ref:`Color<class_Color>` used when the ``ColorPickerButton`` is being pressed.

----

.. _class_ColorPickerButton_theme_constant_hseparation:

- :ref:`int<class_int>` **hseparation**

+-----------+-------+
| *Default* | ``2`` |
+-----------+-------+

The horizontal space between ``ColorPickerButton``'s icon and text.

----

.. _class_ColorPickerButton_theme_font_font:

- :ref:`Font<class_Font>` **font**

:ref:`Font<class_Font>` of the ``ColorPickerButton``'s text.

----

.. _class_ColorPickerButton_theme_icon_bg:

- :ref:`Texture<class_Texture>` **bg**

The background of the color preview rect on the button.

----

.. _class_ColorPickerButton_theme_style_disabled:

- :ref:`StyleBox<class_StyleBox>` **disabled**

:ref:`StyleBox<class_StyleBox>` used when the ``ColorPickerButton`` is disabled.

----

.. _class_ColorPickerButton_theme_style_focus:

- :ref:`StyleBox<class_StyleBox>` **focus**

:ref:`StyleBox<class_StyleBox>` used when the ``ColorPickerButton`` is focused. It is displayed over the current :ref:`StyleBox<class_StyleBox>`, so using :ref:`StyleBoxEmpty<class_StyleBoxEmpty>` will just disable the focus visual effect.

----

.. _class_ColorPickerButton_theme_style_hover:

- :ref:`StyleBox<class_StyleBox>` **hover**

:ref:`StyleBox<class_StyleBox>` used when the ``ColorPickerButton`` is being hovered.

----

.. _class_ColorPickerButton_theme_style_normal:

- :ref:`StyleBox<class_StyleBox>` **normal**

Default :ref:`StyleBox<class_StyleBox>` for the ``ColorPickerButton``.

----

.. _class_ColorPickerButton_theme_style_pressed:

- :ref:`StyleBox<class_StyleBox>` **pressed**

:ref:`StyleBox<class_StyleBox>` used when the ``ColorPickerButton`` is being pressed.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
