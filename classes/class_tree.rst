:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Tree.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Tree:

Tree
====

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Control to show a tree of items.

Description
-----------

This shows a tree of items that can be selected, expanded and collapsed. The tree can have multiple columns with custom controls like text editing, buttons and popups. It can be useful for structured displays and interactions.

Trees are built via code, using :ref:`TreeItem<class_TreeItem>` objects to create the structure. They have a single root but multiple roots can be simulated if a dummy hidden root is added.

::

    func _ready():
        var tree = Tree.new()
        var root = tree.create_item()
        tree.set_hide_root(true)
        var child1 = tree.create_item(root)
        var child2 = tree.create_item(root)
        var subchild1 = tree.create_item(child1)
        subchild1.set_text(0, "Subchild1")

To iterate over all the :ref:`TreeItem<class_TreeItem>` objects in a ``Tree`` object, use :ref:`TreeItem.get_next<class_TreeItem_method_get_next>` and :ref:`TreeItem.get_children<class_TreeItem_method_get_children>` after getting the root through :ref:`get_root<class_Tree_method_get_root>`. You can use :ref:`Object.free<class_Object_method_free>` on a :ref:`TreeItem<class_TreeItem>` to remove it from the ``Tree``.

Properties
----------

+------------------------------------------+---------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`allow_reselect<class_Tree_property_allow_reselect>`     | ``false``                    |
+------------------------------------------+---------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`allow_rmb_select<class_Tree_property_allow_rmb_select>` | ``false``                    |
+------------------------------------------+---------------------------------------------------------------+------------------------------+
| :ref:`int<class_int>`                    | :ref:`columns<class_Tree_property_columns>`                   | ``1``                        |
+------------------------------------------+---------------------------------------------------------------+------------------------------+
| :ref:`int<class_int>`                    | :ref:`drop_mode_flags<class_Tree_property_drop_mode_flags>`   | ``0``                        |
+------------------------------------------+---------------------------------------------------------------+------------------------------+
| :ref:`FocusMode<enum_Control_FocusMode>` | focus_mode                                                    | ``2`` *(parent override)*    |
+------------------------------------------+---------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`hide_folding<class_Tree_property_hide_folding>`         | ``false``                    |
+------------------------------------------+---------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`hide_root<class_Tree_property_hide_root>`               | ``false``                    |
+------------------------------------------+---------------------------------------------------------------+------------------------------+
| :ref:`bool<class_bool>`                  | rect_clip_content                                             | ``true`` *(parent override)* |
+------------------------------------------+---------------------------------------------------------------+------------------------------+
| :ref:`SelectMode<enum_Tree_SelectMode>`  | :ref:`select_mode<class_Tree_property_select_mode>`           | ``0``                        |
+------------------------------------------+---------------------------------------------------------------+------------------------------+

Methods
-------

+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`         | :ref:`are_column_titles_visible<class_Tree_method_are_column_titles_visible>` **(** **)** |const|                                                     |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`clear<class_Tree_method_clear>` **(** **)**                                                                                                     |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`create_item<class_Tree_method_create_item>` **(** :ref:`Object<class_Object>` parent=null, :ref:`int<class_int>` idx=-1 **)**                   |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`         | :ref:`edit_selected<class_Tree_method_edit_selected>` **(** **)**                                                                                     |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`ensure_cursor_is_visible<class_Tree_method_ensure_cursor_is_visible>` **(** **)**                                                               |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_column_at_position<class_Tree_method_get_column_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                    |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`     | :ref:`get_column_title<class_Tree_method_get_column_title>` **(** :ref:`int<class_int>` column **)** |const|                                          |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_column_width<class_Tree_method_get_column_width>` **(** :ref:`int<class_int>` column **)** |const|                                          |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`       | :ref:`get_custom_popup_rect<class_Tree_method_get_custom_popup_rect>` **(** **)** |const|                                                             |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_drop_section_at_position<class_Tree_method_get_drop_section_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|        |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_edited<class_Tree_method_get_edited>` **(** **)** |const|                                                                                   |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_edited_column<class_Tree_method_get_edited_column>` **(** **)** |const|                                                                     |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`       | :ref:`get_item_area_rect<class_Tree_method_get_item_area_rect>` **(** :ref:`Object<class_Object>` item, :ref:`int<class_int>` column=-1 **)** |const| |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_item_at_position<class_Tree_method_get_item_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                        |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_next_selected<class_Tree_method_get_next_selected>` **(** :ref:`Object<class_Object>` from **)**                                            |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_pressed_button<class_Tree_method_get_pressed_button>` **(** **)** |const|                                                                   |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_root<class_Tree_method_get_root>` **(** **)**                                                                                               |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`   | :ref:`get_scroll<class_Tree_method_get_scroll>` **(** **)** |const|                                                                                   |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_selected<class_Tree_method_get_selected>` **(** **)** |const|                                                                               |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_selected_column<class_Tree_method_get_selected_column>` **(** **)** |const|                                                                 |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`scroll_to_item<class_Tree_method_scroll_to_item>` **(** :ref:`Object<class_Object>` item **)**                                                  |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_column_expand<class_Tree_method_set_column_expand>` **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` expand **)**                |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_column_min_width<class_Tree_method_set_column_min_width>` **(** :ref:`int<class_int>` column, :ref:`int<class_int>` min_width **)**         |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_column_title<class_Tree_method_set_column_title>` **(** :ref:`int<class_int>` column, :ref:`String<class_String>` title **)**               |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_column_titles_visible<class_Tree_method_set_column_titles_visible>` **(** :ref:`bool<class_bool>` visible **)**                             |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+

Theme Properties
----------------

+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`custom_button_font_highlight<class_Tree_theme_color_custom_button_font_highlight>` | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`drop_position_color<class_Tree_theme_color_drop_position_color>`                   | ``Color( 1, 0.3, 0.2, 1 )``      |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color<class_Tree_theme_color_font_color>`                                     | ``Color( 0.69, 0.69, 0.69, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_selected<class_Tree_theme_color_font_color_selected>`                   | ``Color( 1, 1, 1, 1 )``          |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`guide_color<class_Tree_theme_color_guide_color>`                                   | ``Color( 0, 0, 0, 0.1 )``        |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`relationship_line_color<class_Tree_theme_color_relationship_line_color>`           | ``Color( 0.27, 0.27, 0.27, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`title_button_color<class_Tree_theme_color_title_button_color>`                     | ``Color( 0.88, 0.88, 0.88, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`button_margin<class_Tree_theme_constant_button_margin>`                            | ``4``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`draw_guides<class_Tree_theme_constant_draw_guides>`                                | ``1``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`draw_relationship_lines<class_Tree_theme_constant_draw_relationship_lines>`        | ``0``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`hseparation<class_Tree_theme_constant_hseparation>`                                | ``4``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`item_margin<class_Tree_theme_constant_item_margin>`                                | ``12``                           |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`scroll_border<class_Tree_theme_constant_scroll_border>`                            | ``4``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`scroll_speed<class_Tree_theme_constant_scroll_speed>`                              | ``12``                           |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`vseparation<class_Tree_theme_constant_vseparation>`                                | ``4``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Font<class_Font>`         | :ref:`font<class_Tree_theme_font_font>`                                                  |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Font<class_Font>`         | :ref:`title_button_font<class_Tree_theme_font_title_button_font>`                        |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`arrow<class_Tree_theme_icon_arrow>`                                                |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`arrow_collapsed<class_Tree_theme_icon_arrow_collapsed>`                            |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`checked<class_Tree_theme_icon_checked>`                                            |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`select_arrow<class_Tree_theme_icon_select_arrow>`                                  |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`unchecked<class_Tree_theme_icon_unchecked>`                                        |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`updown<class_Tree_theme_icon_updown>`                                              |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`bg<class_Tree_theme_style_bg>`                                                     |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`bg_focus<class_Tree_theme_style_bg_focus>`                                         |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`button_pressed<class_Tree_theme_style_button_pressed>`                             |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`cursor<class_Tree_theme_style_cursor>`                                             |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`cursor_unfocused<class_Tree_theme_style_cursor_unfocused>`                         |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`custom_button<class_Tree_theme_style_custom_button>`                               |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`custom_button_hover<class_Tree_theme_style_custom_button_hover>`                   |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`custom_button_pressed<class_Tree_theme_style_custom_button_pressed>`               |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`selected<class_Tree_theme_style_selected>`                                         |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`selected_focus<class_Tree_theme_style_selected_focus>`                             |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`title_button_hover<class_Tree_theme_style_title_button_hover>`                     |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`title_button_normal<class_Tree_theme_style_title_button_normal>`                   |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`title_button_pressed<class_Tree_theme_style_title_button_pressed>`                 |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+

Signals
-------

.. _class_Tree_signal_button_pressed:

- **button_pressed** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column, :ref:`int<class_int>` id **)**

Emitted when a button on the tree was pressed (see :ref:`TreeItem.add_button<class_TreeItem_method_add_button>`).

----

.. _class_Tree_signal_cell_selected:

- **cell_selected** **(** **)**

Emitted when a cell is selected.

----

.. _class_Tree_signal_column_title_pressed:

- **column_title_pressed** **(** :ref:`int<class_int>` column **)**

Emitted when a column's title is pressed.

----

.. _class_Tree_signal_custom_popup_edited:

- **custom_popup_edited** **(** :ref:`bool<class_bool>` arrow_clicked **)**

Emitted when a cell with the :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>` is clicked to be edited.

----

.. _class_Tree_signal_empty_rmb:

- **empty_rmb** **(** :ref:`Vector2<class_Vector2>` position **)**

Emitted when the right mouse button is pressed in the empty space of the tree.

----

.. _class_Tree_signal_empty_tree_rmb_selected:

- **empty_tree_rmb_selected** **(** :ref:`Vector2<class_Vector2>` position **)**

Emitted when the right mouse button is pressed if right mouse button selection is active and the tree is empty.

----

.. _class_Tree_signal_item_activated:

- **item_activated** **(** **)**

Emitted when an item's label is double-clicked.

----

.. _class_Tree_signal_item_collapsed:

- **item_collapsed** **(** :ref:`TreeItem<class_TreeItem>` item **)**

Emitted when an item is collapsed by a click on the folding arrow.

----

.. _class_Tree_signal_item_custom_button_pressed:

- **item_custom_button_pressed** **(** **)**

Emitted when a custom button is pressed (i.e. in a :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>` mode cell).

----

.. _class_Tree_signal_item_double_clicked:

- **item_double_clicked** **(** **)**

Emitted when an item's icon is double-clicked.

----

.. _class_Tree_signal_item_edited:

- **item_edited** **(** **)**

Emitted when an item is edited.

----

.. _class_Tree_signal_item_rmb_edited:

- **item_rmb_edited** **(** **)**

Emitted when an item is edited using the right mouse button.

----

.. _class_Tree_signal_item_rmb_selected:

- **item_rmb_selected** **(** :ref:`Vector2<class_Vector2>` position **)**

Emitted when an item is selected with the right mouse button.

----

.. _class_Tree_signal_item_selected:

- **item_selected** **(** **)**

Emitted when an item is selected.

----

.. _class_Tree_signal_multi_selected:

- **multi_selected** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column, :ref:`bool<class_bool>` selected **)**

Emitted instead of ``item_selected`` if ``select_mode`` is :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>`.

----

.. _class_Tree_signal_nothing_selected:

- **nothing_selected** **(** **)**

Emitted when a left mouse button click does not select any item.

Enumerations
------------

.. _enum_Tree_SelectMode:

.. _class_Tree_constant_SELECT_SINGLE:

.. _class_Tree_constant_SELECT_ROW:

.. _class_Tree_constant_SELECT_MULTI:

enum **SelectMode**:

- **SELECT_SINGLE** = **0** --- Allows selection of a single cell at a time. From the perspective of items, only a single item is allowed to be selected. And there is only one column selected in the selected item.

The focus cursor is always hidden in this mode, but it is positioned at the current selection, making the currently selected item the currently focused item.

- **SELECT_ROW** = **1** --- Allows selection of a single row at a time. From the perspective of items, only a single items is allowed to be selected. And all the columns are selected in the selected item.

The focus cursor is always hidden in this mode, but it is positioned at the first column of the current selection, making the currently selected item the currently focused item.

- **SELECT_MULTI** = **2** --- Allows selection of multiple cells at the same time. From the perspective of items, multiple items are allowed to be selected. And there can be multiple columns selected in each selected item.

The focus cursor is visible in this mode, the item or column under the cursor is not necessarily selected.

----

.. _enum_Tree_DropModeFlags:

.. _class_Tree_constant_DROP_MODE_DISABLED:

.. _class_Tree_constant_DROP_MODE_ON_ITEM:

.. _class_Tree_constant_DROP_MODE_INBETWEEN:

enum **DropModeFlags**:

- **DROP_MODE_DISABLED** = **0** --- Disables all drop sections, but still allows to detect the "on item" drop section by :ref:`get_drop_section_at_position<class_Tree_method_get_drop_section_at_position>`.

**Note:** This is the default flag, it has no effect when combined with other flags.

- **DROP_MODE_ON_ITEM** = **1** --- Enables the "on item" drop section. This drop section covers the entire item.

When combined with :ref:`DROP_MODE_INBETWEEN<class_Tree_constant_DROP_MODE_INBETWEEN>`, this drop section halves the height and stays centered vertically.

- **DROP_MODE_INBETWEEN** = **2** --- Enables "above item" and "below item" drop sections. The "above item" drop section covers the top half of the item, and the "below item" drop section covers the bottom half.

When combined with :ref:`DROP_MODE_ON_ITEM<class_Tree_constant_DROP_MODE_ON_ITEM>`, these drop sections halves the height and stays on top / bottom accordingly.

Property Descriptions
---------------------

.. _class_Tree_property_allow_reselect:

- :ref:`bool<class_bool>` **allow_reselect**

+-----------+---------------------------+
| *Default* | ``false``                 |
+-----------+---------------------------+
| *Setter*  | set_allow_reselect(value) |
+-----------+---------------------------+
| *Getter*  | get_allow_reselect()      |
+-----------+---------------------------+

If ``true``, the currently selected cell may be selected again.

----

.. _class_Tree_property_allow_rmb_select:

- :ref:`bool<class_bool>` **allow_rmb_select**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_allow_rmb_select(value) |
+-----------+-----------------------------+
| *Getter*  | get_allow_rmb_select()      |
+-----------+-----------------------------+

If ``true``, a right mouse button click can select items.

----

.. _class_Tree_property_columns:

- :ref:`int<class_int>` **columns**

+-----------+--------------------+
| *Default* | ``1``              |
+-----------+--------------------+
| *Setter*  | set_columns(value) |
+-----------+--------------------+
| *Getter*  | get_columns()      |
+-----------+--------------------+

The number of columns.

----

.. _class_Tree_property_drop_mode_flags:

- :ref:`int<class_int>` **drop_mode_flags**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_drop_mode_flags(value) |
+-----------+----------------------------+
| *Getter*  | get_drop_mode_flags()      |
+-----------+----------------------------+

The drop mode as an OR combination of flags. See :ref:`DropModeFlags<enum_Tree_DropModeFlags>` constants. Once dropping is done, reverts to :ref:`DROP_MODE_DISABLED<class_Tree_constant_DROP_MODE_DISABLED>`. Setting this during :ref:`Control.can_drop_data<class_Control_method_can_drop_data>` is recommended.

This controls the drop sections, i.e. the decision and drawing of possible drop locations based on the mouse position.

----

.. _class_Tree_property_hide_folding:

- :ref:`bool<class_bool>` **hide_folding**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_hide_folding(value) |
+-----------+-------------------------+
| *Getter*  | is_folding_hidden()     |
+-----------+-------------------------+

If ``true``, the folding arrow is hidden.

----

.. _class_Tree_property_hide_root:

- :ref:`bool<class_bool>` **hide_root**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_hide_root(value) |
+-----------+----------------------+
| *Getter*  | is_root_hidden()     |
+-----------+----------------------+

If ``true``, the tree's root is hidden.

----

.. _class_Tree_property_select_mode:

- :ref:`SelectMode<enum_Tree_SelectMode>` **select_mode**

+-----------+------------------------+
| *Default* | ``0``                  |
+-----------+------------------------+
| *Setter*  | set_select_mode(value) |
+-----------+------------------------+
| *Getter*  | get_select_mode()      |
+-----------+------------------------+

Allows single or multiple selection. See the :ref:`SelectMode<enum_Tree_SelectMode>` constants.

Method Descriptions
-------------------

.. _class_Tree_method_are_column_titles_visible:

- :ref:`bool<class_bool>` **are_column_titles_visible** **(** **)** |const|

Returns ``true`` if the column titles are being shown.

----

.. _class_Tree_method_clear:

- void **clear** **(** **)**

Clears the tree. This removes all items.

----

.. _class_Tree_method_create_item:

- :ref:`TreeItem<class_TreeItem>` **create_item** **(** :ref:`Object<class_Object>` parent=null, :ref:`int<class_int>` idx=-1 **)**

Creates an item in the tree and adds it as a child of ``parent``, which can be either a valid :ref:`TreeItem<class_TreeItem>` or ``null``.

If ``parent`` is ``null``, the root item will be the parent, or the new item will be the root itself if the tree is empty.

The new item will be the ``idx``\ th child of parent, or it will be the last child if there are not enough siblings.

----

.. _class_Tree_method_edit_selected:

- :ref:`bool<class_bool>` **edit_selected** **(** **)**

Edits the selected tree item as if it was clicked. The item must be set editable with :ref:`TreeItem.set_editable<class_TreeItem_method_set_editable>`. Returns ``true`` if the item could be edited. Fails if no item is selected.

----

.. _class_Tree_method_ensure_cursor_is_visible:

- void **ensure_cursor_is_visible** **(** **)**

Makes the currently focused cell visible.

This will scroll the tree if necessary. In :ref:`SELECT_ROW<class_Tree_constant_SELECT_ROW>` mode, this will not do horizontal scrolling, as all the cells in the selected row is focused logically.

**Note:** Despite the name of this method, the focus cursor itself is only visible in :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>` mode.

----

.. _class_Tree_method_get_column_at_position:

- :ref:`int<class_int>` **get_column_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

Returns the column index at ``position``, or -1 if no item is there.

----

.. _class_Tree_method_get_column_title:

- :ref:`String<class_String>` **get_column_title** **(** :ref:`int<class_int>` column **)** |const|

Returns the column's title.

----

.. _class_Tree_method_get_column_width:

- :ref:`int<class_int>` **get_column_width** **(** :ref:`int<class_int>` column **)** |const|

Returns the column's width in pixels.

----

.. _class_Tree_method_get_custom_popup_rect:

- :ref:`Rect2<class_Rect2>` **get_custom_popup_rect** **(** **)** |const|

Returns the rectangle for custom popups. Helper to create custom cell controls that display a popup. See :ref:`TreeItem.set_cell_mode<class_TreeItem_method_set_cell_mode>`.

----

.. _class_Tree_method_get_drop_section_at_position:

- :ref:`int<class_int>` **get_drop_section_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

Returns the drop section at ``position``, or -100 if no item is there.

Values -1, 0, or 1 will be returned for the "above item", "on item", and "below item" drop sections, respectively. See :ref:`DropModeFlags<enum_Tree_DropModeFlags>` for a description of each drop section.

To get the item which the returned drop section is relative to, use :ref:`get_item_at_position<class_Tree_method_get_item_at_position>`.

----

.. _class_Tree_method_get_edited:

- :ref:`TreeItem<class_TreeItem>` **get_edited** **(** **)** |const|

Returns the currently edited item. Can be used with :ref:`item_edited<class_Tree_signal_item_edited>` to get the item that was modified.

::

    func _ready():
        $Tree.connect("item_edited", self, "on_Tree_item_edited")
    
    func on_Tree_item_edited():
        print($Tree.get_edited()) # This item just got edited (e.g. checked).

----

.. _class_Tree_method_get_edited_column:

- :ref:`int<class_int>` **get_edited_column** **(** **)** |const|

Returns the column for the currently edited item.

----

.. _class_Tree_method_get_item_area_rect:

- :ref:`Rect2<class_Rect2>` **get_item_area_rect** **(** :ref:`Object<class_Object>` item, :ref:`int<class_int>` column=-1 **)** |const|

Returns the rectangle area for the specified :ref:`TreeItem<class_TreeItem>`. If ``column`` is specified, only get the position and size of that column, otherwise get the rectangle containing all columns.

----

.. _class_Tree_method_get_item_at_position:

- :ref:`TreeItem<class_TreeItem>` **get_item_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

Returns the tree item at the specified position (relative to the tree origin position).

----

.. _class_Tree_method_get_next_selected:

- :ref:`TreeItem<class_TreeItem>` **get_next_selected** **(** :ref:`Object<class_Object>` from **)**

Returns the next selected :ref:`TreeItem<class_TreeItem>` after the given one, or ``null`` if the end is reached.

If ``from`` is ``null``, this returns the first selected item.

----

.. _class_Tree_method_get_pressed_button:

- :ref:`int<class_int>` **get_pressed_button** **(** **)** |const|

Returns the last pressed button's index.

----

.. _class_Tree_method_get_root:

- :ref:`TreeItem<class_TreeItem>` **get_root** **(** **)**

Returns the tree's root item, or ``null`` if the tree is empty.

----

.. _class_Tree_method_get_scroll:

- :ref:`Vector2<class_Vector2>` **get_scroll** **(** **)** |const|

Returns the current scrolling position.

----

.. _class_Tree_method_get_selected:

- :ref:`TreeItem<class_TreeItem>` **get_selected** **(** **)** |const|

Returns the currently focused item, or ``null`` if no item is focused.

In :ref:`SELECT_ROW<class_Tree_constant_SELECT_ROW>` and :ref:`SELECT_SINGLE<class_Tree_constant_SELECT_SINGLE>` modes, the focused item is same as the selected item. In :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>` mode, the focused item is the item under the focus cursor, not necessarily selected.

To get the currently selected item(s), use :ref:`get_next_selected<class_Tree_method_get_next_selected>`.

----

.. _class_Tree_method_get_selected_column:

- :ref:`int<class_int>` **get_selected_column** **(** **)** |const|

Returns the currently focused column, or -1 if no column is focused.

In :ref:`SELECT_SINGLE<class_Tree_constant_SELECT_SINGLE>` mode, the focused column is the selected column. In :ref:`SELECT_ROW<class_Tree_constant_SELECT_ROW>` mode, the focused column is always 0 if any item is selected. In :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>` mode, the focused column is the column under the focus cursor, and there are not necessarily any column selected.

To tell whether a column of an item is selected, use :ref:`TreeItem.is_selected<class_TreeItem_method_is_selected>`.

----

.. _class_Tree_method_scroll_to_item:

- void **scroll_to_item** **(** :ref:`Object<class_Object>` item **)**

Causes the ``Tree`` to jump to the specified :ref:`TreeItem<class_TreeItem>`.

----

.. _class_Tree_method_set_column_expand:

- void **set_column_expand** **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` expand **)**

If ``true``, the column will have the "Expand" flag of :ref:`Control<class_Control>`. Columns that have the "Expand" flag will use their "min_width" in a similar fashion to :ref:`Control.size_flags_stretch_ratio<class_Control_property_size_flags_stretch_ratio>`.

----

.. _class_Tree_method_set_column_min_width:

- void **set_column_min_width** **(** :ref:`int<class_int>` column, :ref:`int<class_int>` min_width **)**

Sets the minimum width of a column. Columns that have the "Expand" flag will use their "min_width" in a similar fashion to :ref:`Control.size_flags_stretch_ratio<class_Control_property_size_flags_stretch_ratio>`.

----

.. _class_Tree_method_set_column_title:

- void **set_column_title** **(** :ref:`int<class_int>` column, :ref:`String<class_String>` title **)**

Sets the title of a column.

----

.. _class_Tree_method_set_column_titles_visible:

- void **set_column_titles_visible** **(** :ref:`bool<class_bool>` visible **)**

If ``true``, column titles are visible.

Theme Property Descriptions
---------------------------

.. _class_Tree_theme_color_custom_button_font_highlight:

- :ref:`Color<class_Color>` **custom_button_font_highlight**

+-----------+----------------------------------+
| *Default* | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+-----------+----------------------------------+

Text :ref:`Color<class_Color>` for a :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>` mode cell when it's hovered.

----

.. _class_Tree_theme_color_drop_position_color:

- :ref:`Color<class_Color>` **drop_position_color**

+-----------+-----------------------------+
| *Default* | ``Color( 1, 0.3, 0.2, 1 )`` |
+-----------+-----------------------------+

:ref:`Color<class_Color>` used to draw possible drop locations. See :ref:`DropModeFlags<enum_Tree_DropModeFlags>` constants for further description of drop locations.

----

.. _class_Tree_theme_color_font_color:

- :ref:`Color<class_Color>` **font_color**

+-----------+----------------------------------+
| *Default* | ``Color( 0.69, 0.69, 0.69, 1 )`` |
+-----------+----------------------------------+

Default text :ref:`Color<class_Color>` of the item.

----

.. _class_Tree_theme_color_font_color_selected:

- :ref:`Color<class_Color>` **font_color_selected**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

Text :ref:`Color<class_Color>` used when the item is selected.

----

.. _class_Tree_theme_color_guide_color:

- :ref:`Color<class_Color>` **guide_color**

+-----------+---------------------------+
| *Default* | ``Color( 0, 0, 0, 0.1 )`` |
+-----------+---------------------------+

:ref:`Color<class_Color>` of the guideline.

----

.. _class_Tree_theme_color_relationship_line_color:

- :ref:`Color<class_Color>` **relationship_line_color**

+-----------+----------------------------------+
| *Default* | ``Color( 0.27, 0.27, 0.27, 1 )`` |
+-----------+----------------------------------+

:ref:`Color<class_Color>` of the relationship lines.

----

.. _class_Tree_theme_color_title_button_color:

- :ref:`Color<class_Color>` **title_button_color**

+-----------+----------------------------------+
| *Default* | ``Color( 0.88, 0.88, 0.88, 1 )`` |
+-----------+----------------------------------+

Default text :ref:`Color<class_Color>` of the title button.

----

.. _class_Tree_theme_constant_button_margin:

- :ref:`int<class_int>` **button_margin**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

The horizontal space between each button in a cell.

----

.. _class_Tree_theme_constant_draw_guides:

- :ref:`int<class_int>` **draw_guides**

+-----------+-------+
| *Default* | ``1`` |
+-----------+-------+

Draws the guidelines if not zero, this acts as a boolean. The guideline is a horizontal line drawn at the bottom of each item.

----

.. _class_Tree_theme_constant_draw_relationship_lines:

- :ref:`int<class_int>` **draw_relationship_lines**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

Draws the relationship lines if not zero, this acts as a boolean. Relationship lines are drawn at the start of child items to show hierarchy.

----

.. _class_Tree_theme_constant_hseparation:

- :ref:`int<class_int>` **hseparation**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

The horizontal space between item cells. This is also used as the margin at the start of an item when folding is disabled.

----

.. _class_Tree_theme_constant_item_margin:

- :ref:`int<class_int>` **item_margin**

+-----------+--------+
| *Default* | ``12`` |
+-----------+--------+

The horizontal margin at the start of an item. This is used when folding is enabled for the item.

----

.. _class_Tree_theme_constant_scroll_border:

- :ref:`int<class_int>` **scroll_border**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

The maximum distance between the mouse cursor and the control's border to trigger border scrolling when dragging.

----

.. _class_Tree_theme_constant_scroll_speed:

- :ref:`int<class_int>` **scroll_speed**

+-----------+--------+
| *Default* | ``12`` |
+-----------+--------+

The speed of border scrolling.

----

.. _class_Tree_theme_constant_vseparation:

- :ref:`int<class_int>` **vseparation**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

The vertical padding inside each item, i.e. the distance between the item's content and top/bottom border.

----

.. _class_Tree_theme_font_font:

- :ref:`Font<class_Font>` **font**

:ref:`Font<class_Font>` of the item's text.

----

.. _class_Tree_theme_font_title_button_font:

- :ref:`Font<class_Font>` **title_button_font**

:ref:`Font<class_Font>` of the title button's text.

----

.. _class_Tree_theme_icon_arrow:

- :ref:`Texture<class_Texture>` **arrow**

The arrow icon used when a foldable item is not collapsed.

----

.. _class_Tree_theme_icon_arrow_collapsed:

- :ref:`Texture<class_Texture>` **arrow_collapsed**

The arrow icon used when a foldable item is collapsed.

----

.. _class_Tree_theme_icon_checked:

- :ref:`Texture<class_Texture>` **checked**

The check icon to display when the :ref:`TreeItem.CELL_MODE_CHECK<class_TreeItem_constant_CELL_MODE_CHECK>` mode cell is checked.

----

.. _class_Tree_theme_icon_select_arrow:

- :ref:`Texture<class_Texture>` **select_arrow**

The arrow icon to display for the :ref:`TreeItem.CELL_MODE_RANGE<class_TreeItem_constant_CELL_MODE_RANGE>` mode cell.

----

.. _class_Tree_theme_icon_unchecked:

- :ref:`Texture<class_Texture>` **unchecked**

The check icon to display when the :ref:`TreeItem.CELL_MODE_CHECK<class_TreeItem_constant_CELL_MODE_CHECK>` mode cell is unchecked.

----

.. _class_Tree_theme_icon_updown:

- :ref:`Texture<class_Texture>` **updown**

The updown arrow icon to display for the :ref:`TreeItem.CELL_MODE_RANGE<class_TreeItem_constant_CELL_MODE_RANGE>` mode cell.

----

.. _class_Tree_theme_style_bg:

- :ref:`StyleBox<class_StyleBox>` **bg**

Default :ref:`StyleBox<class_StyleBox>` for the ``Tree``, i.e. used when the control is not being focused.

----

.. _class_Tree_theme_style_bg_focus:

- :ref:`StyleBox<class_StyleBox>` **bg_focus**

:ref:`StyleBox<class_StyleBox>` used when the ``Tree`` is being focused.

----

.. _class_Tree_theme_style_button_pressed:

- :ref:`StyleBox<class_StyleBox>` **button_pressed**

:ref:`StyleBox<class_StyleBox>` used when a button in the tree is pressed.

----

.. _class_Tree_theme_style_cursor:

- :ref:`StyleBox<class_StyleBox>` **cursor**

:ref:`StyleBox<class_StyleBox>` used for the cursor, when the ``Tree`` is being focused.

----

.. _class_Tree_theme_style_cursor_unfocused:

- :ref:`StyleBox<class_StyleBox>` **cursor_unfocused**

:ref:`StyleBox<class_StyleBox>` used for the cursor, when the ``Tree`` is not being focused.

----

.. _class_Tree_theme_style_custom_button:

- :ref:`StyleBox<class_StyleBox>` **custom_button**

Default :ref:`StyleBox<class_StyleBox>` for a :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>` mode cell.

----

.. _class_Tree_theme_style_custom_button_hover:

- :ref:`StyleBox<class_StyleBox>` **custom_button_hover**

:ref:`StyleBox<class_StyleBox>` for a :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>` mode cell when it's hovered.

----

.. _class_Tree_theme_style_custom_button_pressed:

- :ref:`StyleBox<class_StyleBox>` **custom_button_pressed**

:ref:`StyleBox<class_StyleBox>` for a :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>` mode cell when it's pressed.

----

.. _class_Tree_theme_style_selected:

- :ref:`StyleBox<class_StyleBox>` **selected**

:ref:`StyleBox<class_StyleBox>` for the selected items, used when the ``Tree`` is not being focused.

----

.. _class_Tree_theme_style_selected_focus:

- :ref:`StyleBox<class_StyleBox>` **selected_focus**

:ref:`StyleBox<class_StyleBox>` for the selected items, used when the ``Tree`` is being focused.

----

.. _class_Tree_theme_style_title_button_hover:

- :ref:`StyleBox<class_StyleBox>` **title_button_hover**

:ref:`StyleBox<class_StyleBox>` used when the title button is being hovered.

----

.. _class_Tree_theme_style_title_button_normal:

- :ref:`StyleBox<class_StyleBox>` **title_button_normal**

Default :ref:`StyleBox<class_StyleBox>` for the title button.

----

.. _class_Tree_theme_style_title_button_pressed:

- :ref:`StyleBox<class_StyleBox>` **title_button_pressed**

:ref:`StyleBox<class_StyleBox>` used when the title button is being pressed.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
