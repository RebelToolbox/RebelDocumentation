:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CameraFeed.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CameraFeed:

CameraFeed
==========

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

A camera feed gives you access to a single physical camera attached to your device.

Description
-----------

A camera feed gives you access to a single physical camera attached to your device. When enabled, Godot will start capturing frames from the camera which can then be used. See also :ref:`CameraServer<class_CameraServer>`.

**Note:** Many cameras will return YCbCr images which are split into two textures and need to be combined in a shader. Godot does this automatically for you if you set the environment to show the camera image in the background.

Properties
----------

+---------------------------------------+-----------------------------------------------------------------+--------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`feed_is_active<class_CameraFeed_property_feed_is_active>` | ``false``                            |
+---------------------------------------+-----------------------------------------------------------------+--------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`feed_transform<class_CameraFeed_property_feed_transform>` | ``Transform2D( 1, 0, 0, -1, 0, 1 )`` |
+---------------------------------------+-----------------------------------------------------------------+--------------------------------------+

Methods
-------

+---------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`int<class_int>`                             | :ref:`get_id<class_CameraFeed_method_get_id>` **(** **)** |const|             |
+---------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`String<class_String>`                       | :ref:`get_name<class_CameraFeed_method_get_name>` **(** **)** |const|         |
+---------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`FeedPosition<enum_CameraFeed_FeedPosition>` | :ref:`get_position<class_CameraFeed_method_get_position>` **(** **)** |const| |
+---------------------------------------------------+-------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_CameraFeed_FeedDataType:

.. _class_CameraFeed_constant_FEED_NOIMAGE:

.. _class_CameraFeed_constant_FEED_RGB:

.. _class_CameraFeed_constant_FEED_YCBCR:

.. _class_CameraFeed_constant_FEED_YCBCR_SEP:

enum **FeedDataType**:

- **FEED_NOIMAGE** = **0** --- No image set for the feed.

- **FEED_RGB** = **1** --- Feed supplies RGB images.

- **FEED_YCBCR** = **2** --- Feed supplies YCbCr images that need to be converted to RGB.

- **FEED_YCBCR_SEP** = **3** --- Feed supplies separate Y and CbCr images that need to be combined and converted to RGB.

----

.. _enum_CameraFeed_FeedPosition:

.. _class_CameraFeed_constant_FEED_UNSPECIFIED:

.. _class_CameraFeed_constant_FEED_FRONT:

.. _class_CameraFeed_constant_FEED_BACK:

enum **FeedPosition**:

- **FEED_UNSPECIFIED** = **0** --- Unspecified position.

- **FEED_FRONT** = **1** --- Camera is mounted at the front of the device.

- **FEED_BACK** = **2** --- Camera is mounted at the back of the device.

Property Descriptions
---------------------

.. _class_CameraFeed_property_feed_is_active:

- :ref:`bool<class_bool>` **feed_is_active**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_active(value) |
+-----------+-------------------+
| *Getter*  | is_active()       |
+-----------+-------------------+

If ``true``, the feed is active.

----

.. _class_CameraFeed_property_feed_transform:

- :ref:`Transform2D<class_Transform2D>` **feed_transform**

+-----------+--------------------------------------+
| *Default* | ``Transform2D( 1, 0, 0, -1, 0, 1 )`` |
+-----------+--------------------------------------+
| *Setter*  | set_transform(value)                 |
+-----------+--------------------------------------+
| *Getter*  | get_transform()                      |
+-----------+--------------------------------------+

The transform applied to the camera's image.

Method Descriptions
-------------------

.. _class_CameraFeed_method_get_id:

- :ref:`int<class_int>` **get_id** **(** **)** |const|

Returns the unique ID for this feed.

----

.. _class_CameraFeed_method_get_name:

- :ref:`String<class_String>` **get_name** **(** **)** |const|

Returns the camera's name.

----

.. _class_CameraFeed_method_get_position:

- :ref:`FeedPosition<enum_CameraFeed_FeedPosition>` **get_position** **(** **)** |const|

Returns the position of camera on the device.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
