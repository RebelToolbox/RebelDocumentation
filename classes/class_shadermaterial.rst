:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ShaderMaterial.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ShaderMaterial:

ShaderMaterial
==============

**Inherits:** :ref:`Material<class_Material>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

A material that uses a custom :ref:`Shader<class_Shader>` program.

Description
-----------

A material that uses a custom :ref:`Shader<class_Shader>` program to render either items to screen or process particles. You can create multiple materials for the same shader but configure different values for the uniforms defined in the shader.

**Note:** Due to a renderer limitation, emissive ``ShaderMaterial``\ s cannot emit light when used in a :ref:`GIProbe<class_GIProbe>`. Only emissive :ref:`SpatialMaterial<class_SpatialMaterial>`\ s can emit light in a :ref:`GIProbe<class_GIProbe>`.

Tutorials
---------

- :doc:`../tutorials/shaders/index`

Properties
----------

+-----------------------------+-----------------------------------------------------+
| :ref:`Shader<class_Shader>` | :ref:`shader<class_ShaderMaterial_property_shader>` |
+-----------------------------+-----------------------------------------------------+

Methods
-------

+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`get_shader_param<class_ShaderMaterial_method_get_shader_param>` **(** :ref:`String<class_String>` param **)** |const|                              |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`property_can_revert<class_ShaderMaterial_method_property_can_revert>` **(** :ref:`String<class_String>` name **)**                                 |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`property_get_revert<class_ShaderMaterial_method_property_get_revert>` **(** :ref:`String<class_String>` name **)**                                 |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_shader_param<class_ShaderMaterial_method_set_shader_param>` **(** :ref:`String<class_String>` param, :ref:`Variant<class_Variant>` value **)** |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_ShaderMaterial_property_shader:

- :ref:`Shader<class_Shader>` **shader**

+----------+-------------------+
| *Setter* | set_shader(value) |
+----------+-------------------+
| *Getter* | get_shader()      |
+----------+-------------------+

The :ref:`Shader<class_Shader>` program used to render this material.

Method Descriptions
-------------------

.. _class_ShaderMaterial_method_get_shader_param:

- :ref:`Variant<class_Variant>` **get_shader_param** **(** :ref:`String<class_String>` param **)** |const|

Returns the current value set for this material of a uniform in the shader.

----

.. _class_ShaderMaterial_method_property_can_revert:

- :ref:`bool<class_bool>` **property_can_revert** **(** :ref:`String<class_String>` name **)**

Returns ``true`` if the property identified by ``name`` can be reverted to a default value.

----

.. _class_ShaderMaterial_method_property_get_revert:

- :ref:`Variant<class_Variant>` **property_get_revert** **(** :ref:`String<class_String>` name **)**

Returns the default value of the material property with given ``name``.

----

.. _class_ShaderMaterial_method_set_shader_param:

- void **set_shader_param** **(** :ref:`String<class_String>` param, :ref:`Variant<class_Variant>` value **)**

Changes the value set for this material of a uniform in the shader.

**Note:** ``param`` must match the name of the uniform in the code exactly.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
