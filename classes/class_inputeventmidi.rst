:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the InputEventMIDI.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_InputEventMIDI:

InputEventMIDI
==============

**Inherits:** :ref:`InputEvent<class_InputEvent>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`



Properties
----------

+-----------------------+---------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`channel<class_InputEventMIDI_property_channel>`                     | ``0`` |
+-----------------------+---------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`controller_number<class_InputEventMIDI_property_controller_number>` | ``0`` |
+-----------------------+---------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`controller_value<class_InputEventMIDI_property_controller_value>`   | ``0`` |
+-----------------------+---------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`instrument<class_InputEventMIDI_property_instrument>`               | ``0`` |
+-----------------------+---------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`message<class_InputEventMIDI_property_message>`                     | ``0`` |
+-----------------------+---------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`pitch<class_InputEventMIDI_property_pitch>`                         | ``0`` |
+-----------------------+---------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`pressure<class_InputEventMIDI_property_pressure>`                   | ``0`` |
+-----------------------+---------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`velocity<class_InputEventMIDI_property_velocity>`                   | ``0`` |
+-----------------------+---------------------------------------------------------------------------+-------+

Property Descriptions
---------------------

.. _class_InputEventMIDI_property_channel:

- :ref:`int<class_int>` **channel**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_channel(value) |
+-----------+--------------------+
| *Getter*  | get_channel()      |
+-----------+--------------------+

----

.. _class_InputEventMIDI_property_controller_number:

- :ref:`int<class_int>` **controller_number**

+-----------+------------------------------+
| *Default* | ``0``                        |
+-----------+------------------------------+
| *Setter*  | set_controller_number(value) |
+-----------+------------------------------+
| *Getter*  | get_controller_number()      |
+-----------+------------------------------+

----

.. _class_InputEventMIDI_property_controller_value:

- :ref:`int<class_int>` **controller_value**

+-----------+-----------------------------+
| *Default* | ``0``                       |
+-----------+-----------------------------+
| *Setter*  | set_controller_value(value) |
+-----------+-----------------------------+
| *Getter*  | get_controller_value()      |
+-----------+-----------------------------+

----

.. _class_InputEventMIDI_property_instrument:

- :ref:`int<class_int>` **instrument**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_instrument(value) |
+-----------+-----------------------+
| *Getter*  | get_instrument()      |
+-----------+-----------------------+

----

.. _class_InputEventMIDI_property_message:

- :ref:`int<class_int>` **message**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_message(value) |
+-----------+--------------------+
| *Getter*  | get_message()      |
+-----------+--------------------+

----

.. _class_InputEventMIDI_property_pitch:

- :ref:`int<class_int>` **pitch**

+-----------+------------------+
| *Default* | ``0``            |
+-----------+------------------+
| *Setter*  | set_pitch(value) |
+-----------+------------------+
| *Getter*  | get_pitch()      |
+-----------+------------------+

----

.. _class_InputEventMIDI_property_pressure:

- :ref:`int<class_int>` **pressure**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_pressure(value) |
+-----------+---------------------+
| *Getter*  | get_pressure()      |
+-----------+---------------------+

----

.. _class_InputEventMIDI_property_velocity:

- :ref:`int<class_int>` **velocity**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_velocity(value) |
+-----------+---------------------+
| *Getter*  | get_velocity()      |
+-----------+---------------------+

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
