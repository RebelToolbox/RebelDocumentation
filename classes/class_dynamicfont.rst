:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the DynamicFont.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_DynamicFont:

DynamicFont
===========

**Inherits:** :ref:`Font<class_Font>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

DynamicFont renders vector font files at runtime.

Description
-----------

DynamicFont renders vector font files dynamically at runtime instead of using a prerendered texture atlas like :ref:`BitmapFont<class_BitmapFont>`. This trades the faster loading time of :ref:`BitmapFont<class_BitmapFont>`\ s for the ability to change font parameters like size and spacing during runtime. :ref:`DynamicFontData<class_DynamicFontData>` is used for referencing the font file paths. DynamicFont also supports defining one or more fallback fonts, which will be used when displaying a character not supported by the main font.

DynamicFont uses the `FreeType <https://www.freetype.org/>`__ library for rasterization. Supported formats are TrueType (``.ttf``), OpenType (``.otf``) and Web Open Font Format 1 (``.woff``). Web Open Font Format 2 (``.woff2``) is *not* supported.

::

    var dynamic_font = DynamicFont.new()
    dynamic_font.font_data = load("res://BarlowCondensed-Bold.ttf")
    dynamic_font.size = 64
    $"Label".set("custom_fonts/font", dynamic_font)

**Note:** DynamicFont doesn't support features such as kerning, right-to-left typesetting, ligatures, text shaping, variable fonts and optional font features yet. If you wish to "bake" an optional font feature into a TTF font file, you can use `FontForge <https://fontforge.org/>`__ to do so. In FontForge, use **File > Generate Fonts**, click **Options**, choose the desired features then generate the font.

Tutorials
---------

- `3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__

Properties
----------

+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`extra_spacing_bottom<class_DynamicFont_property_extra_spacing_bottom>` | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`extra_spacing_char<class_DynamicFont_property_extra_spacing_char>`     | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`extra_spacing_space<class_DynamicFont_property_extra_spacing_space>`   | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`extra_spacing_top<class_DynamicFont_property_extra_spacing_top>`       | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`DynamicFontData<class_DynamicFontData>` | :ref:`font_data<class_DynamicFont_property_font_data>`                       |                         |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                     | :ref:`outline_color<class_DynamicFont_property_outline_color>`               | ``Color( 1, 1, 1, 1 )`` |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`outline_size<class_DynamicFont_property_outline_size>`                 | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`size<class_DynamicFont_property_size>`                                 | ``16``                  |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                       | :ref:`use_filter<class_DynamicFont_property_use_filter>`                     | ``false``               |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                       | :ref:`use_mipmaps<class_DynamicFont_property_use_mipmaps>`                   | ``false``               |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+

Methods
-------

+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`add_fallback<class_DynamicFont_method_add_fallback>` **(** :ref:`DynamicFontData<class_DynamicFontData>` data **)**                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_available_chars<class_DynamicFont_method_get_available_chars>` **(** **)** |const|                                                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`DynamicFontData<class_DynamicFontData>` | :ref:`get_fallback<class_DynamicFont_method_get_fallback>` **(** :ref:`int<class_int>` idx **)** |const|                                             |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_fallback_count<class_DynamicFont_method_get_fallback_count>` **(** **)** |const|                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_spacing<class_DynamicFont_method_get_spacing>` **(** :ref:`int<class_int>` type **)** |const|                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`remove_fallback<class_DynamicFont_method_remove_fallback>` **(** :ref:`int<class_int>` idx **)**                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_fallback<class_DynamicFont_method_set_fallback>` **(** :ref:`int<class_int>` idx, :ref:`DynamicFontData<class_DynamicFontData>` data **)** |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_spacing<class_DynamicFont_method_set_spacing>` **(** :ref:`int<class_int>` type, :ref:`int<class_int>` value **)**                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_DynamicFont_SpacingType:

.. _class_DynamicFont_constant_SPACING_TOP:

.. _class_DynamicFont_constant_SPACING_BOTTOM:

.. _class_DynamicFont_constant_SPACING_CHAR:

.. _class_DynamicFont_constant_SPACING_SPACE:

enum **SpacingType**:

- **SPACING_TOP** = **0** --- Spacing at the top.

- **SPACING_BOTTOM** = **1** --- Spacing at the bottom.

- **SPACING_CHAR** = **2** --- Spacing for each character.

- **SPACING_SPACE** = **3** --- Spacing for the space character.

Property Descriptions
---------------------

.. _class_DynamicFont_property_extra_spacing_bottom:

- :ref:`int<class_int>` **extra_spacing_bottom**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_spacing(value) |
+-----------+--------------------+
| *Getter*  | get_spacing()      |
+-----------+--------------------+

Extra spacing at the bottom in pixels.

----

.. _class_DynamicFont_property_extra_spacing_char:

- :ref:`int<class_int>` **extra_spacing_char**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_spacing(value) |
+-----------+--------------------+
| *Getter*  | get_spacing()      |
+-----------+--------------------+

Extra spacing for each character in pixels.

This can be a negative number to make the distance between characters smaller.

----

.. _class_DynamicFont_property_extra_spacing_space:

- :ref:`int<class_int>` **extra_spacing_space**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_spacing(value) |
+-----------+--------------------+
| *Getter*  | get_spacing()      |
+-----------+--------------------+

Extra spacing for the space character (in addition to :ref:`extra_spacing_char<class_DynamicFont_property_extra_spacing_char>`) in pixels.

This can be a negative number to make the distance between words smaller.

----

.. _class_DynamicFont_property_extra_spacing_top:

- :ref:`int<class_int>` **extra_spacing_top**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_spacing(value) |
+-----------+--------------------+
| *Getter*  | get_spacing()      |
+-----------+--------------------+

Extra spacing at the top in pixels.

----

.. _class_DynamicFont_property_font_data:

- :ref:`DynamicFontData<class_DynamicFontData>` **font_data**

+----------+----------------------+
| *Setter* | set_font_data(value) |
+----------+----------------------+
| *Getter* | get_font_data()      |
+----------+----------------------+

The font data.

----

.. _class_DynamicFont_property_outline_color:

- :ref:`Color<class_Color>` **outline_color**

+-----------+--------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )``  |
+-----------+--------------------------+
| *Setter*  | set_outline_color(value) |
+-----------+--------------------------+
| *Getter*  | get_outline_color()      |
+-----------+--------------------------+

The font outline's color.

**Note:** It's recommended to leave this at the default value so that you can adjust it in individual controls. For example, if the outline is made black here, it won't be possible to change its color using a Label's font outline modulate theme item.

----

.. _class_DynamicFont_property_outline_size:

- :ref:`int<class_int>` **outline_size**

+-----------+-------------------------+
| *Default* | ``0``                   |
+-----------+-------------------------+
| *Setter*  | set_outline_size(value) |
+-----------+-------------------------+
| *Getter*  | get_outline_size()      |
+-----------+-------------------------+

The font outline's thickness in pixels (not relative to the font size).

----

.. _class_DynamicFont_property_size:

- :ref:`int<class_int>` **size**

+-----------+-----------------+
| *Default* | ``16``          |
+-----------+-----------------+
| *Setter*  | set_size(value) |
+-----------+-----------------+
| *Getter*  | get_size()      |
+-----------+-----------------+

The font size in pixels.

----

.. _class_DynamicFont_property_use_filter:

- :ref:`bool<class_bool>` **use_filter**

+-----------+-----------------------+
| *Default* | ``false``             |
+-----------+-----------------------+
| *Setter*  | set_use_filter(value) |
+-----------+-----------------------+
| *Getter*  | get_use_filter()      |
+-----------+-----------------------+

If ``true``, filtering is used. This makes the font blurry instead of pixelated when scaling it if font oversampling is disabled or ineffective. It's recommended to enable this when using the font in a control whose size changes over time, unless a pixel art aesthetic is desired.

----

.. _class_DynamicFont_property_use_mipmaps:

- :ref:`bool<class_bool>` **use_mipmaps**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_use_mipmaps(value) |
+-----------+------------------------+
| *Getter*  | get_use_mipmaps()      |
+-----------+------------------------+

If ``true``, mipmapping is used. This improves the font's appearance when downscaling it if font oversampling is disabled or ineffective.

Method Descriptions
-------------------

.. _class_DynamicFont_method_add_fallback:

- void **add_fallback** **(** :ref:`DynamicFontData<class_DynamicFontData>` data **)**

Adds a fallback font.

----

.. _class_DynamicFont_method_get_available_chars:

- :ref:`String<class_String>` **get_available_chars** **(** **)** |const|

Returns a string containing all the characters available in the main and all the fallback fonts.

If a given character is included in more than one font, it appears only once in the returned string.

----

.. _class_DynamicFont_method_get_fallback:

- :ref:`DynamicFontData<class_DynamicFontData>` **get_fallback** **(** :ref:`int<class_int>` idx **)** |const|

Returns the fallback font at index ``idx``.

----

.. _class_DynamicFont_method_get_fallback_count:

- :ref:`int<class_int>` **get_fallback_count** **(** **)** |const|

Returns the number of fallback fonts.

----

.. _class_DynamicFont_method_get_spacing:

- :ref:`int<class_int>` **get_spacing** **(** :ref:`int<class_int>` type **)** |const|

Returns the spacing for the given ``type`` (see :ref:`SpacingType<enum_DynamicFont_SpacingType>`).

----

.. _class_DynamicFont_method_remove_fallback:

- void **remove_fallback** **(** :ref:`int<class_int>` idx **)**

Removes the fallback font at index ``idx``.

----

.. _class_DynamicFont_method_set_fallback:

- void **set_fallback** **(** :ref:`int<class_int>` idx, :ref:`DynamicFontData<class_DynamicFontData>` data **)**

Sets the fallback font at index ``idx``.

----

.. _class_DynamicFont_method_set_spacing:

- void **set_spacing** **(** :ref:`int<class_int>` type, :ref:`int<class_int>` value **)**

Sets the spacing for ``type`` (see :ref:`SpacingType<enum_DynamicFont_SpacingType>`) to ``value`` in pixels (not relative to the font size).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
