:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Polygon2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Polygon2D:

Polygon2D
=========

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

A 2D polygon.

Description
-----------

A Polygon2D is defined by a set of points. Each point is connected to the next, with the final point being connected to the first, resulting in a closed polygon. Polygon2Ds can be filled with color (solid or gradient) or filled with a given texture.

**Note:** By default, Godot can only draw up to 4,096 polygon points at a time. To increase this limit, open the Project Settings and increase :ref:`ProjectSettings.rendering/limits/buffers/canvas_polygon_buffer_size_kb<class_ProjectSettings_property_rendering/limits/buffers/canvas_polygon_buffer_size_kb>` and :ref:`ProjectSettings.rendering/limits/buffers/canvas_polygon_index_buffer_size_kb<class_ProjectSettings_property_rendering/limits/buffers/canvas_polygon_index_buffer_size_kb>`.

Properties
----------

+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`bool<class_bool>`                         | :ref:`antialiased<class_Polygon2D_property_antialiased>`                           | ``false``                |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`Array<class_Array>`                       | :ref:`bones<class_Polygon2D_property_bones>`                                       | ``[  ]``                 |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`Color<class_Color>`                       | :ref:`color<class_Polygon2D_property_color>`                                       | ``Color( 1, 1, 1, 1 )``  |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`int<class_int>`                           | :ref:`internal_vertex_count<class_Polygon2D_property_internal_vertex_count>`       | ``0``                    |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`float<class_float>`                       | :ref:`invert_border<class_Polygon2D_property_invert_border>`                       | ``100.0``                |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`bool<class_bool>`                         | :ref:`invert_enable<class_Polygon2D_property_invert_enable>`                       | ``false``                |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`Vector2<class_Vector2>`                   | :ref:`offset<class_Polygon2D_property_offset>`                                     | ``Vector2( 0, 0 )``      |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>` | :ref:`polygon<class_Polygon2D_property_polygon>`                                   | ``PoolVector2Array(  )`` |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`Array<class_Array>`                       | :ref:`polygons<class_Polygon2D_property_polygons>`                                 | ``[  ]``                 |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`NodePath<class_NodePath>`                 | :ref:`skeleton<class_Polygon2D_property_skeleton>`                                 | ``NodePath("")``         |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`Texture<class_Texture>`                   | :ref:`texture<class_Polygon2D_property_texture>`                                   |                          |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`Vector2<class_Vector2>`                   | :ref:`texture_offset<class_Polygon2D_property_texture_offset>`                     | ``Vector2( 0, 0 )``      |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`float<class_float>`                       | :ref:`texture_rotation<class_Polygon2D_property_texture_rotation>`                 |                          |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`float<class_float>`                       | :ref:`texture_rotation_degrees<class_Polygon2D_property_texture_rotation_degrees>` | ``0.0``                  |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`Vector2<class_Vector2>`                   | :ref:`texture_scale<class_Polygon2D_property_texture_scale>`                       | ``Vector2( 1, 1 )``      |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>` | :ref:`uv<class_Polygon2D_property_uv>`                                             | ``PoolVector2Array(  )`` |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+
| :ref:`PoolColorArray<class_PoolColorArray>`     | :ref:`vertex_colors<class_Polygon2D_property_vertex_colors>`                       | ``PoolColorArray(  )``   |
+-------------------------------------------------+------------------------------------------------------------------------------------+--------------------------+

Methods
-------

+-------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`add_bone<class_Polygon2D_method_add_bone>` **(** :ref:`NodePath<class_NodePath>` path, :ref:`PoolRealArray<class_PoolRealArray>` weights **)**        |
+-------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`clear_bones<class_Polygon2D_method_clear_bones>` **(** **)**                                                                                          |
+-------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`erase_bone<class_Polygon2D_method_erase_bone>` **(** :ref:`int<class_int>` index **)**                                                                |
+-------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                     | :ref:`get_bone_count<class_Polygon2D_method_get_bone_count>` **(** **)** |const|                                                                            |
+-------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`NodePath<class_NodePath>`           | :ref:`get_bone_path<class_Polygon2D_method_get_bone_path>` **(** :ref:`int<class_int>` index **)** |const|                                                  |
+-------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolRealArray<class_PoolRealArray>` | :ref:`get_bone_weights<class_Polygon2D_method_get_bone_weights>` **(** :ref:`int<class_int>` index **)** |const|                                            |
+-------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`set_bone_path<class_Polygon2D_method_set_bone_path>` **(** :ref:`int<class_int>` index, :ref:`NodePath<class_NodePath>` path **)**                    |
+-------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`set_bone_weights<class_Polygon2D_method_set_bone_weights>` **(** :ref:`int<class_int>` index, :ref:`PoolRealArray<class_PoolRealArray>` weights **)** |
+-------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_Polygon2D_property_antialiased:

- :ref:`bool<class_bool>` **antialiased**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_antialiased(value) |
+-----------+------------------------+
| *Getter*  | get_antialiased()      |
+-----------+------------------------+

If ``true``, attempts to perform antialiasing for polygon edges by drawing a thin OpenGL smooth line on the edges.

**Note:** Due to how it works, built-in antialiasing will not look correct for translucent polygons and may not work on certain platforms. As a workaround, install the `Antialiased Line2D <https://github.com/godot-extended-libraries/godot-antialiased-line2d>`__ add-on then create an AntialiasedPolygon2D node. That node relies on a texture with custom mipmaps to perform antialiasing.

----

.. _class_Polygon2D_property_bones:

- :ref:`Array<class_Array>` **bones**

+-----------+----------+
| *Default* | ``[  ]`` |
+-----------+----------+

----

.. _class_Polygon2D_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_color(value)        |
+-----------+-------------------------+
| *Getter*  | get_color()             |
+-----------+-------------------------+

The polygon's fill color. If ``texture`` is defined, it will be multiplied by this color. It will also be the default color for vertices not set in ``vertex_colors``.

----

.. _class_Polygon2D_property_internal_vertex_count:

- :ref:`int<class_int>` **internal_vertex_count**

+-----------+----------------------------------+
| *Default* | ``0``                            |
+-----------+----------------------------------+
| *Setter*  | set_internal_vertex_count(value) |
+-----------+----------------------------------+
| *Getter*  | get_internal_vertex_count()      |
+-----------+----------------------------------+

----

.. _class_Polygon2D_property_invert_border:

- :ref:`float<class_float>` **invert_border**

+-----------+--------------------------+
| *Default* | ``100.0``                |
+-----------+--------------------------+
| *Setter*  | set_invert_border(value) |
+-----------+--------------------------+
| *Getter*  | get_invert_border()      |
+-----------+--------------------------+

Added padding applied to the bounding box when using ``invert``. Setting this value too small may result in a "Bad Polygon" error.

----

.. _class_Polygon2D_property_invert_enable:

- :ref:`bool<class_bool>` **invert_enable**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_invert(value) |
+-----------+-------------------+
| *Getter*  | get_invert()      |
+-----------+-------------------+

If ``true``, polygon will be inverted, containing the area outside the defined points and extending to the ``invert_border``.

----

.. _class_Polygon2D_property_offset:

- :ref:`Vector2<class_Vector2>` **offset**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_offset(value)   |
+-----------+---------------------+
| *Getter*  | get_offset()        |
+-----------+---------------------+

The offset applied to each vertex.

----

.. _class_Polygon2D_property_polygon:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **polygon**

+-----------+--------------------------+
| *Default* | ``PoolVector2Array(  )`` |
+-----------+--------------------------+
| *Setter*  | set_polygon(value)       |
+-----------+--------------------------+
| *Getter*  | get_polygon()            |
+-----------+--------------------------+

The polygon's list of vertices. The final point will be connected to the first.

**Note:** This returns a copy of the :ref:`PoolVector2Array<class_PoolVector2Array>` rather than a reference.

----

.. _class_Polygon2D_property_polygons:

- :ref:`Array<class_Array>` **polygons**

+-----------+---------------------+
| *Default* | ``[  ]``            |
+-----------+---------------------+
| *Setter*  | set_polygons(value) |
+-----------+---------------------+
| *Getter*  | get_polygons()      |
+-----------+---------------------+

----

.. _class_Polygon2D_property_skeleton:

- :ref:`NodePath<class_NodePath>` **skeleton**

+-----------+---------------------+
| *Default* | ``NodePath("")``    |
+-----------+---------------------+
| *Setter*  | set_skeleton(value) |
+-----------+---------------------+
| *Getter*  | get_skeleton()      |
+-----------+---------------------+

----

.. _class_Polygon2D_property_texture:

- :ref:`Texture<class_Texture>` **texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

The polygon's fill texture. Use ``uv`` to set texture coordinates.

----

.. _class_Polygon2D_property_texture_offset:

- :ref:`Vector2<class_Vector2>` **texture_offset**

+-----------+---------------------------+
| *Default* | ``Vector2( 0, 0 )``       |
+-----------+---------------------------+
| *Setter*  | set_texture_offset(value) |
+-----------+---------------------------+
| *Getter*  | get_texture_offset()      |
+-----------+---------------------------+

Amount to offset the polygon's ``texture``. If ``(0, 0)`` the texture's origin (its top-left corner) will be placed at the polygon's ``position``.

----

.. _class_Polygon2D_property_texture_rotation:

- :ref:`float<class_float>` **texture_rotation**

+----------+-----------------------------+
| *Setter* | set_texture_rotation(value) |
+----------+-----------------------------+
| *Getter* | get_texture_rotation()      |
+----------+-----------------------------+

The texture's rotation in radians.

----

.. _class_Polygon2D_property_texture_rotation_degrees:

- :ref:`float<class_float>` **texture_rotation_degrees**

+-----------+-------------------------------------+
| *Default* | ``0.0``                             |
+-----------+-------------------------------------+
| *Setter*  | set_texture_rotation_degrees(value) |
+-----------+-------------------------------------+
| *Getter*  | get_texture_rotation_degrees()      |
+-----------+-------------------------------------+

The texture's rotation in degrees.

----

.. _class_Polygon2D_property_texture_scale:

- :ref:`Vector2<class_Vector2>` **texture_scale**

+-----------+--------------------------+
| *Default* | ``Vector2( 1, 1 )``      |
+-----------+--------------------------+
| *Setter*  | set_texture_scale(value) |
+-----------+--------------------------+
| *Getter*  | get_texture_scale()      |
+-----------+--------------------------+

Amount to multiply the ``uv`` coordinates when using a ``texture``. Larger values make the texture smaller, and vice versa.

----

.. _class_Polygon2D_property_uv:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **uv**

+-----------+--------------------------+
| *Default* | ``PoolVector2Array(  )`` |
+-----------+--------------------------+
| *Setter*  | set_uv(value)            |
+-----------+--------------------------+
| *Getter*  | get_uv()                 |
+-----------+--------------------------+

Texture coordinates for each vertex of the polygon. There should be one ``uv`` per polygon vertex. If there are fewer, undefined vertices will use ``(0, 0)``.

----

.. _class_Polygon2D_property_vertex_colors:

- :ref:`PoolColorArray<class_PoolColorArray>` **vertex_colors**

+-----------+--------------------------+
| *Default* | ``PoolColorArray(  )``   |
+-----------+--------------------------+
| *Setter*  | set_vertex_colors(value) |
+-----------+--------------------------+
| *Getter*  | get_vertex_colors()      |
+-----------+--------------------------+

Color for each vertex. Colors are interpolated between vertices, resulting in smooth gradients. There should be one per polygon vertex. If there are fewer, undefined vertices will use ``color``.

Method Descriptions
-------------------

.. _class_Polygon2D_method_add_bone:

- void **add_bone** **(** :ref:`NodePath<class_NodePath>` path, :ref:`PoolRealArray<class_PoolRealArray>` weights **)**

Adds a bone with the specified ``path`` and ``weights``.

----

.. _class_Polygon2D_method_clear_bones:

- void **clear_bones** **(** **)**

Removes all bones from this ``Polygon2D``.

----

.. _class_Polygon2D_method_erase_bone:

- void **erase_bone** **(** :ref:`int<class_int>` index **)**

Removes the specified bone from this ``Polygon2D``.

----

.. _class_Polygon2D_method_get_bone_count:

- :ref:`int<class_int>` **get_bone_count** **(** **)** |const|

Returns the number of bones in this ``Polygon2D``.

----

.. _class_Polygon2D_method_get_bone_path:

- :ref:`NodePath<class_NodePath>` **get_bone_path** **(** :ref:`int<class_int>` index **)** |const|

Returns the path to the node associated with the specified bone.

----

.. _class_Polygon2D_method_get_bone_weights:

- :ref:`PoolRealArray<class_PoolRealArray>` **get_bone_weights** **(** :ref:`int<class_int>` index **)** |const|

Returns the height values of the specified bone.

----

.. _class_Polygon2D_method_set_bone_path:

- void **set_bone_path** **(** :ref:`int<class_int>` index, :ref:`NodePath<class_NodePath>` path **)**

Sets the path to the node associated with the specified bone.

----

.. _class_Polygon2D_method_set_bone_weights:

- void **set_bone_weights** **(** :ref:`int<class_int>` index, :ref:`PoolRealArray<class_PoolRealArray>` weights **)**

Sets the weight values for the specified bone.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
