:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Environment.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Environment:

Environment
===========

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Resource for environment nodes (like :ref:`WorldEnvironment<class_WorldEnvironment>`) that define multiple rendering options.

Description
-----------

Resource for environment nodes (like :ref:`WorldEnvironment<class_WorldEnvironment>`) that define multiple environment operations (such as background :ref:`Sky<class_Sky>` or :ref:`Color<class_Color>`, ambient light, fog, depth-of-field...). These parameters affect the final render of the scene. The order of these operations is:

- Depth of Field Blur

- Glow

- Tonemap (Auto Exposure)

- Adjustments

If the target :ref:`Viewport<class_Viewport>` is set to "2D Without Sampling", all post-processing effects will be unavailable. With "3D Without Effects", the following options will be unavailable:

- Ssao

- Ss Reflections

This can be configured for the root Viewport with :ref:`ProjectSettings.rendering/quality/intended_usage/framebuffer_allocation<class_ProjectSettings_property_rendering/quality/intended_usage/framebuffer_allocation>`, or for specific Viewports via the :ref:`Viewport.usage<class_Viewport_property_usage>` property.

Note that :ref:`ProjectSettings.rendering/quality/intended_usage/framebuffer_allocation<class_ProjectSettings_property_rendering/quality/intended_usage/framebuffer_allocation>` has a mobile platform override to use "3D Without Effects" by default. It improves the performance on mobile devices, but at the same time affects the screen display on mobile devices.

Tutorials
---------

- :doc:`../tutorials/3d/environment_and_post_processing`

- :doc:`../tutorials/3d/high_dynamic_range`

- `3D Material Testers Demo <https://godotengine.org/asset-library/asset/123>`__

- `2D HDR Demo <https://godotengine.org/asset-library/asset/110>`__

- `Third Person Shooter Demo <https://godotengine.org/asset-library/asset/678>`__

Properties
----------

+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`adjustment_brightness<class_Environment_property_adjustment_brightness>`                     | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Texture<class_Texture>`                          | :ref:`adjustment_color_correction<class_Environment_property_adjustment_color_correction>`         |                                        |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`adjustment_contrast<class_Environment_property_adjustment_contrast>`                         | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`adjustment_enabled<class_Environment_property_adjustment_enabled>`                           | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`adjustment_saturation<class_Environment_property_adjustment_saturation>`                     | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Color<class_Color>`                              | :ref:`ambient_light_color<class_Environment_property_ambient_light_color>`                         | ``Color( 0, 0, 0, 1 )``                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ambient_light_energy<class_Environment_property_ambient_light_energy>`                       | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ambient_light_sky_contribution<class_Environment_property_ambient_light_sky_contribution>`   | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`auto_exposure_enabled<class_Environment_property_auto_exposure_enabled>`                     | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`auto_exposure_max_luma<class_Environment_property_auto_exposure_max_luma>`                   | ``8.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`auto_exposure_min_luma<class_Environment_property_auto_exposure_min_luma>`                   | ``0.05``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`auto_exposure_scale<class_Environment_property_auto_exposure_scale>`                         | ``0.4``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`auto_exposure_speed<class_Environment_property_auto_exposure_speed>`                         | ``0.5``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`int<class_int>`                                  | :ref:`background_camera_feed_id<class_Environment_property_background_camera_feed_id>`             | ``1``                                  |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`int<class_int>`                                  | :ref:`background_canvas_max_layer<class_Environment_property_background_canvas_max_layer>`         | ``0``                                  |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Color<class_Color>`                              | :ref:`background_color<class_Environment_property_background_color>`                               | ``Color( 0, 0, 0, 1 )``                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`background_energy<class_Environment_property_background_energy>`                             | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`BGMode<enum_Environment_BGMode>`                 | :ref:`background_mode<class_Environment_property_background_mode>`                                 | ``0``                                  |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Sky<class_Sky>`                                  | :ref:`background_sky<class_Environment_property_background_sky>`                                   |                                        |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`background_sky_custom_fov<class_Environment_property_background_sky_custom_fov>`             | ``0.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Basis<class_Basis>`                              | :ref:`background_sky_orientation<class_Environment_property_background_sky_orientation>`           | ``Basis( 1, 0, 0, 0, 1, 0, 0, 0, 1 )`` |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Vector3<class_Vector3>`                          | :ref:`background_sky_rotation<class_Environment_property_background_sky_rotation>`                 | ``Vector3( 0, 0, 0 )``                 |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Vector3<class_Vector3>`                          | :ref:`background_sky_rotation_degrees<class_Environment_property_background_sky_rotation_degrees>` | ``Vector3( 0, 0, 0 )``                 |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`dof_blur_far_amount<class_Environment_property_dof_blur_far_amount>`                         | ``0.1``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`dof_blur_far_distance<class_Environment_property_dof_blur_far_distance>`                     | ``10.0``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`dof_blur_far_enabled<class_Environment_property_dof_blur_far_enabled>`                       | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`DOFBlurQuality<enum_Environment_DOFBlurQuality>` | :ref:`dof_blur_far_quality<class_Environment_property_dof_blur_far_quality>`                       | ``1``                                  |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`dof_blur_far_transition<class_Environment_property_dof_blur_far_transition>`                 | ``5.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`dof_blur_near_amount<class_Environment_property_dof_blur_near_amount>`                       | ``0.1``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`dof_blur_near_distance<class_Environment_property_dof_blur_near_distance>`                   | ``2.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`dof_blur_near_enabled<class_Environment_property_dof_blur_near_enabled>`                     | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`DOFBlurQuality<enum_Environment_DOFBlurQuality>` | :ref:`dof_blur_near_quality<class_Environment_property_dof_blur_near_quality>`                     | ``1``                                  |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`dof_blur_near_transition<class_Environment_property_dof_blur_near_transition>`               | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Color<class_Color>`                              | :ref:`fog_color<class_Environment_property_fog_color>`                                             | ``Color( 0.5, 0.6, 0.7, 1 )``          |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`fog_depth_begin<class_Environment_property_fog_depth_begin>`                                 | ``10.0``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`fog_depth_curve<class_Environment_property_fog_depth_curve>`                                 | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`fog_depth_enabled<class_Environment_property_fog_depth_enabled>`                             | ``true``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`fog_depth_end<class_Environment_property_fog_depth_end>`                                     | ``100.0``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`fog_enabled<class_Environment_property_fog_enabled>`                                         | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`fog_height_curve<class_Environment_property_fog_height_curve>`                               | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`fog_height_enabled<class_Environment_property_fog_height_enabled>`                           | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`fog_height_max<class_Environment_property_fog_height_max>`                                   | ``0.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`fog_height_min<class_Environment_property_fog_height_min>`                                   | ``10.0``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`fog_sun_amount<class_Environment_property_fog_sun_amount>`                                   | ``0.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Color<class_Color>`                              | :ref:`fog_sun_color<class_Environment_property_fog_sun_color>`                                     | ``Color( 1, 0.9, 0.7, 1 )``            |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`fog_transmit_curve<class_Environment_property_fog_transmit_curve>`                           | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`fog_transmit_enabled<class_Environment_property_fog_transmit_enabled>`                       | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_bicubic_upscale<class_Environment_property_glow_bicubic_upscale>`                       | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`GlowBlendMode<enum_Environment_GlowBlendMode>`   | :ref:`glow_blend_mode<class_Environment_property_glow_blend_mode>`                                 | ``2``                                  |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`glow_bloom<class_Environment_property_glow_bloom>`                                           | ``0.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_enabled<class_Environment_property_glow_enabled>`                                       | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`glow_hdr_luminance_cap<class_Environment_property_glow_hdr_luminance_cap>`                   | ``12.0``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`glow_hdr_scale<class_Environment_property_glow_hdr_scale>`                                   | ``2.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`glow_hdr_threshold<class_Environment_property_glow_hdr_threshold>`                           | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_high_quality<class_Environment_property_glow_high_quality>`                             | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`glow_intensity<class_Environment_property_glow_intensity>`                                   | ``0.8``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_levels/1<class_Environment_property_glow_levels/1>`                                     | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_levels/2<class_Environment_property_glow_levels/2>`                                     | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_levels/3<class_Environment_property_glow_levels/3>`                                     | ``true``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_levels/4<class_Environment_property_glow_levels/4>`                                     | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_levels/5<class_Environment_property_glow_levels/5>`                                     | ``true``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_levels/6<class_Environment_property_glow_levels/6>`                                     | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`glow_levels/7<class_Environment_property_glow_levels/7>`                                     | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`glow_strength<class_Environment_property_glow_strength>`                                     | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ss_reflections_depth_tolerance<class_Environment_property_ss_reflections_depth_tolerance>`   | ``0.2``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`ss_reflections_enabled<class_Environment_property_ss_reflections_enabled>`                   | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ss_reflections_fade_in<class_Environment_property_ss_reflections_fade_in>`                   | ``0.15``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ss_reflections_fade_out<class_Environment_property_ss_reflections_fade_out>`                 | ``2.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`int<class_int>`                                  | :ref:`ss_reflections_max_steps<class_Environment_property_ss_reflections_max_steps>`               | ``64``                                 |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`ss_reflections_roughness<class_Environment_property_ss_reflections_roughness>`               | ``true``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ssao_ao_channel_affect<class_Environment_property_ssao_ao_channel_affect>`                   | ``0.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ssao_bias<class_Environment_property_ssao_bias>`                                             | ``0.01``                               |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`SSAOBlur<enum_Environment_SSAOBlur>`             | :ref:`ssao_blur<class_Environment_property_ssao_blur>`                                             | ``3``                                  |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`Color<class_Color>`                              | :ref:`ssao_color<class_Environment_property_ssao_color>`                                           | ``Color( 0, 0, 0, 1 )``                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ssao_edge_sharpness<class_Environment_property_ssao_edge_sharpness>`                         | ``4.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`bool<class_bool>`                                | :ref:`ssao_enabled<class_Environment_property_ssao_enabled>`                                       | ``false``                              |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ssao_intensity<class_Environment_property_ssao_intensity>`                                   | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ssao_intensity2<class_Environment_property_ssao_intensity2>`                                 | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ssao_light_affect<class_Environment_property_ssao_light_affect>`                             | ``0.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`SSAOQuality<enum_Environment_SSAOQuality>`       | :ref:`ssao_quality<class_Environment_property_ssao_quality>`                                       | ``1``                                  |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ssao_radius<class_Environment_property_ssao_radius>`                                         | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`ssao_radius2<class_Environment_property_ssao_radius2>`                                       | ``0.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`tonemap_exposure<class_Environment_property_tonemap_exposure>`                               | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`ToneMapper<enum_Environment_ToneMapper>`         | :ref:`tonemap_mode<class_Environment_property_tonemap_mode>`                                       | ``0``                                  |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+
| :ref:`float<class_float>`                              | :ref:`tonemap_white<class_Environment_property_tonemap_white>`                                     | ``1.0``                                |
+--------------------------------------------------------+----------------------------------------------------------------------------------------------------+----------------------------------------+

Methods
-------

+-------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_glow_level_enabled<class_Environment_method_is_glow_level_enabled>` **(** :ref:`int<class_int>` idx **)** |const|            |
+-------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`set_glow_level<class_Environment_method_set_glow_level>` **(** :ref:`int<class_int>` idx, :ref:`bool<class_bool>` enabled **)** |
+-------------------------+---------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_Environment_BGMode:

.. _class_Environment_constant_BG_KEEP:

.. _class_Environment_constant_BG_CLEAR_COLOR:

.. _class_Environment_constant_BG_COLOR:

.. _class_Environment_constant_BG_SKY:

.. _class_Environment_constant_BG_COLOR_SKY:

.. _class_Environment_constant_BG_CANVAS:

.. _class_Environment_constant_BG_CAMERA_FEED:

.. _class_Environment_constant_BG_MAX:

enum **BGMode**:

- **BG_KEEP** = **5** --- Keeps on screen every pixel drawn in the background. Only select this mode if you really need to keep the old data. On modern GPUs it will generally not be faster than clearing the background, and can be significantly slower, particularly on mobile.

It can only be safely used in fully-interior scenes (no visible sky or sky reflections). If enabled in a scene where the background is visible, "ghost trail" artifacts will be visible when moving the camera.

- **BG_CLEAR_COLOR** = **0** --- Clears the background using the clear color defined in :ref:`ProjectSettings.rendering/environment/default_clear_color<class_ProjectSettings_property_rendering/environment/default_clear_color>`.

- **BG_COLOR** = **1** --- Clears the background using a custom clear color.

- **BG_SKY** = **2** --- Displays a user-defined sky in the background.

- **BG_COLOR_SKY** = **3** --- Clears the background using a custom clear color and allows defining a sky for shading and reflection. This mode is slightly faster than :ref:`BG_SKY<class_Environment_constant_BG_SKY>` and should be preferred in scenes where reflections can be visible, but the sky itself never is (e.g. top-down camera).

- **BG_CANVAS** = **4** --- Displays a :ref:`CanvasLayer<class_CanvasLayer>` in the background.

- **BG_CAMERA_FEED** = **6** --- Displays a camera feed in the background.

- **BG_MAX** = **7** --- Represents the size of the :ref:`BGMode<enum_Environment_BGMode>` enum.

----

.. _enum_Environment_GlowBlendMode:

.. _class_Environment_constant_GLOW_BLEND_MODE_ADDITIVE:

.. _class_Environment_constant_GLOW_BLEND_MODE_SCREEN:

.. _class_Environment_constant_GLOW_BLEND_MODE_SOFTLIGHT:

.. _class_Environment_constant_GLOW_BLEND_MODE_REPLACE:

enum **GlowBlendMode**:

- **GLOW_BLEND_MODE_ADDITIVE** = **0** --- Additive glow blending mode. Mostly used for particles, glows (bloom), lens flare, bright sources.

- **GLOW_BLEND_MODE_SCREEN** = **1** --- Screen glow blending mode. Increases brightness, used frequently with bloom.

- **GLOW_BLEND_MODE_SOFTLIGHT** = **2** --- Soft light glow blending mode. Modifies contrast, exposes shadows and highlights (vivid bloom).

- **GLOW_BLEND_MODE_REPLACE** = **3** --- Replace glow blending mode. Replaces all pixels' color by the glow value. This can be used to simulate a full-screen blur effect by tweaking the glow parameters to match the original image's brightness.

----

.. _enum_Environment_ToneMapper:

.. _class_Environment_constant_TONE_MAPPER_LINEAR:

.. _class_Environment_constant_TONE_MAPPER_REINHARDT:

.. _class_Environment_constant_TONE_MAPPER_FILMIC:

.. _class_Environment_constant_TONE_MAPPER_ACES:

.. _class_Environment_constant_TONE_MAPPER_ACES_FITTED:

enum **ToneMapper**:

- **TONE_MAPPER_LINEAR** = **0** --- Linear tonemapper operator. Reads the linear data and passes it on unmodified. This can cause bright lighting to look blown out, with noticeable clipping in the output colors.

- **TONE_MAPPER_REINHARDT** = **1** --- Reinhardt tonemapper operator. Performs a variation on rendered pixels' colors by this formula: ``color = color / (1 + color)``. This avoids clipping bright highlights, but the resulting image can look a bit dull.

- **TONE_MAPPER_FILMIC** = **2** --- Filmic tonemapper operator. This avoids clipping bright highlights, with a resulting image that usually looks more vivid than :ref:`TONE_MAPPER_REINHARDT<class_Environment_constant_TONE_MAPPER_REINHARDT>`.

- **TONE_MAPPER_ACES** = **3** --- Use the legacy Godot version of the Academy Color Encoding System tonemapper. Unlike :ref:`TONE_MAPPER_ACES_FITTED<class_Environment_constant_TONE_MAPPER_ACES_FITTED>`, this version of ACES does not handle bright lighting in a physically accurate way. ACES typically has a more contrasted output compared to :ref:`TONE_MAPPER_REINHARDT<class_Environment_constant_TONE_MAPPER_REINHARDT>` and :ref:`TONE_MAPPER_FILMIC<class_Environment_constant_TONE_MAPPER_FILMIC>`.

**Note:** This tonemapping operator will be removed in Godot 4.0 in favor of the more accurate :ref:`TONE_MAPPER_ACES_FITTED<class_Environment_constant_TONE_MAPPER_ACES_FITTED>`.

- **TONE_MAPPER_ACES_FITTED** = **4** --- Use the Academy Color Encoding System tonemapper. ACES is slightly more expensive than other options, but it handles bright lighting in a more realistic fashion by desaturating it as it becomes brighter. ACES typically has a more contrasted output compared to :ref:`TONE_MAPPER_REINHARDT<class_Environment_constant_TONE_MAPPER_REINHARDT>` and :ref:`TONE_MAPPER_FILMIC<class_Environment_constant_TONE_MAPPER_FILMIC>`.

----

.. _enum_Environment_DOFBlurQuality:

.. _class_Environment_constant_DOF_BLUR_QUALITY_LOW:

.. _class_Environment_constant_DOF_BLUR_QUALITY_MEDIUM:

.. _class_Environment_constant_DOF_BLUR_QUALITY_HIGH:

enum **DOFBlurQuality**:

- **DOF_BLUR_QUALITY_LOW** = **0** --- Low depth-of-field blur quality (fastest).

- **DOF_BLUR_QUALITY_MEDIUM** = **1** --- Medium depth-of-field blur quality.

- **DOF_BLUR_QUALITY_HIGH** = **2** --- High depth-of-field blur quality (slowest).

----

.. _enum_Environment_SSAOBlur:

.. _class_Environment_constant_SSAO_BLUR_DISABLED:

.. _class_Environment_constant_SSAO_BLUR_1x1:

.. _class_Environment_constant_SSAO_BLUR_2x2:

.. _class_Environment_constant_SSAO_BLUR_3x3:

enum **SSAOBlur**:

- **SSAO_BLUR_DISABLED** = **0** --- No blur for the screen-space ambient occlusion effect (fastest).

- **SSAO_BLUR_1x1** = **1** --- 1×1 blur for the screen-space ambient occlusion effect.

- **SSAO_BLUR_2x2** = **2** --- 2×2 blur for the screen-space ambient occlusion effect.

- **SSAO_BLUR_3x3** = **3** --- 3×3 blur for the screen-space ambient occlusion effect (slowest).

----

.. _enum_Environment_SSAOQuality:

.. _class_Environment_constant_SSAO_QUALITY_LOW:

.. _class_Environment_constant_SSAO_QUALITY_MEDIUM:

.. _class_Environment_constant_SSAO_QUALITY_HIGH:

enum **SSAOQuality**:

- **SSAO_QUALITY_LOW** = **0** --- Low quality for the screen-space ambient occlusion effect (fastest).

- **SSAO_QUALITY_MEDIUM** = **1** --- Low quality for the screen-space ambient occlusion effect.

- **SSAO_QUALITY_HIGH** = **2** --- Low quality for the screen-space ambient occlusion effect (slowest).

Property Descriptions
---------------------

.. _class_Environment_property_adjustment_brightness:

- :ref:`float<class_float>` **adjustment_brightness**

+-----------+----------------------------------+
| *Default* | ``1.0``                          |
+-----------+----------------------------------+
| *Setter*  | set_adjustment_brightness(value) |
+-----------+----------------------------------+
| *Getter*  | get_adjustment_brightness()      |
+-----------+----------------------------------+

The global brightness value of the rendered scene. Effective only if ``adjustment_enabled`` is ``true``.

----

.. _class_Environment_property_adjustment_color_correction:

- :ref:`Texture<class_Texture>` **adjustment_color_correction**

+----------+----------------------------------------+
| *Setter* | set_adjustment_color_correction(value) |
+----------+----------------------------------------+
| *Getter* | get_adjustment_color_correction()      |
+----------+----------------------------------------+

Applies the provided :ref:`Texture<class_Texture>` resource to affect the global color aspect of the rendered scene. Effective only if ``adjustment_enabled`` is ``true``.

----

.. _class_Environment_property_adjustment_contrast:

- :ref:`float<class_float>` **adjustment_contrast**

+-----------+--------------------------------+
| *Default* | ``1.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_adjustment_contrast(value) |
+-----------+--------------------------------+
| *Getter*  | get_adjustment_contrast()      |
+-----------+--------------------------------+

The global contrast value of the rendered scene (default value is 1). Effective only if ``adjustment_enabled`` is ``true``.

----

.. _class_Environment_property_adjustment_enabled:

- :ref:`bool<class_bool>` **adjustment_enabled**

+-----------+------------------------------+
| *Default* | ``false``                    |
+-----------+------------------------------+
| *Setter*  | set_adjustment_enable(value) |
+-----------+------------------------------+
| *Getter*  | is_adjustment_enabled()      |
+-----------+------------------------------+

If ``true``, enables the ``adjustment_*`` properties provided by this resource. If ``false``, modifications to the ``adjustment_*`` properties will have no effect on the rendered scene.

----

.. _class_Environment_property_adjustment_saturation:

- :ref:`float<class_float>` **adjustment_saturation**

+-----------+----------------------------------+
| *Default* | ``1.0``                          |
+-----------+----------------------------------+
| *Setter*  | set_adjustment_saturation(value) |
+-----------+----------------------------------+
| *Getter*  | get_adjustment_saturation()      |
+-----------+----------------------------------+

The global color saturation value of the rendered scene (default value is 1). Effective only if ``adjustment_enabled`` is ``true``.

----

.. _class_Environment_property_ambient_light_color:

- :ref:`Color<class_Color>` **ambient_light_color**

+-----------+--------------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )``        |
+-----------+--------------------------------+
| *Setter*  | set_ambient_light_color(value) |
+-----------+--------------------------------+
| *Getter*  | get_ambient_light_color()      |
+-----------+--------------------------------+

The ambient light's :ref:`Color<class_Color>`.

----

.. _class_Environment_property_ambient_light_energy:

- :ref:`float<class_float>` **ambient_light_energy**

+-----------+---------------------------------+
| *Default* | ``1.0``                         |
+-----------+---------------------------------+
| *Setter*  | set_ambient_light_energy(value) |
+-----------+---------------------------------+
| *Getter*  | get_ambient_light_energy()      |
+-----------+---------------------------------+

The ambient light's energy. The higher the value, the stronger the light.

----

.. _class_Environment_property_ambient_light_sky_contribution:

- :ref:`float<class_float>` **ambient_light_sky_contribution**

+-----------+-------------------------------------------+
| *Default* | ``1.0``                                   |
+-----------+-------------------------------------------+
| *Setter*  | set_ambient_light_sky_contribution(value) |
+-----------+-------------------------------------------+
| *Getter*  | get_ambient_light_sky_contribution()      |
+-----------+-------------------------------------------+

Defines the amount of light that the sky brings on the scene. A value of ``0.0`` means that the sky's light emission has no effect on the scene illumination, thus all ambient illumination is provided by the ambient light. On the contrary, a value of ``1.0`` means that *all* the light that affects the scene is provided by the sky, thus the ambient light parameter has no effect on the scene.

**Note:** :ref:`ambient_light_sky_contribution<class_Environment_property_ambient_light_sky_contribution>` is internally clamped between ``0.0`` and ``1.0`` (inclusive).

----

.. _class_Environment_property_auto_exposure_enabled:

- :ref:`bool<class_bool>` **auto_exposure_enabled**

+-----------+----------------------------------+
| *Default* | ``false``                        |
+-----------+----------------------------------+
| *Setter*  | set_tonemap_auto_exposure(value) |
+-----------+----------------------------------+
| *Getter*  | get_tonemap_auto_exposure()      |
+-----------+----------------------------------+

If ``true``, enables the tonemapping auto exposure mode of the scene renderer. If ``true``, the renderer will automatically determine the exposure setting to adapt to the scene's illumination and the observed light.

----

.. _class_Environment_property_auto_exposure_max_luma:

- :ref:`float<class_float>` **auto_exposure_max_luma**

+-----------+--------------------------------------+
| *Default* | ``8.0``                              |
+-----------+--------------------------------------+
| *Setter*  | set_tonemap_auto_exposure_max(value) |
+-----------+--------------------------------------+
| *Getter*  | get_tonemap_auto_exposure_max()      |
+-----------+--------------------------------------+

The maximum luminance value for the auto exposure.

----

.. _class_Environment_property_auto_exposure_min_luma:

- :ref:`float<class_float>` **auto_exposure_min_luma**

+-----------+--------------------------------------+
| *Default* | ``0.05``                             |
+-----------+--------------------------------------+
| *Setter*  | set_tonemap_auto_exposure_min(value) |
+-----------+--------------------------------------+
| *Getter*  | get_tonemap_auto_exposure_min()      |
+-----------+--------------------------------------+

The minimum luminance value for the auto exposure.

----

.. _class_Environment_property_auto_exposure_scale:

- :ref:`float<class_float>` **auto_exposure_scale**

+-----------+---------------------------------------+
| *Default* | ``0.4``                               |
+-----------+---------------------------------------+
| *Setter*  | set_tonemap_auto_exposure_grey(value) |
+-----------+---------------------------------------+
| *Getter*  | get_tonemap_auto_exposure_grey()      |
+-----------+---------------------------------------+

The scale of the auto exposure effect. Affects the intensity of auto exposure.

----

.. _class_Environment_property_auto_exposure_speed:

- :ref:`float<class_float>` **auto_exposure_speed**

+-----------+----------------------------------------+
| *Default* | ``0.5``                                |
+-----------+----------------------------------------+
| *Setter*  | set_tonemap_auto_exposure_speed(value) |
+-----------+----------------------------------------+
| *Getter*  | get_tonemap_auto_exposure_speed()      |
+-----------+----------------------------------------+

The speed of the auto exposure effect. Affects the time needed for the camera to perform auto exposure.

----

.. _class_Environment_property_background_camera_feed_id:

- :ref:`int<class_int>` **background_camera_feed_id**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_camera_feed_id(value) |
+-----------+---------------------------+
| *Getter*  | get_camera_feed_id()      |
+-----------+---------------------------+

The ID of the camera feed to show in the background.

----

.. _class_Environment_property_background_canvas_max_layer:

- :ref:`int<class_int>` **background_canvas_max_layer**

+-----------+-----------------------------+
| *Default* | ``0``                       |
+-----------+-----------------------------+
| *Setter*  | set_canvas_max_layer(value) |
+-----------+-----------------------------+
| *Getter*  | get_canvas_max_layer()      |
+-----------+-----------------------------+

The maximum layer ID to display. Only effective when using the :ref:`BG_CANVAS<class_Environment_constant_BG_CANVAS>` background mode.

----

.. _class_Environment_property_background_color:

- :ref:`Color<class_Color>` **background_color**

+-----------+-------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_bg_color(value)     |
+-----------+-------------------------+
| *Getter*  | get_bg_color()          |
+-----------+-------------------------+

The :ref:`Color<class_Color>` displayed for clear areas of the scene. Only effective when using the :ref:`BG_COLOR<class_Environment_constant_BG_COLOR>` or :ref:`BG_COLOR_SKY<class_Environment_constant_BG_COLOR_SKY>` background modes).

----

.. _class_Environment_property_background_energy:

- :ref:`float<class_float>` **background_energy**

+-----------+----------------------+
| *Default* | ``1.0``              |
+-----------+----------------------+
| *Setter*  | set_bg_energy(value) |
+-----------+----------------------+
| *Getter*  | get_bg_energy()      |
+-----------+----------------------+

The power of the light emitted by the background.

----

.. _class_Environment_property_background_mode:

- :ref:`BGMode<enum_Environment_BGMode>` **background_mode**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_background(value) |
+-----------+-----------------------+
| *Getter*  | get_background()      |
+-----------+-----------------------+

The background mode. See :ref:`BGMode<enum_Environment_BGMode>` for possible values.

----

.. _class_Environment_property_background_sky:

- :ref:`Sky<class_Sky>` **background_sky**

+----------+----------------+
| *Setter* | set_sky(value) |
+----------+----------------+
| *Getter* | get_sky()      |
+----------+----------------+

The :ref:`Sky<class_Sky>` resource defined as background.

----

.. _class_Environment_property_background_sky_custom_fov:

- :ref:`float<class_float>` **background_sky_custom_fov**

+-----------+---------------------------+
| *Default* | ``0.0``                   |
+-----------+---------------------------+
| *Setter*  | set_sky_custom_fov(value) |
+-----------+---------------------------+
| *Getter*  | get_sky_custom_fov()      |
+-----------+---------------------------+

The :ref:`Sky<class_Sky>` resource's custom field of view.

----

.. _class_Environment_property_background_sky_orientation:

- :ref:`Basis<class_Basis>` **background_sky_orientation**

+-----------+----------------------------------------+
| *Default* | ``Basis( 1, 0, 0, 0, 1, 0, 0, 0, 1 )`` |
+-----------+----------------------------------------+
| *Setter*  | set_sky_orientation(value)             |
+-----------+----------------------------------------+
| *Getter*  | get_sky_orientation()                  |
+-----------+----------------------------------------+

The :ref:`Sky<class_Sky>` resource's rotation expressed as a :ref:`Basis<class_Basis>`.

----

.. _class_Environment_property_background_sky_rotation:

- :ref:`Vector3<class_Vector3>` **background_sky_rotation**

+-----------+-------------------------+
| *Default* | ``Vector3( 0, 0, 0 )``  |
+-----------+-------------------------+
| *Setter*  | set_sky_rotation(value) |
+-----------+-------------------------+
| *Getter*  | get_sky_rotation()      |
+-----------+-------------------------+

The :ref:`Sky<class_Sky>` resource's rotation expressed as Euler angles in radians.

----

.. _class_Environment_property_background_sky_rotation_degrees:

- :ref:`Vector3<class_Vector3>` **background_sky_rotation_degrees**

+-----------+---------------------------------+
| *Default* | ``Vector3( 0, 0, 0 )``          |
+-----------+---------------------------------+
| *Setter*  | set_sky_rotation_degrees(value) |
+-----------+---------------------------------+
| *Getter*  | get_sky_rotation_degrees()      |
+-----------+---------------------------------+

The :ref:`Sky<class_Sky>` resource's rotation expressed as Euler angles in degrees.

----

.. _class_Environment_property_dof_blur_far_amount:

- :ref:`float<class_float>` **dof_blur_far_amount**

+-----------+--------------------------------+
| *Default* | ``0.1``                        |
+-----------+--------------------------------+
| *Setter*  | set_dof_blur_far_amount(value) |
+-----------+--------------------------------+
| *Getter*  | get_dof_blur_far_amount()      |
+-----------+--------------------------------+

The amount of far blur for the depth-of-field effect.

----

.. _class_Environment_property_dof_blur_far_distance:

- :ref:`float<class_float>` **dof_blur_far_distance**

+-----------+----------------------------------+
| *Default* | ``10.0``                         |
+-----------+----------------------------------+
| *Setter*  | set_dof_blur_far_distance(value) |
+-----------+----------------------------------+
| *Getter*  | get_dof_blur_far_distance()      |
+-----------+----------------------------------+

The distance from the camera where the far blur effect affects the rendering.

----

.. _class_Environment_property_dof_blur_far_enabled:

- :ref:`bool<class_bool>` **dof_blur_far_enabled**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_dof_blur_far_enabled(value) |
+-----------+---------------------------------+
| *Getter*  | is_dof_blur_far_enabled()       |
+-----------+---------------------------------+

If ``true``, enables the depth-of-field far blur effect.

----

.. _class_Environment_property_dof_blur_far_quality:

- :ref:`DOFBlurQuality<enum_Environment_DOFBlurQuality>` **dof_blur_far_quality**

+-----------+---------------------------------+
| *Default* | ``1``                           |
+-----------+---------------------------------+
| *Setter*  | set_dof_blur_far_quality(value) |
+-----------+---------------------------------+
| *Getter*  | get_dof_blur_far_quality()      |
+-----------+---------------------------------+

The depth-of-field far blur's quality. Higher values can mitigate the visible banding effect seen at higher strengths, but are much slower.

----

.. _class_Environment_property_dof_blur_far_transition:

- :ref:`float<class_float>` **dof_blur_far_transition**

+-----------+------------------------------------+
| *Default* | ``5.0``                            |
+-----------+------------------------------------+
| *Setter*  | set_dof_blur_far_transition(value) |
+-----------+------------------------------------+
| *Getter*  | get_dof_blur_far_transition()      |
+-----------+------------------------------------+

The length of the transition between the no-blur area and far blur.

----

.. _class_Environment_property_dof_blur_near_amount:

- :ref:`float<class_float>` **dof_blur_near_amount**

+-----------+---------------------------------+
| *Default* | ``0.1``                         |
+-----------+---------------------------------+
| *Setter*  | set_dof_blur_near_amount(value) |
+-----------+---------------------------------+
| *Getter*  | get_dof_blur_near_amount()      |
+-----------+---------------------------------+

The amount of near blur for the depth-of-field effect.

----

.. _class_Environment_property_dof_blur_near_distance:

- :ref:`float<class_float>` **dof_blur_near_distance**

+-----------+-----------------------------------+
| *Default* | ``2.0``                           |
+-----------+-----------------------------------+
| *Setter*  | set_dof_blur_near_distance(value) |
+-----------+-----------------------------------+
| *Getter*  | get_dof_blur_near_distance()      |
+-----------+-----------------------------------+

Distance from the camera where the near blur effect affects the rendering.

----

.. _class_Environment_property_dof_blur_near_enabled:

- :ref:`bool<class_bool>` **dof_blur_near_enabled**

+-----------+----------------------------------+
| *Default* | ``false``                        |
+-----------+----------------------------------+
| *Setter*  | set_dof_blur_near_enabled(value) |
+-----------+----------------------------------+
| *Getter*  | is_dof_blur_near_enabled()       |
+-----------+----------------------------------+

If ``true``, enables the depth-of-field near blur effect.

----

.. _class_Environment_property_dof_blur_near_quality:

- :ref:`DOFBlurQuality<enum_Environment_DOFBlurQuality>` **dof_blur_near_quality**

+-----------+----------------------------------+
| *Default* | ``1``                            |
+-----------+----------------------------------+
| *Setter*  | set_dof_blur_near_quality(value) |
+-----------+----------------------------------+
| *Getter*  | get_dof_blur_near_quality()      |
+-----------+----------------------------------+

The depth-of-field near blur's quality. Higher values can mitigate the visible banding effect seen at higher strengths, but are much slower.

----

.. _class_Environment_property_dof_blur_near_transition:

- :ref:`float<class_float>` **dof_blur_near_transition**

+-----------+-------------------------------------+
| *Default* | ``1.0``                             |
+-----------+-------------------------------------+
| *Setter*  | set_dof_blur_near_transition(value) |
+-----------+-------------------------------------+
| *Getter*  | get_dof_blur_near_transition()      |
+-----------+-------------------------------------+

The length of the transition between the near blur and no-blur area.

----

.. _class_Environment_property_fog_color:

- :ref:`Color<class_Color>` **fog_color**

+-----------+-------------------------------+
| *Default* | ``Color( 0.5, 0.6, 0.7, 1 )`` |
+-----------+-------------------------------+
| *Setter*  | set_fog_color(value)          |
+-----------+-------------------------------+
| *Getter*  | get_fog_color()               |
+-----------+-------------------------------+

The fog's :ref:`Color<class_Color>`.

----

.. _class_Environment_property_fog_depth_begin:

- :ref:`float<class_float>` **fog_depth_begin**

+-----------+----------------------------+
| *Default* | ``10.0``                   |
+-----------+----------------------------+
| *Setter*  | set_fog_depth_begin(value) |
+-----------+----------------------------+
| *Getter*  | get_fog_depth_begin()      |
+-----------+----------------------------+

The fog's depth starting distance from the camera.

----

.. _class_Environment_property_fog_depth_curve:

- :ref:`float<class_float>` **fog_depth_curve**

+-----------+----------------------------+
| *Default* | ``1.0``                    |
+-----------+----------------------------+
| *Setter*  | set_fog_depth_curve(value) |
+-----------+----------------------------+
| *Getter*  | get_fog_depth_curve()      |
+-----------+----------------------------+

The fog depth's intensity curve. A number of presets are available in the **Inspector** by right-clicking the curve.

----

.. _class_Environment_property_fog_depth_enabled:

- :ref:`bool<class_bool>` **fog_depth_enabled**

+-----------+------------------------------+
| *Default* | ``true``                     |
+-----------+------------------------------+
| *Setter*  | set_fog_depth_enabled(value) |
+-----------+------------------------------+
| *Getter*  | is_fog_depth_enabled()       |
+-----------+------------------------------+

If ``true``, the depth fog effect is enabled. When enabled, fog will appear in the distance (relative to the camera).

----

.. _class_Environment_property_fog_depth_end:

- :ref:`float<class_float>` **fog_depth_end**

+-----------+--------------------------+
| *Default* | ``100.0``                |
+-----------+--------------------------+
| *Setter*  | set_fog_depth_end(value) |
+-----------+--------------------------+
| *Getter*  | get_fog_depth_end()      |
+-----------+--------------------------+

The fog's depth end distance from the camera. If this value is set to 0, it will be equal to the current camera's :ref:`Camera.far<class_Camera_property_far>` value.

----

.. _class_Environment_property_fog_enabled:

- :ref:`bool<class_bool>` **fog_enabled**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_fog_enabled(value) |
+-----------+------------------------+
| *Getter*  | is_fog_enabled()       |
+-----------+------------------------+

If ``true``, fog effects are enabled. :ref:`fog_height_enabled<class_Environment_property_fog_height_enabled>` and/or :ref:`fog_depth_enabled<class_Environment_property_fog_depth_enabled>` must be set to ``true`` to actually display fog.

----

.. _class_Environment_property_fog_height_curve:

- :ref:`float<class_float>` **fog_height_curve**

+-----------+-----------------------------+
| *Default* | ``1.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_fog_height_curve(value) |
+-----------+-----------------------------+
| *Getter*  | get_fog_height_curve()      |
+-----------+-----------------------------+

The height fog's intensity. A number of presets are available in the **Inspector** by right-clicking the curve.

----

.. _class_Environment_property_fog_height_enabled:

- :ref:`bool<class_bool>` **fog_height_enabled**

+-----------+-------------------------------+
| *Default* | ``false``                     |
+-----------+-------------------------------+
| *Setter*  | set_fog_height_enabled(value) |
+-----------+-------------------------------+
| *Getter*  | is_fog_height_enabled()       |
+-----------+-------------------------------+

If ``true``, the height fog effect is enabled. When enabled, fog will appear in a defined height range, regardless of the distance from the camera. This can be used to simulate "deep water" effects with a lower performance cost compared to a dedicated shader.

----

.. _class_Environment_property_fog_height_max:

- :ref:`float<class_float>` **fog_height_max**

+-----------+---------------------------+
| *Default* | ``0.0``                   |
+-----------+---------------------------+
| *Setter*  | set_fog_height_max(value) |
+-----------+---------------------------+
| *Getter*  | get_fog_height_max()      |
+-----------+---------------------------+

The Y coordinate where the height fog will be the most intense. If this value is greater than :ref:`fog_height_min<class_Environment_property_fog_height_min>`, fog will be displayed from bottom to top. Otherwise, it will be displayed from top to bottom.

----

.. _class_Environment_property_fog_height_min:

- :ref:`float<class_float>` **fog_height_min**

+-----------+---------------------------+
| *Default* | ``10.0``                  |
+-----------+---------------------------+
| *Setter*  | set_fog_height_min(value) |
+-----------+---------------------------+
| *Getter*  | get_fog_height_min()      |
+-----------+---------------------------+

The Y coordinate where the height fog will be the least intense. If this value is greater than :ref:`fog_height_max<class_Environment_property_fog_height_max>`, fog will be displayed from top to bottom. Otherwise, it will be displayed from bottom to top.

----

.. _class_Environment_property_fog_sun_amount:

- :ref:`float<class_float>` **fog_sun_amount**

+-----------+---------------------------+
| *Default* | ``0.0``                   |
+-----------+---------------------------+
| *Setter*  | set_fog_sun_amount(value) |
+-----------+---------------------------+
| *Getter*  | get_fog_sun_amount()      |
+-----------+---------------------------+

The intensity of the depth fog color transition when looking towards the sun. The sun's direction is determined automatically using the DirectionalLight node in the scene.

----

.. _class_Environment_property_fog_sun_color:

- :ref:`Color<class_Color>` **fog_sun_color**

+-----------+-----------------------------+
| *Default* | ``Color( 1, 0.9, 0.7, 1 )`` |
+-----------+-----------------------------+
| *Setter*  | set_fog_sun_color(value)    |
+-----------+-----------------------------+
| *Getter*  | get_fog_sun_color()         |
+-----------+-----------------------------+

The depth fog's :ref:`Color<class_Color>` when looking towards the sun.

----

.. _class_Environment_property_fog_transmit_curve:

- :ref:`float<class_float>` **fog_transmit_curve**

+-----------+-------------------------------+
| *Default* | ``1.0``                       |
+-----------+-------------------------------+
| *Setter*  | set_fog_transmit_curve(value) |
+-----------+-------------------------------+
| *Getter*  | get_fog_transmit_curve()      |
+-----------+-------------------------------+

The intensity of the fog light transmittance effect. Amount of light that the fog transmits.

----

.. _class_Environment_property_fog_transmit_enabled:

- :ref:`bool<class_bool>` **fog_transmit_enabled**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_fog_transmit_enabled(value) |
+-----------+---------------------------------+
| *Getter*  | is_fog_transmit_enabled()       |
+-----------+---------------------------------+

Enables fog's light transmission effect. If ``true``, light will be more visible in the fog to simulate light scattering as in real life.

----

.. _class_Environment_property_glow_bicubic_upscale:

- :ref:`bool<class_bool>` **glow_bicubic_upscale**

+-----------+-----------------------------------+
| *Default* | ``false``                         |
+-----------+-----------------------------------+
| *Setter*  | set_glow_bicubic_upscale(value)   |
+-----------+-----------------------------------+
| *Getter*  | is_glow_bicubic_upscale_enabled() |
+-----------+-----------------------------------+

Smooths out the blockiness created by sampling higher levels, at the cost of performance.

**Note:** When using the GLES2 renderer, this is only available if the GPU supports the ``GL_EXT_gpu_shader4`` extension.

----

.. _class_Environment_property_glow_blend_mode:

- :ref:`GlowBlendMode<enum_Environment_GlowBlendMode>` **glow_blend_mode**

+-----------+----------------------------+
| *Default* | ``2``                      |
+-----------+----------------------------+
| *Setter*  | set_glow_blend_mode(value) |
+-----------+----------------------------+
| *Getter*  | get_glow_blend_mode()      |
+-----------+----------------------------+

The glow blending mode.

----

.. _class_Environment_property_glow_bloom:

- :ref:`float<class_float>` **glow_bloom**

+-----------+-----------------------+
| *Default* | ``0.0``               |
+-----------+-----------------------+
| *Setter*  | set_glow_bloom(value) |
+-----------+-----------------------+
| *Getter*  | get_glow_bloom()      |
+-----------+-----------------------+

The bloom's intensity. If set to a value higher than ``0``, this will make glow visible in areas darker than the :ref:`glow_hdr_threshold<class_Environment_property_glow_hdr_threshold>`.

----

.. _class_Environment_property_glow_enabled:

- :ref:`bool<class_bool>` **glow_enabled**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_glow_enabled(value) |
+-----------+-------------------------+
| *Getter*  | is_glow_enabled()       |
+-----------+-------------------------+

If ``true``, the glow effect is enabled.

**Note:** Only effective if :ref:`ProjectSettings.rendering/quality/intended_usage/framebuffer_allocation<class_ProjectSettings_property_rendering/quality/intended_usage/framebuffer_allocation>` is **3D** (*not* **3D Without Effects**). On mobile, :ref:`ProjectSettings.rendering/quality/intended_usage/framebuffer_allocation<class_ProjectSettings_property_rendering/quality/intended_usage/framebuffer_allocation>` defaults to **3D Without Effects** by default, so its ``.mobile`` override needs to be changed to **3D**.

**Note:** When using GLES3 on mobile, HDR rendering is disabled by default for performance reasons. This means glow will only be visible if :ref:`glow_hdr_threshold<class_Environment_property_glow_hdr_threshold>` is decreased below ``1.0`` or if :ref:`glow_bloom<class_Environment_property_glow_bloom>` is increased above ``0.0``. Also consider increasing :ref:`glow_intensity<class_Environment_property_glow_intensity>` to ``1.5``. If you want glow to behave on mobile like it does on desktop (at a performance cost), enable :ref:`ProjectSettings.rendering/quality/depth/hdr<class_ProjectSettings_property_rendering/quality/depth/hdr>`'s ``.mobile`` override.

----

.. _class_Environment_property_glow_hdr_luminance_cap:

- :ref:`float<class_float>` **glow_hdr_luminance_cap**

+-----------+-----------------------------------+
| *Default* | ``12.0``                          |
+-----------+-----------------------------------+
| *Setter*  | set_glow_hdr_luminance_cap(value) |
+-----------+-----------------------------------+
| *Getter*  | get_glow_hdr_luminance_cap()      |
+-----------+-----------------------------------+

The higher threshold of the HDR glow. Areas brighter than this threshold will be clamped for the purposes of the glow effect.

----

.. _class_Environment_property_glow_hdr_scale:

- :ref:`float<class_float>` **glow_hdr_scale**

+-----------+---------------------------------+
| *Default* | ``2.0``                         |
+-----------+---------------------------------+
| *Setter*  | set_glow_hdr_bleed_scale(value) |
+-----------+---------------------------------+
| *Getter*  | get_glow_hdr_bleed_scale()      |
+-----------+---------------------------------+

The bleed scale of the HDR glow.

----

.. _class_Environment_property_glow_hdr_threshold:

- :ref:`float<class_float>` **glow_hdr_threshold**

+-----------+-------------------------------------+
| *Default* | ``1.0``                             |
+-----------+-------------------------------------+
| *Setter*  | set_glow_hdr_bleed_threshold(value) |
+-----------+-------------------------------------+
| *Getter*  | get_glow_hdr_bleed_threshold()      |
+-----------+-------------------------------------+

The lower threshold of the HDR glow. When using the GLES2 renderer (which doesn't support HDR), this needs to be below ``1.0`` for glow to be visible. A value of ``0.9`` works well in this case.

----

.. _class_Environment_property_glow_high_quality:

- :ref:`bool<class_bool>` **glow_high_quality**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_glow_high_quality(value)   |
+-----------+--------------------------------+
| *Getter*  | is_glow_high_quality_enabled() |
+-----------+--------------------------------+

Takes more samples during downsample pass of glow. This ensures that single pixels are captured by glow which makes the glow look smoother and more stable during movement. However, it is very expensive and makes the glow post process take twice as long.

----

.. _class_Environment_property_glow_intensity:

- :ref:`float<class_float>` **glow_intensity**

+-----------+---------------------------+
| *Default* | ``0.8``                   |
+-----------+---------------------------+
| *Setter*  | set_glow_intensity(value) |
+-----------+---------------------------+
| *Getter*  | get_glow_intensity()      |
+-----------+---------------------------+

The glow intensity. When using the GLES2 renderer, this should be increased to 1.5 to compensate for the lack of HDR rendering.

----

.. _class_Environment_property_glow_levels/1:

- :ref:`bool<class_bool>` **glow_levels/1**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_glow_level(value)   |
+-----------+-------------------------+
| *Getter*  | is_glow_level_enabled() |
+-----------+-------------------------+

If ``true``, the 1st level of glow is enabled. This is the most "local" level (least blurry).

----

.. _class_Environment_property_glow_levels/2:

- :ref:`bool<class_bool>` **glow_levels/2**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_glow_level(value)   |
+-----------+-------------------------+
| *Getter*  | is_glow_level_enabled() |
+-----------+-------------------------+

If ``true``, the 2th level of glow is enabled.

----

.. _class_Environment_property_glow_levels/3:

- :ref:`bool<class_bool>` **glow_levels/3**

+-----------+-------------------------+
| *Default* | ``true``                |
+-----------+-------------------------+
| *Setter*  | set_glow_level(value)   |
+-----------+-------------------------+
| *Getter*  | is_glow_level_enabled() |
+-----------+-------------------------+

If ``true``, the 3th level of glow is enabled.

----

.. _class_Environment_property_glow_levels/4:

- :ref:`bool<class_bool>` **glow_levels/4**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_glow_level(value)   |
+-----------+-------------------------+
| *Getter*  | is_glow_level_enabled() |
+-----------+-------------------------+

If ``true``, the 4th level of glow is enabled.

----

.. _class_Environment_property_glow_levels/5:

- :ref:`bool<class_bool>` **glow_levels/5**

+-----------+-------------------------+
| *Default* | ``true``                |
+-----------+-------------------------+
| *Setter*  | set_glow_level(value)   |
+-----------+-------------------------+
| *Getter*  | is_glow_level_enabled() |
+-----------+-------------------------+

If ``true``, the 5th level of glow is enabled.

----

.. _class_Environment_property_glow_levels/6:

- :ref:`bool<class_bool>` **glow_levels/6**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_glow_level(value)   |
+-----------+-------------------------+
| *Getter*  | is_glow_level_enabled() |
+-----------+-------------------------+

If ``true``, the 6th level of glow is enabled.

----

.. _class_Environment_property_glow_levels/7:

- :ref:`bool<class_bool>` **glow_levels/7**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_glow_level(value)   |
+-----------+-------------------------+
| *Getter*  | is_glow_level_enabled() |
+-----------+-------------------------+

If ``true``, the 7th level of glow is enabled. This is the most "global" level (blurriest).

----

.. _class_Environment_property_glow_strength:

- :ref:`float<class_float>` **glow_strength**

+-----------+--------------------------+
| *Default* | ``1.0``                  |
+-----------+--------------------------+
| *Setter*  | set_glow_strength(value) |
+-----------+--------------------------+
| *Getter*  | get_glow_strength()      |
+-----------+--------------------------+

The glow strength. When using the GLES2 renderer, this should be increased to 1.3 to compensate for the lack of HDR rendering.

----

.. _class_Environment_property_ss_reflections_depth_tolerance:

- :ref:`float<class_float>` **ss_reflections_depth_tolerance**

+-----------+--------------------------------+
| *Default* | ``0.2``                        |
+-----------+--------------------------------+
| *Setter*  | set_ssr_depth_tolerance(value) |
+-----------+--------------------------------+
| *Getter*  | get_ssr_depth_tolerance()      |
+-----------+--------------------------------+

The depth tolerance for screen-space reflections.

----

.. _class_Environment_property_ss_reflections_enabled:

- :ref:`bool<class_bool>` **ss_reflections_enabled**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_ssr_enabled(value) |
+-----------+------------------------+
| *Getter*  | is_ssr_enabled()       |
+-----------+------------------------+

If ``true``, screen-space reflections are enabled. Screen-space reflections are more accurate than reflections from :ref:`GIProbe<class_GIProbe>`\ s or :ref:`ReflectionProbe<class_ReflectionProbe>`\ s, but are slower and can't reflect surfaces occluded by others.

----

.. _class_Environment_property_ss_reflections_fade_in:

- :ref:`float<class_float>` **ss_reflections_fade_in**

+-----------+------------------------+
| *Default* | ``0.15``               |
+-----------+------------------------+
| *Setter*  | set_ssr_fade_in(value) |
+-----------+------------------------+
| *Getter*  | get_ssr_fade_in()      |
+-----------+------------------------+

The fade-in distance for screen-space reflections. Affects the area from the reflected material to the screen-space reflection).

----

.. _class_Environment_property_ss_reflections_fade_out:

- :ref:`float<class_float>` **ss_reflections_fade_out**

+-----------+-------------------------+
| *Default* | ``2.0``                 |
+-----------+-------------------------+
| *Setter*  | set_ssr_fade_out(value) |
+-----------+-------------------------+
| *Getter*  | get_ssr_fade_out()      |
+-----------+-------------------------+

The fade-out distance for screen-space reflections. Affects the area from the screen-space reflection to the "global" reflection.

----

.. _class_Environment_property_ss_reflections_max_steps:

- :ref:`int<class_int>` **ss_reflections_max_steps**

+-----------+--------------------------+
| *Default* | ``64``                   |
+-----------+--------------------------+
| *Setter*  | set_ssr_max_steps(value) |
+-----------+--------------------------+
| *Getter*  | get_ssr_max_steps()      |
+-----------+--------------------------+

The maximum number of steps for screen-space reflections. Higher values are slower.

----

.. _class_Environment_property_ss_reflections_roughness:

- :ref:`bool<class_bool>` **ss_reflections_roughness**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_ssr_rough(value) |
+-----------+----------------------+
| *Getter*  | is_ssr_rough()       |
+-----------+----------------------+

If ``true``, screen-space reflections will take the material roughness into account.

----

.. _class_Environment_property_ssao_ao_channel_affect:

- :ref:`float<class_float>` **ssao_ao_channel_affect**

+-----------+-----------------------------------+
| *Default* | ``0.0``                           |
+-----------+-----------------------------------+
| *Setter*  | set_ssao_ao_channel_affect(value) |
+-----------+-----------------------------------+
| *Getter*  | get_ssao_ao_channel_affect()      |
+-----------+-----------------------------------+

The screen-space ambient occlusion intensity on materials that have an AO texture defined. Values higher than ``0`` will make the SSAO effect visible in areas darkened by AO textures.

----

.. _class_Environment_property_ssao_bias:

- :ref:`float<class_float>` **ssao_bias**

+-----------+----------------------+
| *Default* | ``0.01``             |
+-----------+----------------------+
| *Setter*  | set_ssao_bias(value) |
+-----------+----------------------+
| *Getter*  | get_ssao_bias()      |
+-----------+----------------------+

The screen-space ambient occlusion bias. This should be kept high enough to prevent "smooth" curves from being affected by ambient occlusion.

----

.. _class_Environment_property_ssao_blur:

- :ref:`SSAOBlur<enum_Environment_SSAOBlur>` **ssao_blur**

+-----------+----------------------+
| *Default* | ``3``                |
+-----------+----------------------+
| *Setter*  | set_ssao_blur(value) |
+-----------+----------------------+
| *Getter*  | get_ssao_blur()      |
+-----------+----------------------+

The screen-space ambient occlusion blur quality. See :ref:`SSAOBlur<enum_Environment_SSAOBlur>` for possible values.

----

.. _class_Environment_property_ssao_color:

- :ref:`Color<class_Color>` **ssao_color**

+-----------+-------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_ssao_color(value)   |
+-----------+-------------------------+
| *Getter*  | get_ssao_color()        |
+-----------+-------------------------+

The screen-space ambient occlusion color.

----

.. _class_Environment_property_ssao_edge_sharpness:

- :ref:`float<class_float>` **ssao_edge_sharpness**

+-----------+--------------------------------+
| *Default* | ``4.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_ssao_edge_sharpness(value) |
+-----------+--------------------------------+
| *Getter*  | get_ssao_edge_sharpness()      |
+-----------+--------------------------------+

The screen-space ambient occlusion edge sharpness.

----

.. _class_Environment_property_ssao_enabled:

- :ref:`bool<class_bool>` **ssao_enabled**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_ssao_enabled(value) |
+-----------+-------------------------+
| *Getter*  | is_ssao_enabled()       |
+-----------+-------------------------+

If ``true``, the screen-space ambient occlusion effect is enabled. This darkens objects' corners and cavities to simulate ambient light not reaching the entire object as in real life. This works well for small, dynamic objects, but baked lighting or ambient occlusion textures will do a better job at displaying ambient occlusion on large static objects. This is a costly effect and should be disabled first when running into performance issues.

----

.. _class_Environment_property_ssao_intensity:

- :ref:`float<class_float>` **ssao_intensity**

+-----------+---------------------------+
| *Default* | ``1.0``                   |
+-----------+---------------------------+
| *Setter*  | set_ssao_intensity(value) |
+-----------+---------------------------+
| *Getter*  | get_ssao_intensity()      |
+-----------+---------------------------+

The primary screen-space ambient occlusion intensity. See also :ref:`ssao_radius<class_Environment_property_ssao_radius>`.

----

.. _class_Environment_property_ssao_intensity2:

- :ref:`float<class_float>` **ssao_intensity2**

+-----------+----------------------------+
| *Default* | ``1.0``                    |
+-----------+----------------------------+
| *Setter*  | set_ssao_intensity2(value) |
+-----------+----------------------------+
| *Getter*  | get_ssao_intensity2()      |
+-----------+----------------------------+

The secondary screen-space ambient occlusion intensity. See also :ref:`ssao_radius2<class_Environment_property_ssao_radius2>`.

----

.. _class_Environment_property_ssao_light_affect:

- :ref:`float<class_float>` **ssao_light_affect**

+-----------+-------------------------------------+
| *Default* | ``0.0``                             |
+-----------+-------------------------------------+
| *Setter*  | set_ssao_direct_light_affect(value) |
+-----------+-------------------------------------+
| *Getter*  | get_ssao_direct_light_affect()      |
+-----------+-------------------------------------+

The screen-space ambient occlusion intensity in direct light. In real life, ambient occlusion only applies to indirect light, which means its effects can't be seen in direct light. Values higher than ``0`` will make the SSAO effect visible in direct light.

----

.. _class_Environment_property_ssao_quality:

- :ref:`SSAOQuality<enum_Environment_SSAOQuality>` **ssao_quality**

+-----------+-------------------------+
| *Default* | ``1``                   |
+-----------+-------------------------+
| *Setter*  | set_ssao_quality(value) |
+-----------+-------------------------+
| *Getter*  | get_ssao_quality()      |
+-----------+-------------------------+

The screen-space ambient occlusion quality. Higher qualities will make better use of small objects for ambient occlusion, but are slower.

----

.. _class_Environment_property_ssao_radius:

- :ref:`float<class_float>` **ssao_radius**

+-----------+------------------------+
| *Default* | ``1.0``                |
+-----------+------------------------+
| *Setter*  | set_ssao_radius(value) |
+-----------+------------------------+
| *Getter*  | get_ssao_radius()      |
+-----------+------------------------+

The primary screen-space ambient occlusion radius.

----

.. _class_Environment_property_ssao_radius2:

- :ref:`float<class_float>` **ssao_radius2**

+-----------+-------------------------+
| *Default* | ``0.0``                 |
+-----------+-------------------------+
| *Setter*  | set_ssao_radius2(value) |
+-----------+-------------------------+
| *Getter*  | get_ssao_radius2()      |
+-----------+-------------------------+

The secondary screen-space ambient occlusion radius. If set to a value higher than ``0``, enables the secondary screen-space ambient occlusion effect which can be used to improve the effect's appearance (at the cost of performance).

----

.. _class_Environment_property_tonemap_exposure:

- :ref:`float<class_float>` **tonemap_exposure**

+-----------+-----------------------------+
| *Default* | ``1.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_tonemap_exposure(value) |
+-----------+-----------------------------+
| *Getter*  | get_tonemap_exposure()      |
+-----------+-----------------------------+

The default exposure used for tonemapping.

----

.. _class_Environment_property_tonemap_mode:

- :ref:`ToneMapper<enum_Environment_ToneMapper>` **tonemap_mode**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_tonemapper(value) |
+-----------+-----------------------+
| *Getter*  | get_tonemapper()      |
+-----------+-----------------------+

The tonemapping mode to use. Tonemapping is the process that "converts" HDR values to be suitable for rendering on a LDR display. (Godot doesn't support rendering on HDR displays yet.)

----

.. _class_Environment_property_tonemap_white:

- :ref:`float<class_float>` **tonemap_white**

+-----------+--------------------------+
| *Default* | ``1.0``                  |
+-----------+--------------------------+
| *Setter*  | set_tonemap_white(value) |
+-----------+--------------------------+
| *Getter*  | get_tonemap_white()      |
+-----------+--------------------------+

The white reference value for tonemapping. Only effective if the :ref:`tonemap_mode<class_Environment_property_tonemap_mode>` isn't set to :ref:`TONE_MAPPER_LINEAR<class_Environment_constant_TONE_MAPPER_LINEAR>`.

Method Descriptions
-------------------

.. _class_Environment_method_is_glow_level_enabled:

- :ref:`bool<class_bool>` **is_glow_level_enabled** **(** :ref:`int<class_int>` idx **)** |const|

Returns ``true`` if the glow level ``idx`` is specified, ``false`` otherwise.

----

.. _class_Environment_method_set_glow_level:

- void **set_glow_level** **(** :ref:`int<class_int>` idx, :ref:`bool<class_bool>` enabled **)**

Enables or disables the glow level at index ``idx``. Each level relies on the previous level. This means that enabling higher glow levels will slow down the glow effect rendering, even if previous levels aren't enabled.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
