:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ParticlesMaterial.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ParticlesMaterial:

ParticlesMaterial
=================

**Inherits:** :ref:`Material<class_Material>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Particle properties for :ref:`Particles<class_Particles>` and :ref:`Particles2D<class_Particles2D>` nodes.

Description
-----------

ParticlesMaterial defines particle properties and behavior. It is used in the ``process_material`` of :ref:`Particles<class_Particles>` and :ref:`Particles2D<class_Particles2D>` emitter nodes.

Some of this material's properties are applied to each particle when emitted, while others can have a :ref:`CurveTexture<class_CurveTexture>` applied to vary values over the lifetime of the particle.

When a randomness ratio is applied to a property it is used to scale that property by a random amount. The random ratio is used to interpolate between ``1.0`` and a random number less than one, the result is multiplied by the property to obtain the randomized property. For example a random ratio of ``0.4`` would scale the original property between ``0.4-1.0`` of its original value.

Properties
----------

+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`angle<class_ParticlesMaterial_property_angle>`                                           | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`angle_curve<class_ParticlesMaterial_property_angle_curve>`                               |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`angle_random<class_ParticlesMaterial_property_angle_random>`                             | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`angular_velocity<class_ParticlesMaterial_property_angular_velocity>`                     | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`angular_velocity_curve<class_ParticlesMaterial_property_angular_velocity_curve>`         |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`angular_velocity_random<class_ParticlesMaterial_property_angular_velocity_random>`       | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`anim_offset<class_ParticlesMaterial_property_anim_offset>`                               | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`anim_offset_curve<class_ParticlesMaterial_property_anim_offset_curve>`                   |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`anim_offset_random<class_ParticlesMaterial_property_anim_offset_random>`                 | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`anim_speed<class_ParticlesMaterial_property_anim_speed>`                                 | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`anim_speed_curve<class_ParticlesMaterial_property_anim_speed_curve>`                     |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`anim_speed_random<class_ParticlesMaterial_property_anim_speed_random>`                   | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Color<class_Color>`                                  | :ref:`color<class_ParticlesMaterial_property_color>`                                           | ``Color( 1, 1, 1, 1 )``   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`color_ramp<class_ParticlesMaterial_property_color_ramp>`                                 |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`damping<class_ParticlesMaterial_property_damping>`                                       | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`damping_curve<class_ParticlesMaterial_property_damping_curve>`                           |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`damping_random<class_ParticlesMaterial_property_damping_random>`                         | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Vector3<class_Vector3>`                              | :ref:`direction<class_ParticlesMaterial_property_direction>`                                   | ``Vector3( 1, 0, 0 )``    |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Vector3<class_Vector3>`                              | :ref:`emission_box_extents<class_ParticlesMaterial_property_emission_box_extents>`             |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`emission_color_texture<class_ParticlesMaterial_property_emission_color_texture>`         |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`emission_normal_texture<class_ParticlesMaterial_property_emission_normal_texture>`       |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`int<class_int>`                                      | :ref:`emission_point_count<class_ParticlesMaterial_property_emission_point_count>`             |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`         |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Vector3<class_Vector3>`                              | :ref:`emission_ring_axis<class_ParticlesMaterial_property_emission_ring_axis>`                 |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`emission_ring_height<class_ParticlesMaterial_property_emission_ring_height>`             |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`emission_ring_inner_radius<class_ParticlesMaterial_property_emission_ring_inner_radius>` |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`emission_ring_radius<class_ParticlesMaterial_property_emission_ring_radius>`             |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` | :ref:`emission_shape<class_ParticlesMaterial_property_emission_shape>`                         | ``0``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`emission_sphere_radius<class_ParticlesMaterial_property_emission_sphere_radius>`         |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`flag_align_y<class_ParticlesMaterial_property_flag_align_y>`                             | ``false``                 |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>`                         | ``false``                 |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`flag_rotate_y<class_ParticlesMaterial_property_flag_rotate_y>`                           | ``false``                 |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`flatness<class_ParticlesMaterial_property_flatness>`                                     | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Vector3<class_Vector3>`                              | :ref:`gravity<class_ParticlesMaterial_property_gravity>`                                       | ``Vector3( 0, -9.8, 0 )`` |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`hue_variation<class_ParticlesMaterial_property_hue_variation>`                           | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`hue_variation_curve<class_ParticlesMaterial_property_hue_variation_curve>`               |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`hue_variation_random<class_ParticlesMaterial_property_hue_variation_random>`             | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`initial_velocity<class_ParticlesMaterial_property_initial_velocity>`                     | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`initial_velocity_random<class_ParticlesMaterial_property_initial_velocity_random>`       | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`lifetime_randomness<class_ParticlesMaterial_property_lifetime_randomness>`               | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`linear_accel<class_ParticlesMaterial_property_linear_accel>`                             | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`linear_accel_curve<class_ParticlesMaterial_property_linear_accel_curve>`                 |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`linear_accel_random<class_ParticlesMaterial_property_linear_accel_random>`               | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`orbit_velocity<class_ParticlesMaterial_property_orbit_velocity>`                         |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`orbit_velocity_curve<class_ParticlesMaterial_property_orbit_velocity_curve>`             |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`orbit_velocity_random<class_ParticlesMaterial_property_orbit_velocity_random>`           |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`radial_accel<class_ParticlesMaterial_property_radial_accel>`                             | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`radial_accel_curve<class_ParticlesMaterial_property_radial_accel_curve>`                 |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`radial_accel_random<class_ParticlesMaterial_property_radial_accel_random>`               | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`scale<class_ParticlesMaterial_property_scale>`                                           | ``1.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`scale_curve<class_ParticlesMaterial_property_scale_curve>`                               |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`scale_random<class_ParticlesMaterial_property_scale_random>`                             | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`spread<class_ParticlesMaterial_property_spread>`                                         | ``45.0``                  |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`tangential_accel<class_ParticlesMaterial_property_tangential_accel>`                     | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Texture<class_Texture>`                              | :ref:`tangential_accel_curve<class_ParticlesMaterial_property_tangential_accel_curve>`         |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`tangential_accel_random<class_ParticlesMaterial_property_tangential_accel_random>`       | ``0.0``                   |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`GradientTexture<class_GradientTexture>`              | :ref:`trail_color_modifier<class_ParticlesMaterial_property_trail_color_modifier>`             |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`int<class_int>`                                      | :ref:`trail_divisor<class_ParticlesMaterial_property_trail_divisor>`                           | ``1``                     |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`CurveTexture<class_CurveTexture>`                    | :ref:`trail_size_modifier<class_ParticlesMaterial_property_trail_size_modifier>`               |                           |
+------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+

Methods
-------

+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_flag<class_ParticlesMaterial_method_get_flag>` **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag **)** |const|                                                                |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_param<class_ParticlesMaterial_method_get_param>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|                                                     |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_param_randomness<class_ParticlesMaterial_method_get_param_randomness>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|                               |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Texture<class_Texture>` | :ref:`get_param_texture<class_ParticlesMaterial_method_get_param_texture>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|                                     |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_flag<class_ParticlesMaterial_method_set_flag>` **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag, :ref:`bool<class_bool>` enable **)**                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_param<class_ParticlesMaterial_method_set_param>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**                            |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)** |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_ParticlesMaterial_Parameter:

.. _class_ParticlesMaterial_constant_PARAM_INITIAL_LINEAR_VELOCITY:

.. _class_ParticlesMaterial_constant_PARAM_ANGULAR_VELOCITY:

.. _class_ParticlesMaterial_constant_PARAM_ORBIT_VELOCITY:

.. _class_ParticlesMaterial_constant_PARAM_LINEAR_ACCEL:

.. _class_ParticlesMaterial_constant_PARAM_RADIAL_ACCEL:

.. _class_ParticlesMaterial_constant_PARAM_TANGENTIAL_ACCEL:

.. _class_ParticlesMaterial_constant_PARAM_DAMPING:

.. _class_ParticlesMaterial_constant_PARAM_ANGLE:

.. _class_ParticlesMaterial_constant_PARAM_SCALE:

.. _class_ParticlesMaterial_constant_PARAM_HUE_VARIATION:

.. _class_ParticlesMaterial_constant_PARAM_ANIM_SPEED:

.. _class_ParticlesMaterial_constant_PARAM_ANIM_OFFSET:

.. _class_ParticlesMaterial_constant_PARAM_MAX:

enum **Parameter**:

- **PARAM_INITIAL_LINEAR_VELOCITY** = **0** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set initial velocity properties.

- **PARAM_ANGULAR_VELOCITY** = **1** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set angular velocity properties.

- **PARAM_ORBIT_VELOCITY** = **2** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set orbital velocity properties.

- **PARAM_LINEAR_ACCEL** = **3** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set linear acceleration properties.

- **PARAM_RADIAL_ACCEL** = **4** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set radial acceleration properties.

- **PARAM_TANGENTIAL_ACCEL** = **5** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set tangential acceleration properties.

- **PARAM_DAMPING** = **6** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set damping properties.

- **PARAM_ANGLE** = **7** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set angle properties.

- **PARAM_SCALE** = **8** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set scale properties.

- **PARAM_HUE_VARIATION** = **9** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set hue variation properties.

- **PARAM_ANIM_SPEED** = **10** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set animation speed properties.

- **PARAM_ANIM_OFFSET** = **11** --- Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set animation offset properties.

- **PARAM_MAX** = **12** --- Represents the size of the :ref:`Parameter<enum_ParticlesMaterial_Parameter>` enum.

----

.. _enum_ParticlesMaterial_Flags:

.. _class_ParticlesMaterial_constant_FLAG_ALIGN_Y_TO_VELOCITY:

.. _class_ParticlesMaterial_constant_FLAG_ROTATE_Y:

.. _class_ParticlesMaterial_constant_FLAG_DISABLE_Z:

.. _class_ParticlesMaterial_constant_FLAG_MAX:

enum **Flags**:

- **FLAG_ALIGN_Y_TO_VELOCITY** = **0** --- Use with :ref:`set_flag<class_ParticlesMaterial_method_set_flag>` to set :ref:`flag_align_y<class_ParticlesMaterial_property_flag_align_y>`.

- **FLAG_ROTATE_Y** = **1** --- Use with :ref:`set_flag<class_ParticlesMaterial_method_set_flag>` to set :ref:`flag_rotate_y<class_ParticlesMaterial_property_flag_rotate_y>`.

- **FLAG_DISABLE_Z** = **2** --- Use with :ref:`set_flag<class_ParticlesMaterial_method_set_flag>` to set :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>`.

- **FLAG_MAX** = **3** --- Represents the size of the :ref:`Flags<enum_ParticlesMaterial_Flags>` enum.

----

.. _enum_ParticlesMaterial_EmissionShape:

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_POINT:

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_SPHERE:

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_BOX:

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_POINTS:

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_DIRECTED_POINTS:

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_RING:

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_MAX:

enum **EmissionShape**:

- **EMISSION_SHAPE_POINT** = **0** --- All particles will be emitted from a single point.

- **EMISSION_SHAPE_SPHERE** = **1** --- Particles will be emitted in the volume of a sphere.

- **EMISSION_SHAPE_BOX** = **2** --- Particles will be emitted in the volume of a box.

- **EMISSION_SHAPE_POINTS** = **3** --- Particles will be emitted at a position determined by sampling a random point on the :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`. Particle color will be modulated by :ref:`emission_color_texture<class_ParticlesMaterial_property_emission_color_texture>`.

- **EMISSION_SHAPE_DIRECTED_POINTS** = **4** --- Particles will be emitted at a position determined by sampling a random point on the :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`. Particle velocity and rotation will be set based on :ref:`emission_normal_texture<class_ParticlesMaterial_property_emission_normal_texture>`. Particle color will be modulated by :ref:`emission_color_texture<class_ParticlesMaterial_property_emission_color_texture>`.

- **EMISSION_SHAPE_RING** = **5** --- Particles will be emitted in a ring or cylinder.

- **EMISSION_SHAPE_MAX** = **6** --- Represents the size of the :ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` enum.

Property Descriptions
---------------------

.. _class_ParticlesMaterial_property_angle:

- :ref:`float<class_float>` **angle**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial rotation applied to each particle, in degrees.

**Note:** Only applied when :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>` or :ref:`flag_rotate_y<class_ParticlesMaterial_property_flag_rotate_y>` are ``true`` or the :ref:`SpatialMaterial<class_SpatialMaterial>` being used to draw the particle is using :ref:`SpatialMaterial.BILLBOARD_PARTICLES<class_SpatialMaterial_constant_BILLBOARD_PARTICLES>`.

----

.. _class_ParticlesMaterial_property_angle_curve:

- :ref:`Texture<class_Texture>` **angle_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's rotation will be animated along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_angle_random:

- :ref:`float<class_float>` **angle_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Rotation randomness ratio.

----

.. _class_ParticlesMaterial_property_angular_velocity:

- :ref:`float<class_float>` **angular_velocity**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial angular velocity applied to each particle in *degrees* per second. Sets the speed of rotation of the particle.

**Note:** Only applied when :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>` or :ref:`flag_rotate_y<class_ParticlesMaterial_property_flag_rotate_y>` are ``true`` or the :ref:`SpatialMaterial<class_SpatialMaterial>` being used to draw the particle is using :ref:`SpatialMaterial.BILLBOARD_PARTICLES<class_SpatialMaterial_constant_BILLBOARD_PARTICLES>`.

----

.. _class_ParticlesMaterial_property_angular_velocity_curve:

- :ref:`Texture<class_Texture>` **angular_velocity_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's angular velocity will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_angular_velocity_random:

- :ref:`float<class_float>` **angular_velocity_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Angular velocity randomness ratio.

----

.. _class_ParticlesMaterial_property_anim_offset:

- :ref:`float<class_float>` **anim_offset**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Particle animation offset.

----

.. _class_ParticlesMaterial_property_anim_offset_curve:

- :ref:`Texture<class_Texture>` **anim_offset_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's animation offset will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_anim_offset_random:

- :ref:`float<class_float>` **anim_offset_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Animation offset randomness ratio.

----

.. _class_ParticlesMaterial_property_anim_speed:

- :ref:`float<class_float>` **anim_speed**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Particle animation speed.

----

.. _class_ParticlesMaterial_property_anim_speed_curve:

- :ref:`Texture<class_Texture>` **anim_speed_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's animation speed will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_anim_speed_random:

- :ref:`float<class_float>` **anim_speed_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Animation speed randomness ratio.

----

.. _class_ParticlesMaterial_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_color(value)        |
+-----------+-------------------------+
| *Getter*  | get_color()             |
+-----------+-------------------------+

Each particle's initial color. If the :ref:`Particles2D<class_Particles2D>`'s ``texture`` is defined, it will be multiplied by this color. To have particle display color in a :ref:`SpatialMaterial<class_SpatialMaterial>` make sure to set :ref:`SpatialMaterial.vertex_color_use_as_albedo<class_SpatialMaterial_property_vertex_color_use_as_albedo>` to ``true``.

----

.. _class_ParticlesMaterial_property_color_ramp:

- :ref:`Texture<class_Texture>` **color_ramp**

+----------+-----------------------+
| *Setter* | set_color_ramp(value) |
+----------+-----------------------+
| *Getter* | get_color_ramp()      |
+----------+-----------------------+

Each particle's color will vary along this :ref:`GradientTexture<class_GradientTexture>` over its lifetime (multiplied with :ref:`color<class_ParticlesMaterial_property_color>`).

----

.. _class_ParticlesMaterial_property_damping:

- :ref:`float<class_float>` **damping**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

The rate at which particles lose velocity.

----

.. _class_ParticlesMaterial_property_damping_curve:

- :ref:`Texture<class_Texture>` **damping_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Damping will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_damping_random:

- :ref:`float<class_float>` **damping_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Damping randomness ratio.

----

.. _class_ParticlesMaterial_property_direction:

- :ref:`Vector3<class_Vector3>` **direction**

+-----------+------------------------+
| *Default* | ``Vector3( 1, 0, 0 )`` |
+-----------+------------------------+
| *Setter*  | set_direction(value)   |
+-----------+------------------------+
| *Getter*  | get_direction()        |
+-----------+------------------------+

Unit vector specifying the particles' emission direction.

----

.. _class_ParticlesMaterial_property_emission_box_extents:

- :ref:`Vector3<class_Vector3>` **emission_box_extents**

+----------+---------------------------------+
| *Setter* | set_emission_box_extents(value) |
+----------+---------------------------------+
| *Getter* | get_emission_box_extents()      |
+----------+---------------------------------+

The box's extents if ``emission_shape`` is set to :ref:`EMISSION_SHAPE_BOX<class_ParticlesMaterial_constant_EMISSION_SHAPE_BOX>`.

----

.. _class_ParticlesMaterial_property_emission_color_texture:

- :ref:`Texture<class_Texture>` **emission_color_texture**

+----------+-----------------------------------+
| *Setter* | set_emission_color_texture(value) |
+----------+-----------------------------------+
| *Getter* | get_emission_color_texture()      |
+----------+-----------------------------------+

Particle color will be modulated by color determined by sampling this texture at the same point as the :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`.

----

.. _class_ParticlesMaterial_property_emission_normal_texture:

- :ref:`Texture<class_Texture>` **emission_normal_texture**

+----------+------------------------------------+
| *Setter* | set_emission_normal_texture(value) |
+----------+------------------------------------+
| *Getter* | get_emission_normal_texture()      |
+----------+------------------------------------+

Particle velocity and rotation will be set by sampling this texture at the same point as the :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`. Used only in :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_DIRECTED_POINTS>`. Can be created automatically from mesh or node by selecting "Create Emission Points from Mesh/Node" under the "Particles" tool in the toolbar.

----

.. _class_ParticlesMaterial_property_emission_point_count:

- :ref:`int<class_int>` **emission_point_count**

+----------+---------------------------------+
| *Setter* | set_emission_point_count(value) |
+----------+---------------------------------+
| *Getter* | get_emission_point_count()      |
+----------+---------------------------------+

The number of emission points if ``emission_shape`` is set to :ref:`EMISSION_SHAPE_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_POINTS>` or :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_ParticlesMaterial_property_emission_point_texture:

- :ref:`Texture<class_Texture>` **emission_point_texture**

+----------+-----------------------------------+
| *Setter* | set_emission_point_texture(value) |
+----------+-----------------------------------+
| *Getter* | get_emission_point_texture()      |
+----------+-----------------------------------+

Particles will be emitted at positions determined by sampling this texture at a random position. Used with :ref:`EMISSION_SHAPE_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_POINTS>` and :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_DIRECTED_POINTS>`. Can be created automatically from mesh or node by selecting "Create Emission Points from Mesh/Node" under the "Particles" tool in the toolbar.

----

.. _class_ParticlesMaterial_property_emission_ring_axis:

- :ref:`Vector3<class_Vector3>` **emission_ring_axis**

+----------+-------------------------------+
| *Setter* | set_emission_ring_axis(value) |
+----------+-------------------------------+
| *Getter* | get_emission_ring_axis()      |
+----------+-------------------------------+

The axis of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_ParticlesMaterial_constant_EMISSION_SHAPE_RING>`.

----

.. _class_ParticlesMaterial_property_emission_ring_height:

- :ref:`float<class_float>` **emission_ring_height**

+----------+---------------------------------+
| *Setter* | set_emission_ring_height(value) |
+----------+---------------------------------+
| *Getter* | get_emission_ring_height()      |
+----------+---------------------------------+

The height of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_ParticlesMaterial_constant_EMISSION_SHAPE_RING>`.

----

.. _class_ParticlesMaterial_property_emission_ring_inner_radius:

- :ref:`float<class_float>` **emission_ring_inner_radius**

+----------+---------------------------------------+
| *Setter* | set_emission_ring_inner_radius(value) |
+----------+---------------------------------------+
| *Getter* | get_emission_ring_inner_radius()      |
+----------+---------------------------------------+

The inner radius of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_ParticlesMaterial_constant_EMISSION_SHAPE_RING>`.

----

.. _class_ParticlesMaterial_property_emission_ring_radius:

- :ref:`float<class_float>` **emission_ring_radius**

+----------+---------------------------------+
| *Setter* | set_emission_ring_radius(value) |
+----------+---------------------------------+
| *Getter* | get_emission_ring_radius()      |
+----------+---------------------------------+

The radius of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_ParticlesMaterial_constant_EMISSION_SHAPE_RING>`.

----

.. _class_ParticlesMaterial_property_emission_shape:

- :ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **emission_shape**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_emission_shape(value) |
+-----------+---------------------------+
| *Getter*  | get_emission_shape()      |
+-----------+---------------------------+

Particles will be emitted inside this region. Use :ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` constants for values.

----

.. _class_ParticlesMaterial_property_emission_sphere_radius:

- :ref:`float<class_float>` **emission_sphere_radius**

+----------+-----------------------------------+
| *Setter* | set_emission_sphere_radius(value) |
+----------+-----------------------------------+
| *Getter* | get_emission_sphere_radius()      |
+----------+-----------------------------------+

The sphere's radius if ``emission_shape`` is set to :ref:`EMISSION_SHAPE_SPHERE<class_ParticlesMaterial_constant_EMISSION_SHAPE_SPHERE>`.

----

.. _class_ParticlesMaterial_property_flag_align_y:

- :ref:`bool<class_bool>` **flag_align_y**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

Align Y axis of particle with the direction of its velocity.

----

.. _class_ParticlesMaterial_property_flag_disable_z:

- :ref:`bool<class_bool>` **flag_disable_z**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

If ``true``, particles will not move on the z axis.

----

.. _class_ParticlesMaterial_property_flag_rotate_y:

- :ref:`bool<class_bool>` **flag_rotate_y**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

If ``true``, particles rotate around Y axis by :ref:`angle<class_ParticlesMaterial_property_angle>`.

----

.. _class_ParticlesMaterial_property_flatness:

- :ref:`float<class_float>` **flatness**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_flatness(value) |
+-----------+---------------------+
| *Getter*  | get_flatness()      |
+-----------+---------------------+

Amount of :ref:`spread<class_ParticlesMaterial_property_spread>` along the Y axis.

----

.. _class_ParticlesMaterial_property_gravity:

- :ref:`Vector3<class_Vector3>` **gravity**

+-----------+---------------------------+
| *Default* | ``Vector3( 0, -9.8, 0 )`` |
+-----------+---------------------------+
| *Setter*  | set_gravity(value)        |
+-----------+---------------------------+
| *Getter*  | get_gravity()             |
+-----------+---------------------------+

Gravity applied to every particle.

----

.. _class_ParticlesMaterial_property_hue_variation:

- :ref:`float<class_float>` **hue_variation**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial hue variation applied to each particle.

----

.. _class_ParticlesMaterial_property_hue_variation_curve:

- :ref:`Texture<class_Texture>` **hue_variation_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's hue will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_hue_variation_random:

- :ref:`float<class_float>` **hue_variation_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Hue variation randomness ratio.

----

.. _class_ParticlesMaterial_property_initial_velocity:

- :ref:`float<class_float>` **initial_velocity**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial velocity magnitude for each particle. Direction comes from :ref:`spread<class_ParticlesMaterial_property_spread>` and the node's orientation.

----

.. _class_ParticlesMaterial_property_initial_velocity_random:

- :ref:`float<class_float>` **initial_velocity_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Initial velocity randomness ratio.

----

.. _class_ParticlesMaterial_property_lifetime_randomness:

- :ref:`float<class_float>` **lifetime_randomness**

+-----------+--------------------------------+
| *Default* | ``0.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_lifetime_randomness(value) |
+-----------+--------------------------------+
| *Getter*  | get_lifetime_randomness()      |
+-----------+--------------------------------+

Particle lifetime randomness ratio.

----

.. _class_ParticlesMaterial_property_linear_accel:

- :ref:`float<class_float>` **linear_accel**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Linear acceleration applied to each particle in the direction of motion.

----

.. _class_ParticlesMaterial_property_linear_accel_curve:

- :ref:`Texture<class_Texture>` **linear_accel_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's linear acceleration will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_linear_accel_random:

- :ref:`float<class_float>` **linear_accel_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Linear acceleration randomness ratio.

----

.. _class_ParticlesMaterial_property_orbit_velocity:

- :ref:`float<class_float>` **orbit_velocity**

+----------+------------------+
| *Setter* | set_param(value) |
+----------+------------------+
| *Getter* | get_param()      |
+----------+------------------+

Orbital velocity applied to each particle. Makes the particles circle around origin. Specified in number of full rotations around origin per second.

**Note:** Only available when :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>` is ``true``.

----

.. _class_ParticlesMaterial_property_orbit_velocity_curve:

- :ref:`Texture<class_Texture>` **orbit_velocity_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's orbital velocity will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_orbit_velocity_random:

- :ref:`float<class_float>` **orbit_velocity_random**

+----------+-----------------------------+
| *Setter* | set_param_randomness(value) |
+----------+-----------------------------+
| *Getter* | get_param_randomness()      |
+----------+-----------------------------+

Orbital velocity randomness ratio.

----

.. _class_ParticlesMaterial_property_radial_accel:

- :ref:`float<class_float>` **radial_accel**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Radial acceleration applied to each particle. Makes particle accelerate away from origin.

----

.. _class_ParticlesMaterial_property_radial_accel_curve:

- :ref:`Texture<class_Texture>` **radial_accel_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's radial acceleration will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_radial_accel_random:

- :ref:`float<class_float>` **radial_accel_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Radial acceleration randomness ratio.

----

.. _class_ParticlesMaterial_property_scale:

- :ref:`float<class_float>` **scale**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial scale applied to each particle.

----

.. _class_ParticlesMaterial_property_scale_curve:

- :ref:`Texture<class_Texture>` **scale_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's scale will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_scale_random:

- :ref:`float<class_float>` **scale_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Scale randomness ratio.

----

.. _class_ParticlesMaterial_property_spread:

- :ref:`float<class_float>` **spread**

+-----------+-------------------+
| *Default* | ``45.0``          |
+-----------+-------------------+
| *Setter*  | set_spread(value) |
+-----------+-------------------+
| *Getter*  | get_spread()      |
+-----------+-------------------+

Each particle's initial direction range from ``+spread`` to ``-spread`` degrees.

----

.. _class_ParticlesMaterial_property_tangential_accel:

- :ref:`float<class_float>` **tangential_accel**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Tangential acceleration applied to each particle. Tangential acceleration is perpendicular to the particle's velocity giving the particles a swirling motion.

----

.. _class_ParticlesMaterial_property_tangential_accel_curve:

- :ref:`Texture<class_Texture>` **tangential_accel_curve**

+----------+--------------------------+
| *Setter* | set_param_texture(value) |
+----------+--------------------------+
| *Getter* | get_param_texture()      |
+----------+--------------------------+

Each particle's tangential acceleration will vary along this :ref:`CurveTexture<class_CurveTexture>`.

----

.. _class_ParticlesMaterial_property_tangential_accel_random:

- :ref:`float<class_float>` **tangential_accel_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Tangential acceleration randomness ratio.

----

.. _class_ParticlesMaterial_property_trail_color_modifier:

- :ref:`GradientTexture<class_GradientTexture>` **trail_color_modifier**

+----------+---------------------------------+
| *Setter* | set_trail_color_modifier(value) |
+----------+---------------------------------+
| *Getter* | get_trail_color_modifier()      |
+----------+---------------------------------+

Trail particles' color will vary along this :ref:`GradientTexture<class_GradientTexture>`.

----

.. _class_ParticlesMaterial_property_trail_divisor:

- :ref:`int<class_int>` **trail_divisor**

+-----------+--------------------------+
| *Default* | ``1``                    |
+-----------+--------------------------+
| *Setter*  | set_trail_divisor(value) |
+-----------+--------------------------+
| *Getter*  | get_trail_divisor()      |
+-----------+--------------------------+

Emitter will emit ``amount`` divided by ``trail_divisor`` particles. The remaining particles will be used as trail(s).

----

.. _class_ParticlesMaterial_property_trail_size_modifier:

- :ref:`CurveTexture<class_CurveTexture>` **trail_size_modifier**

+----------+--------------------------------+
| *Setter* | set_trail_size_modifier(value) |
+----------+--------------------------------+
| *Getter* | get_trail_size_modifier()      |
+----------+--------------------------------+

Trail particles' size will vary along this :ref:`CurveTexture<class_CurveTexture>`.

Method Descriptions
-------------------

.. _class_ParticlesMaterial_method_get_flag:

- :ref:`bool<class_bool>` **get_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag **)** |const|

Returns ``true`` if the specified flag is enabled.

----

.. _class_ParticlesMaterial_method_get_param:

- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Returns the value of the specified parameter.

----

.. _class_ParticlesMaterial_method_get_param_randomness:

- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Returns the randomness ratio associated with the specified parameter.

----

.. _class_ParticlesMaterial_method_get_param_texture:

- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Returns the :ref:`Texture<class_Texture>` used by the specified parameter.

----

.. _class_ParticlesMaterial_method_set_flag:

- void **set_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag, :ref:`bool<class_bool>` enable **)**

If ``true``, enables the specified flag. See :ref:`Flags<enum_ParticlesMaterial_Flags>` for options.

----

.. _class_ParticlesMaterial_method_set_param:

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**

Sets the specified :ref:`Parameter<enum_ParticlesMaterial_Parameter>`.

----

.. _class_ParticlesMaterial_method_set_param_randomness:

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**

Sets the randomness ratio for the specified :ref:`Parameter<enum_ParticlesMaterial_Parameter>`.

----

.. _class_ParticlesMaterial_method_set_param_texture:

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**

Sets the :ref:`Texture<class_Texture>` for the specified :ref:`Parameter<enum_ParticlesMaterial_Parameter>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
