:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the StreamPeerSSL.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_StreamPeerSSL:

StreamPeerSSL
=============

**Inherits:** :ref:`StreamPeer<class_StreamPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

SSL stream peer.

Description
-----------

SSL stream peer. This object can be used to connect to an SSL server or accept a single SSL client connection.

Tutorials
---------

- :doc:`../tutorials/networking/ssl_certificates`

Properties
----------

+-------------------------+----------------------------------------------------------------------------+----------+
| :ref:`bool<class_bool>` | :ref:`blocking_handshake<class_StreamPeerSSL_property_blocking_handshake>` | ``true`` |
+-------------------------+----------------------------------------------------------------------------+----------+

Methods
-------

+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`accept_stream<class_StreamPeerSSL_method_accept_stream>` **(** :ref:`StreamPeer<class_StreamPeer>` stream, :ref:`CryptoKey<class_CryptoKey>` private_key, :ref:`X509Certificate<class_X509Certificate>` certificate, :ref:`X509Certificate<class_X509Certificate>` chain=null **)**      |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`connect_to_stream<class_StreamPeerSSL_method_connect_to_stream>` **(** :ref:`StreamPeer<class_StreamPeer>` stream, :ref:`bool<class_bool>` validate_certs=false, :ref:`String<class_String>` for_hostname="", :ref:`X509Certificate<class_X509Certificate>` valid_certificate=null **)** |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                     | :ref:`disconnect_from_stream<class_StreamPeerSSL_method_disconnect_from_stream>` **(** **)**                                                                                                                                                                                                   |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Status<enum_StreamPeerSSL_Status>` | :ref:`get_status<class_StreamPeerSSL_method_get_status>` **(** **)** |const|                                                                                                                                                                                                                   |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                     | :ref:`poll<class_StreamPeerSSL_method_poll>` **(** **)**                                                                                                                                                                                                                                       |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_StreamPeerSSL_Status:

.. _class_StreamPeerSSL_constant_STATUS_DISCONNECTED:

.. _class_StreamPeerSSL_constant_STATUS_HANDSHAKING:

.. _class_StreamPeerSSL_constant_STATUS_CONNECTED:

.. _class_StreamPeerSSL_constant_STATUS_ERROR:

.. _class_StreamPeerSSL_constant_STATUS_ERROR_HOSTNAME_MISMATCH:

enum **Status**:

- **STATUS_DISCONNECTED** = **0** --- A status representing a ``StreamPeerSSL`` that is disconnected.

- **STATUS_HANDSHAKING** = **1** --- A status representing a ``StreamPeerSSL`` during handshaking.

- **STATUS_CONNECTED** = **2** --- A status representing a ``StreamPeerSSL`` that is connected to a host.

- **STATUS_ERROR** = **3** --- A status representing a ``StreamPeerSSL`` in error state.

- **STATUS_ERROR_HOSTNAME_MISMATCH** = **4** --- An error status that shows a mismatch in the SSL certificate domain presented by the host and the domain requested for validation.

Property Descriptions
---------------------

.. _class_StreamPeerSSL_property_blocking_handshake:

- :ref:`bool<class_bool>` **blocking_handshake**

+-----------+---------------------------------------+
| *Default* | ``true``                              |
+-----------+---------------------------------------+
| *Setter*  | set_blocking_handshake_enabled(value) |
+-----------+---------------------------------------+
| *Getter*  | is_blocking_handshake_enabled()       |
+-----------+---------------------------------------+

Method Descriptions
-------------------

.. _class_StreamPeerSSL_method_accept_stream:

- :ref:`Error<enum_@GlobalScope_Error>` **accept_stream** **(** :ref:`StreamPeer<class_StreamPeer>` stream, :ref:`CryptoKey<class_CryptoKey>` private_key, :ref:`X509Certificate<class_X509Certificate>` certificate, :ref:`X509Certificate<class_X509Certificate>` chain=null **)**

Accepts a peer connection as a server using the given ``private_key`` and providing the given ``certificate`` to the client. You can pass the optional ``chain`` parameter to provide additional CA chain information along with the certificate.

----

.. _class_StreamPeerSSL_method_connect_to_stream:

- :ref:`Error<enum_@GlobalScope_Error>` **connect_to_stream** **(** :ref:`StreamPeer<class_StreamPeer>` stream, :ref:`bool<class_bool>` validate_certs=false, :ref:`String<class_String>` for_hostname="", :ref:`X509Certificate<class_X509Certificate>` valid_certificate=null **)**

Connects to a peer using an underlying :ref:`StreamPeer<class_StreamPeer>` ``stream``. If ``validate_certs`` is ``true``, ``StreamPeerSSL`` will validate that the certificate presented by the peer matches the ``for_hostname``.

**Note:** Specifying a custom ``valid_certificate`` is not supported in HTML5 exports due to browsers restrictions.

----

.. _class_StreamPeerSSL_method_disconnect_from_stream:

- void **disconnect_from_stream** **(** **)**

Disconnects from host.

----

.. _class_StreamPeerSSL_method_get_status:

- :ref:`Status<enum_StreamPeerSSL_Status>` **get_status** **(** **)** |const|

Returns the status of the connection. See :ref:`Status<enum_StreamPeerSSL_Status>` for values.

----

.. _class_StreamPeerSSL_method_poll:

- void **poll** **(** **)**

Poll the connection to check for incoming bytes. Call this right before :ref:`StreamPeer.get_available_bytes<class_StreamPeer_method_get_available_bytes>` for it to work properly.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
