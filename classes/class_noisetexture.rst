:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the NoiseTexture.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_NoiseTexture:

NoiseTexture
============

**Inherits:** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

:ref:`OpenSimplexNoise<class_OpenSimplexNoise>` filled texture.

Description
-----------

Uses an :ref:`OpenSimplexNoise<class_OpenSimplexNoise>` to fill the texture data. You can specify the texture size but keep in mind that larger textures will take longer to generate and seamless noise only works with square sized textures.

NoiseTexture can also generate normalmap textures.

The class uses :ref:`Thread<class_Thread>`\ s to generate the texture data internally, so :ref:`Texture.get_data<class_Texture_method_get_data>` may return ``null`` if the generation process has not completed yet. In that case, you need to wait for the texture to be generated before accessing the data:

::

    var texture = preload("res://noise.tres")
    yield(texture, "changed")
    var image = texture.get_data()

Properties
----------

+-------------------------------------------------+-----------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                         | :ref:`as_normalmap<class_NoiseTexture_property_as_normalmap>`   | ``false``                 |
+-------------------------------------------------+-----------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                       | :ref:`bump_strength<class_NoiseTexture_property_bump_strength>` | ``8.0``                   |
+-------------------------------------------------+-----------------------------------------------------------------+---------------------------+
| :ref:`int<class_int>`                           | flags                                                           | ``7`` *(parent override)* |
+-------------------------------------------------+-----------------------------------------------------------------+---------------------------+
| :ref:`int<class_int>`                           | :ref:`height<class_NoiseTexture_property_height>`               | ``512``                   |
+-------------------------------------------------+-----------------------------------------------------------------+---------------------------+
| :ref:`OpenSimplexNoise<class_OpenSimplexNoise>` | :ref:`noise<class_NoiseTexture_property_noise>`                 |                           |
+-------------------------------------------------+-----------------------------------------------------------------+---------------------------+
| :ref:`Vector2<class_Vector2>`                   | :ref:`noise_offset<class_NoiseTexture_property_noise_offset>`   | ``Vector2( 0, 0 )``       |
+-------------------------------------------------+-----------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                         | :ref:`seamless<class_NoiseTexture_property_seamless>`           | ``false``                 |
+-------------------------------------------------+-----------------------------------------------------------------+---------------------------+
| :ref:`int<class_int>`                           | :ref:`width<class_NoiseTexture_property_width>`                 | ``512``                   |
+-------------------------------------------------+-----------------------------------------------------------------+---------------------------+

Property Descriptions
---------------------

.. _class_NoiseTexture_property_as_normalmap:

- :ref:`bool<class_bool>` **as_normalmap**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_as_normalmap(value) |
+-----------+-------------------------+
| *Getter*  | is_normalmap()          |
+-----------+-------------------------+

If ``true``, the resulting texture contains a normal map created from the original noise interpreted as a bump map.

----

.. _class_NoiseTexture_property_bump_strength:

- :ref:`float<class_float>` **bump_strength**

+-----------+--------------------------+
| *Default* | ``8.0``                  |
+-----------+--------------------------+
| *Setter*  | set_bump_strength(value) |
+-----------+--------------------------+
| *Getter*  | get_bump_strength()      |
+-----------+--------------------------+

Strength of the bump maps used in this texture. A higher value will make the bump maps appear larger while a lower value will make them appear softer.

----

.. _class_NoiseTexture_property_height:

- :ref:`int<class_int>` **height**

+-----------+-------------------+
| *Default* | ``512``           |
+-----------+-------------------+
| *Setter*  | set_height(value) |
+-----------+-------------------+
| *Getter*  | get_height()      |
+-----------+-------------------+

Height of the generated texture.

----

.. _class_NoiseTexture_property_noise:

- :ref:`OpenSimplexNoise<class_OpenSimplexNoise>` **noise**

+----------+------------------+
| *Setter* | set_noise(value) |
+----------+------------------+
| *Getter* | get_noise()      |
+----------+------------------+

The :ref:`OpenSimplexNoise<class_OpenSimplexNoise>` instance used to generate the noise.

----

.. _class_NoiseTexture_property_noise_offset:

- :ref:`Vector2<class_Vector2>` **noise_offset**

+-----------+-------------------------+
| *Default* | ``Vector2( 0, 0 )``     |
+-----------+-------------------------+
| *Setter*  | set_noise_offset(value) |
+-----------+-------------------------+
| *Getter*  | get_noise_offset()      |
+-----------+-------------------------+

An offset used to specify the noise space coordinate of the top left corner of the generated noise. This value is ignored if :ref:`seamless<class_NoiseTexture_property_seamless>` is enabled.

----

.. _class_NoiseTexture_property_seamless:

- :ref:`bool<class_bool>` **seamless**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_seamless(value) |
+-----------+---------------------+
| *Getter*  | get_seamless()      |
+-----------+---------------------+

Whether the texture can be tiled without visible seams or not. Seamless textures take longer to generate.

**Note:** Seamless noise has a lower contrast compared to non-seamless noise. This is due to the way noise uses higher dimensions for generating seamless noise.

----

.. _class_NoiseTexture_property_width:

- :ref:`int<class_int>` **width**

+-----------+------------------+
| *Default* | ``512``          |
+-----------+------------------+
| *Setter*  | set_width(value) |
+-----------+------------------+
| *Getter*  | get_width()      |
+-----------+------------------+

Width of the generated texture.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
