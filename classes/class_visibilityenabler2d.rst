:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisibilityEnabler2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisibilityEnabler2D:

VisibilityEnabler2D
===================

**Inherits:** :ref:`VisibilityNotifier2D<class_VisibilityNotifier2D>` **<** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Enables certain nodes only when approximately visible.

Description
-----------

The VisibilityEnabler2D will disable :ref:`RigidBody2D<class_RigidBody2D>`, :ref:`AnimationPlayer<class_AnimationPlayer>`, and other nodes when they are not visible. It will only affect nodes with the same root node as the VisibilityEnabler2D, and the root node itself.

If you just want to receive notifications, use :ref:`VisibilityNotifier2D<class_VisibilityNotifier2D>` instead.

**Note:** For performance reasons, VisibilityEnabler2D uses an approximate heuristic with precision determined by :ref:`ProjectSettings.world/2d/cell_size<class_ProjectSettings_property_world/2d/cell_size>`. If you need precise visibility checking, use another method such as adding an :ref:`Area2D<class_Area2D>` node as a child of a :ref:`Camera2D<class_Camera2D>` node.

**Note:** VisibilityEnabler2D will not affect nodes added after scene initialization.

Properties
----------

+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`freeze_bodies<class_VisibilityEnabler2D_property_freeze_bodies>`                   | ``true``  |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`pause_animated_sprites<class_VisibilityEnabler2D_property_pause_animated_sprites>` | ``true``  |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`pause_animations<class_VisibilityEnabler2D_property_pause_animations>`             | ``true``  |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`pause_particles<class_VisibilityEnabler2D_property_pause_particles>`               | ``true``  |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`physics_process_parent<class_VisibilityEnabler2D_property_physics_process_parent>` | ``false`` |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`process_parent<class_VisibilityEnabler2D_property_process_parent>`                 | ``false`` |
+-------------------------+------------------------------------------------------------------------------------------+-----------+

Methods
-------

+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_enabler_enabled<class_VisibilityEnabler2D_method_is_enabler_enabled>` **(** :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` enabler **)** |const|            |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`set_enabler<class_VisibilityEnabler2D_method_set_enabler>` **(** :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` enabler, :ref:`bool<class_bool>` enabled **)** |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_VisibilityEnabler2D_Enabler:

.. _class_VisibilityEnabler2D_constant_ENABLER_PAUSE_ANIMATIONS:

.. _class_VisibilityEnabler2D_constant_ENABLER_FREEZE_BODIES:

.. _class_VisibilityEnabler2D_constant_ENABLER_PAUSE_PARTICLES:

.. _class_VisibilityEnabler2D_constant_ENABLER_PARENT_PROCESS:

.. _class_VisibilityEnabler2D_constant_ENABLER_PARENT_PHYSICS_PROCESS:

.. _class_VisibilityEnabler2D_constant_ENABLER_PAUSE_ANIMATED_SPRITES:

.. _class_VisibilityEnabler2D_constant_ENABLER_MAX:

enum **Enabler**:

- **ENABLER_PAUSE_ANIMATIONS** = **0** --- This enabler will pause :ref:`AnimationPlayer<class_AnimationPlayer>` nodes.

- **ENABLER_FREEZE_BODIES** = **1** --- This enabler will freeze :ref:`RigidBody2D<class_RigidBody2D>` nodes.

- **ENABLER_PAUSE_PARTICLES** = **2** --- This enabler will stop :ref:`Particles2D<class_Particles2D>` nodes.

- **ENABLER_PARENT_PROCESS** = **3** --- This enabler will stop the parent's _process function.

- **ENABLER_PARENT_PHYSICS_PROCESS** = **4** --- This enabler will stop the parent's _physics_process function.

- **ENABLER_PAUSE_ANIMATED_SPRITES** = **5** --- This enabler will stop :ref:`AnimatedSprite<class_AnimatedSprite>` nodes animations.

- **ENABLER_MAX** = **6** --- Represents the size of the :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` enum.

Property Descriptions
---------------------

.. _class_VisibilityEnabler2D_property_freeze_bodies:

- :ref:`bool<class_bool>` **freeze_bodies**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

If ``true``, :ref:`RigidBody2D<class_RigidBody2D>` nodes will be paused.

----

.. _class_VisibilityEnabler2D_property_pause_animated_sprites:

- :ref:`bool<class_bool>` **pause_animated_sprites**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

If ``true``, :ref:`AnimatedSprite<class_AnimatedSprite>` nodes will be paused.

----

.. _class_VisibilityEnabler2D_property_pause_animations:

- :ref:`bool<class_bool>` **pause_animations**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

If ``true``, :ref:`AnimationPlayer<class_AnimationPlayer>` nodes will be paused.

----

.. _class_VisibilityEnabler2D_property_pause_particles:

- :ref:`bool<class_bool>` **pause_particles**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

If ``true``, :ref:`Particles2D<class_Particles2D>` nodes will be paused.

----

.. _class_VisibilityEnabler2D_property_physics_process_parent:

- :ref:`bool<class_bool>` **physics_process_parent**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

If ``true``, the parent's :ref:`Node._physics_process<class_Node_method__physics_process>` will be stopped.

----

.. _class_VisibilityEnabler2D_property_process_parent:

- :ref:`bool<class_bool>` **process_parent**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

If ``true``, the parent's :ref:`Node._process<class_Node_method__process>` will be stopped.

Method Descriptions
-------------------

.. _class_VisibilityEnabler2D_method_is_enabler_enabled:

- :ref:`bool<class_bool>` **is_enabler_enabled** **(** :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` enabler **)** |const|

Returns whether the enabler identified by given :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` constant is active.

----

.. _class_VisibilityEnabler2D_method_set_enabler:

- void **set_enabler** **(** :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` enabler, :ref:`bool<class_bool>` enabled **)**

Sets active state of the enabler identified by given :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` constant.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
