:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the DampedSpringJoint2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_DampedSpringJoint2D:

DampedSpringJoint2D
===================

**Inherits:** :ref:`Joint2D<class_Joint2D>` **<** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Damped spring constraint for 2D physics.

Description
-----------

Damped spring constraint for 2D physics. This resembles a spring joint that always wants to go back to a given length.

Properties
----------

+---------------------------+--------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`damping<class_DampedSpringJoint2D_property_damping>`         | ``1.0``  |
+---------------------------+--------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`length<class_DampedSpringJoint2D_property_length>`           | ``50.0`` |
+---------------------------+--------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`rest_length<class_DampedSpringJoint2D_property_rest_length>` | ``0.0``  |
+---------------------------+--------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`stiffness<class_DampedSpringJoint2D_property_stiffness>`     | ``20.0`` |
+---------------------------+--------------------------------------------------------------------+----------+

Property Descriptions
---------------------

.. _class_DampedSpringJoint2D_property_damping:

- :ref:`float<class_float>` **damping**

+-----------+--------------------+
| *Default* | ``1.0``            |
+-----------+--------------------+
| *Setter*  | set_damping(value) |
+-----------+--------------------+
| *Getter*  | get_damping()      |
+-----------+--------------------+

The spring joint's damping ratio. A value between ``0`` and ``1``. When the two bodies move into different directions the system tries to align them to the spring axis again. A high ``damping`` value forces the attached bodies to align faster.

----

.. _class_DampedSpringJoint2D_property_length:

- :ref:`float<class_float>` **length**

+-----------+-------------------+
| *Default* | ``50.0``          |
+-----------+-------------------+
| *Setter*  | set_length(value) |
+-----------+-------------------+
| *Getter*  | get_length()      |
+-----------+-------------------+

The spring joint's maximum length. The two attached bodies cannot stretch it past this value.

----

.. _class_DampedSpringJoint2D_property_rest_length:

- :ref:`float<class_float>` **rest_length**

+-----------+------------------------+
| *Default* | ``0.0``                |
+-----------+------------------------+
| *Setter*  | set_rest_length(value) |
+-----------+------------------------+
| *Getter*  | get_rest_length()      |
+-----------+------------------------+

When the bodies attached to the spring joint move they stretch or squash it. The joint always tries to resize towards this length.

----

.. _class_DampedSpringJoint2D_property_stiffness:

- :ref:`float<class_float>` **stiffness**

+-----------+----------------------+
| *Default* | ``20.0``             |
+-----------+----------------------+
| *Setter*  | set_stiffness(value) |
+-----------+----------------------+
| *Getter*  | get_stiffness()      |
+-----------+----------------------+

The higher the value, the less the bodies attached to the joint will deform it. The joint applies an opposing force to the bodies, the product of the stiffness multiplied by the size difference from its resting length.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
