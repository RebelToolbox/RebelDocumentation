:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisualShaderNodeExpression.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualShaderNodeExpression:

VisualShaderNodeExpression
==========================

**Inherits:** :ref:`VisualShaderNodeGroupBase<class_VisualShaderNodeGroupBase>` **<** :ref:`VisualShaderNode<class_VisualShaderNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`VisualShaderNodeGlobalExpression<class_VisualShaderNodeGlobalExpression>`

A custom visual shader graph expression written in Godot Shading Language.

Description
-----------

Custom Godot Shading Language expression, with a custom amount of input and output ports.

The provided code is directly injected into the graph's matching shader function (``vertex``, ``fragment``, or ``light``), so it cannot be used to declare functions, varyings, uniforms, or global constants. See :ref:`VisualShaderNodeGlobalExpression<class_VisualShaderNodeGlobalExpression>` for such global definitions.

Properties
----------

+-----------------------------+-------------------------------------------------------------------------+--------+
| :ref:`String<class_String>` | :ref:`expression<class_VisualShaderNodeExpression_property_expression>` | ``""`` |
+-----------------------------+-------------------------------------------------------------------------+--------+

Property Descriptions
---------------------

.. _class_VisualShaderNodeExpression_property_expression:

- :ref:`String<class_String>` **expression**

+-----------+-----------------------+
| *Default* | ``""``                |
+-----------+-----------------------+
| *Setter*  | set_expression(value) |
+-----------+-----------------------+
| *Getter*  | get_expression()      |
+-----------+-----------------------+

An expression in Godot Shading Language, which will be injected at the start of the graph's matching shader function (``vertex``, ``fragment``, or ``light``), and thus cannot be used to declare functions, varyings, uniforms, or global constants.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
