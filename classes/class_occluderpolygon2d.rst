:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the OccluderPolygon2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_OccluderPolygon2D:

OccluderPolygon2D
=================

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Defines a 2D polygon for LightOccluder2D.

Description
-----------

Editor facility that helps you draw a 2D polygon used as resource for :ref:`LightOccluder2D<class_LightOccluder2D>`.

Properties
----------

+--------------------------------------------------+--------------------------------------------------------------+--------------------------+
| :ref:`bool<class_bool>`                          | :ref:`closed<class_OccluderPolygon2D_property_closed>`       | ``true``                 |
+--------------------------------------------------+--------------------------------------------------------------+--------------------------+
| :ref:`CullMode<enum_OccluderPolygon2D_CullMode>` | :ref:`cull_mode<class_OccluderPolygon2D_property_cull_mode>` | ``0``                    |
+--------------------------------------------------+--------------------------------------------------------------+--------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>`  | :ref:`polygon<class_OccluderPolygon2D_property_polygon>`     | ``PoolVector2Array(  )`` |
+--------------------------------------------------+--------------------------------------------------------------+--------------------------+

Enumerations
------------

.. _enum_OccluderPolygon2D_CullMode:

.. _class_OccluderPolygon2D_constant_CULL_DISABLED:

.. _class_OccluderPolygon2D_constant_CULL_CLOCKWISE:

.. _class_OccluderPolygon2D_constant_CULL_COUNTER_CLOCKWISE:

enum **CullMode**:

- **CULL_DISABLED** = **0** --- Culling is disabled. See :ref:`cull_mode<class_OccluderPolygon2D_property_cull_mode>`.

- **CULL_CLOCKWISE** = **1** --- Culling is performed in the clockwise direction. See :ref:`cull_mode<class_OccluderPolygon2D_property_cull_mode>`.

- **CULL_COUNTER_CLOCKWISE** = **2** --- Culling is performed in the counterclockwise direction. See :ref:`cull_mode<class_OccluderPolygon2D_property_cull_mode>`.

Property Descriptions
---------------------

.. _class_OccluderPolygon2D_property_closed:

- :ref:`bool<class_bool>` **closed**

+-----------+-------------------+
| *Default* | ``true``          |
+-----------+-------------------+
| *Setter*  | set_closed(value) |
+-----------+-------------------+
| *Getter*  | is_closed()       |
+-----------+-------------------+

If ``true``, closes the polygon. A closed OccluderPolygon2D occludes the light coming from any direction. An opened OccluderPolygon2D occludes the light only at its outline's direction.

----

.. _class_OccluderPolygon2D_property_cull_mode:

- :ref:`CullMode<enum_OccluderPolygon2D_CullMode>` **cull_mode**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_cull_mode(value) |
+-----------+----------------------+
| *Getter*  | get_cull_mode()      |
+-----------+----------------------+

The culling mode to use.

----

.. _class_OccluderPolygon2D_property_polygon:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **polygon**

+-----------+--------------------------+
| *Default* | ``PoolVector2Array(  )`` |
+-----------+--------------------------+
| *Setter*  | set_polygon(value)       |
+-----------+--------------------------+
| *Getter*  | get_polygon()            |
+-----------+--------------------------+

A :ref:`Vector2<class_Vector2>` array with the index for polygon's vertices positions.

**Note:** The returned value is a copy of the underlying array, rather than a reference.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
