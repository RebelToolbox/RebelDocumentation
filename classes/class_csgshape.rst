:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CSGShape.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CSGShape:

CSGShape
========

**Inherits:** :ref:`GeometryInstance<class_GeometryInstance>` **<** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`CSGCombiner<class_CSGCombiner>`, :ref:`CSGPrimitive<class_CSGPrimitive>`

The CSG base class.

Description
-----------

This is the CSG base class that provides CSG operation support to the various CSG nodes in Godot.

**Note:** CSG nodes are intended to be used for level prototyping. Creating CSG nodes has a significant CPU cost compared to creating a :ref:`MeshInstance<class_MeshInstance>` with a :ref:`PrimitiveMesh<class_PrimitiveMesh>`. Moving a CSG node within another CSG node also has a significant CPU cost, so it should be avoided during gameplay.

Tutorials
---------

- `Prototyping levels with CSG <$DOCS_URL/tutorials/3d/csg_tools.html>`__

Properties
----------

+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                   | :ref:`calculate_tangents<class_CSGShape_property_calculate_tangents>` | ``true``  |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`int<class_int>`                     | :ref:`collision_layer<class_CSGShape_property_collision_layer>`       | ``1``     |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`int<class_int>`                     | :ref:`collision_mask<class_CSGShape_property_collision_mask>`         | ``1``     |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`Operation<enum_CSGShape_Operation>` | :ref:`operation<class_CSGShape_property_operation>`                   | ``0``     |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                 | :ref:`snap<class_CSGShape_property_snap>`                             | ``0.001`` |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                   | :ref:`use_collision<class_CSGShape_property_use_collision>`           | ``false`` |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+

Methods
-------

+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`get_collision_layer_bit<class_CSGShape_method_get_collision_layer_bit>` **(** :ref:`int<class_int>` bit **)** |const|                        |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`get_collision_mask_bit<class_CSGShape_method_get_collision_mask_bit>` **(** :ref:`int<class_int>` bit **)** |const|                          |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`get_meshes<class_CSGShape_method_get_meshes>` **(** **)** |const|                                                                            |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`is_root_shape<class_CSGShape_method_is_root_shape>` **(** **)** |const|                                                                      |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_collision_layer_bit<class_CSGShape_method_set_collision_layer_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)** |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_collision_mask_bit<class_CSGShape_method_set_collision_mask_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**   |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_CSGShape_Operation:

.. _class_CSGShape_constant_OPERATION_UNION:

.. _class_CSGShape_constant_OPERATION_INTERSECTION:

.. _class_CSGShape_constant_OPERATION_SUBTRACTION:

enum **Operation**:

- **OPERATION_UNION** = **0** --- Geometry of both primitives is merged, intersecting geometry is removed.

- **OPERATION_INTERSECTION** = **1** --- Only intersecting geometry remains, the rest is removed.

- **OPERATION_SUBTRACTION** = **2** --- The second shape is subtracted from the first, leaving a dent with its shape.

Property Descriptions
---------------------

.. _class_CSGShape_property_calculate_tangents:

- :ref:`bool<class_bool>` **calculate_tangents**

+-----------+-------------------------------+
| *Default* | ``true``                      |
+-----------+-------------------------------+
| *Setter*  | set_calculate_tangents(value) |
+-----------+-------------------------------+
| *Getter*  | is_calculating_tangents()     |
+-----------+-------------------------------+

Calculate tangents for the CSG shape which allows the use of normal maps. This is only applied on the root shape, this setting is ignored on any child.

----

.. _class_CSGShape_property_collision_layer:

- :ref:`int<class_int>` **collision_layer**

+-----------+----------------------------+
| *Default* | ``1``                      |
+-----------+----------------------------+
| *Setter*  | set_collision_layer(value) |
+-----------+----------------------------+
| *Getter*  | get_collision_layer()      |
+-----------+----------------------------+

The physics layers this area is in.

Collidable objects can exist in any of 32 different layers. These layers work like a tagging system, and are not visual. A collidable can use these layers to select with which objects it can collide, using the collision_mask property.

A contact is detected if object A is in any of the layers that object B scans, or object B is in any layer scanned by object A. See `Collision layers and masks <https://docs.godotengine.org/en/3.4/tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_CSGShape_property_collision_mask:

- :ref:`int<class_int>` **collision_mask**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_collision_mask(value) |
+-----------+---------------------------+
| *Getter*  | get_collision_mask()      |
+-----------+---------------------------+

The physics layers this CSG shape scans for collisions. See `Collision layers and masks <https://docs.godotengine.org/en/3.4/tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_CSGShape_property_operation:

- :ref:`Operation<enum_CSGShape_Operation>` **operation**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_operation(value) |
+-----------+----------------------+
| *Getter*  | get_operation()      |
+-----------+----------------------+

The operation that is performed on this shape. This is ignored for the first CSG child node as the operation is between this node and the previous child of this nodes parent.

----

.. _class_CSGShape_property_snap:

- :ref:`float<class_float>` **snap**

+-----------+-----------------+
| *Default* | ``0.001``       |
+-----------+-----------------+
| *Setter*  | set_snap(value) |
+-----------+-----------------+
| *Getter*  | get_snap()      |
+-----------+-----------------+

Snap makes the mesh snap to a given distance so that the faces of two meshes can be perfectly aligned. A lower value results in greater precision but may be harder to adjust.

----

.. _class_CSGShape_property_use_collision:

- :ref:`bool<class_bool>` **use_collision**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_use_collision(value) |
+-----------+--------------------------+
| *Getter*  | is_using_collision()     |
+-----------+--------------------------+

Adds a collision shape to the physics engine for our CSG shape. This will always act like a static body. Note that the collision shape is still active even if the CSG shape itself is hidden.

Method Descriptions
-------------------

.. _class_CSGShape_method_get_collision_layer_bit:

- :ref:`bool<class_bool>` **get_collision_layer_bit** **(** :ref:`int<class_int>` bit **)** |const|

Returns an individual bit on the collision mask.

----

.. _class_CSGShape_method_get_collision_mask_bit:

- :ref:`bool<class_bool>` **get_collision_mask_bit** **(** :ref:`int<class_int>` bit **)** |const|

Returns an individual bit on the collision mask.

----

.. _class_CSGShape_method_get_meshes:

- :ref:`Array<class_Array>` **get_meshes** **(** **)** |const|

Returns an :ref:`Array<class_Array>` with two elements, the first is the :ref:`Transform<class_Transform>` of this node and the second is the root :ref:`Mesh<class_Mesh>` of this node. Only works when this node is the root shape.

----

.. _class_CSGShape_method_is_root_shape:

- :ref:`bool<class_bool>` **is_root_shape** **(** **)** |const|

Returns ``true`` if this is a root shape and is thus the object that is rendered.

----

.. _class_CSGShape_method_set_collision_layer_bit:

- void **set_collision_layer_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

Sets individual bits on the layer mask. Use this if you only need to change one layer's value.

----

.. _class_CSGShape_method_set_collision_mask_bit:

- void **set_collision_mask_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

Sets individual bits on the collision mask. Use this if you only need to change one layer's value.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
