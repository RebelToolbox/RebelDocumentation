:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the AnimationNodeBlendSpace2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AnimationNodeBlendSpace2D:

AnimationNodeBlendSpace2D
=========================

**Inherits:** :ref:`AnimationRootNode<class_AnimationRootNode>` **<** :ref:`AnimationNode<class_AnimationNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Blends linearly between three :ref:`AnimationNode<class_AnimationNode>` of any type placed in a 2D space.

Description
-----------

A resource to add to an :ref:`AnimationNodeBlendTree<class_AnimationNodeBlendTree>`.

This node allows you to blend linearly between three animations using a :ref:`Vector2<class_Vector2>` weight.

You can add vertices to the blend space with :ref:`add_blend_point<class_AnimationNodeBlendSpace2D_method_add_blend_point>` and automatically triangulate it by setting :ref:`auto_triangles<class_AnimationNodeBlendSpace2D_property_auto_triangles>` to ``true``. Otherwise, use :ref:`add_triangle<class_AnimationNodeBlendSpace2D_method_add_triangle>` and :ref:`remove_triangle<class_AnimationNodeBlendSpace2D_method_remove_triangle>` to create up the blend space by hand.

Tutorials
---------

- :doc:`../tutorials/animation/animation_tree`

- `Third Person Shooter Demo <https://godotengine.org/asset-library/asset/678>`__

Properties
----------

+------------------------------------------------------------+--------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`auto_triangles<class_AnimationNodeBlendSpace2D_property_auto_triangles>` | ``true``                |
+------------------------------------------------------------+--------------------------------------------------------------------------------+-------------------------+
| :ref:`BlendMode<enum_AnimationNodeBlendSpace2D_BlendMode>` | :ref:`blend_mode<class_AnimationNodeBlendSpace2D_property_blend_mode>`         | ``0``                   |
+------------------------------------------------------------+--------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                              | :ref:`max_space<class_AnimationNodeBlendSpace2D_property_max_space>`           | ``Vector2( 1, 1 )``     |
+------------------------------------------------------------+--------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                              | :ref:`min_space<class_AnimationNodeBlendSpace2D_property_min_space>`           | ``Vector2( -1, -1 )``   |
+------------------------------------------------------------+--------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                              | :ref:`snap<class_AnimationNodeBlendSpace2D_property_snap>`                     | ``Vector2( 0.1, 0.1 )`` |
+------------------------------------------------------------+--------------------------------------------------------------------------------+-------------------------+
| :ref:`String<class_String>`                                | :ref:`x_label<class_AnimationNodeBlendSpace2D_property_x_label>`               | ``"x"``                 |
+------------------------------------------------------------+--------------------------------------------------------------------------------+-------------------------+
| :ref:`String<class_String>`                                | :ref:`y_label<class_AnimationNodeBlendSpace2D_property_y_label>`               | ``"y"``                 |
+------------------------------------------------------------+--------------------------------------------------------------------------------+-------------------------+

Methods
-------

+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`add_blend_point<class_AnimationNodeBlendSpace2D_method_add_blend_point>` **(** :ref:`AnimationRootNode<class_AnimationRootNode>` node, :ref:`Vector2<class_Vector2>` pos, :ref:`int<class_int>` at_index=-1 **)** |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`add_triangle<class_AnimationNodeBlendSpace2D_method_add_triangle>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z, :ref:`int<class_int>` at_index=-1 **)**                       |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                             | :ref:`get_blend_point_count<class_AnimationNodeBlendSpace2D_method_get_blend_point_count>` **(** **)** |const|                                                                                                          |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`AnimationRootNode<class_AnimationRootNode>` | :ref:`get_blend_point_node<class_AnimationNodeBlendSpace2D_method_get_blend_point_node>` **(** :ref:`int<class_int>` point **)** |const|                                                                                |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                     | :ref:`get_blend_point_position<class_AnimationNodeBlendSpace2D_method_get_blend_point_position>` **(** :ref:`int<class_int>` point **)** |const|                                                                        |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                             | :ref:`get_triangle_count<class_AnimationNodeBlendSpace2D_method_get_triangle_count>` **(** **)** |const|                                                                                                                |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                             | :ref:`get_triangle_point<class_AnimationNodeBlendSpace2D_method_get_triangle_point>` **(** :ref:`int<class_int>` triangle, :ref:`int<class_int>` point **)**                                                            |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`remove_blend_point<class_AnimationNodeBlendSpace2D_method_remove_blend_point>` **(** :ref:`int<class_int>` point **)**                                                                                            |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`remove_triangle<class_AnimationNodeBlendSpace2D_method_remove_triangle>` **(** :ref:`int<class_int>` triangle **)**                                                                                               |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`set_blend_point_node<class_AnimationNodeBlendSpace2D_method_set_blend_point_node>` **(** :ref:`int<class_int>` point, :ref:`AnimationRootNode<class_AnimationRootNode>` node **)**                                |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`set_blend_point_position<class_AnimationNodeBlendSpace2D_method_set_blend_point_position>` **(** :ref:`int<class_int>` point, :ref:`Vector2<class_Vector2>` pos **)**                                             |
+---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_AnimationNodeBlendSpace2D_signal_triangles_updated:

- **triangles_updated** **(** **)**

Emitted every time the blend space's triangles are created, removed, or when one of their vertices changes position.

Enumerations
------------

.. _enum_AnimationNodeBlendSpace2D_BlendMode:

.. _class_AnimationNodeBlendSpace2D_constant_BLEND_MODE_INTERPOLATED:

.. _class_AnimationNodeBlendSpace2D_constant_BLEND_MODE_DISCRETE:

.. _class_AnimationNodeBlendSpace2D_constant_BLEND_MODE_DISCRETE_CARRY:

enum **BlendMode**:

- **BLEND_MODE_INTERPOLATED** = **0** --- The interpolation between animations is linear.

- **BLEND_MODE_DISCRETE** = **1** --- The blend space plays the animation of the node the blending position is closest to. Useful for frame-by-frame 2D animations.

- **BLEND_MODE_DISCRETE_CARRY** = **2** --- Similar to :ref:`BLEND_MODE_DISCRETE<class_AnimationNodeBlendSpace2D_constant_BLEND_MODE_DISCRETE>`, but starts the new animation at the last animation's playback position.

Property Descriptions
---------------------

.. _class_AnimationNodeBlendSpace2D_property_auto_triangles:

- :ref:`bool<class_bool>` **auto_triangles**

+-----------+---------------------------+
| *Default* | ``true``                  |
+-----------+---------------------------+
| *Setter*  | set_auto_triangles(value) |
+-----------+---------------------------+
| *Getter*  | get_auto_triangles()      |
+-----------+---------------------------+

If ``true``, the blend space is triangulated automatically. The mesh updates every time you add or remove points with :ref:`add_blend_point<class_AnimationNodeBlendSpace2D_method_add_blend_point>` and :ref:`remove_blend_point<class_AnimationNodeBlendSpace2D_method_remove_blend_point>`.

----

.. _class_AnimationNodeBlendSpace2D_property_blend_mode:

- :ref:`BlendMode<enum_AnimationNodeBlendSpace2D_BlendMode>` **blend_mode**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_blend_mode(value) |
+-----------+-----------------------+
| *Getter*  | get_blend_mode()      |
+-----------+-----------------------+

Controls the interpolation between animations. See :ref:`BlendMode<enum_AnimationNodeBlendSpace2D_BlendMode>` constants.

----

.. _class_AnimationNodeBlendSpace2D_property_max_space:

- :ref:`Vector2<class_Vector2>` **max_space**

+-----------+----------------------+
| *Default* | ``Vector2( 1, 1 )``  |
+-----------+----------------------+
| *Setter*  | set_max_space(value) |
+-----------+----------------------+
| *Getter*  | get_max_space()      |
+-----------+----------------------+

The blend space's X and Y axes' upper limit for the points' position. See :ref:`add_blend_point<class_AnimationNodeBlendSpace2D_method_add_blend_point>`.

----

.. _class_AnimationNodeBlendSpace2D_property_min_space:

- :ref:`Vector2<class_Vector2>` **min_space**

+-----------+-----------------------+
| *Default* | ``Vector2( -1, -1 )`` |
+-----------+-----------------------+
| *Setter*  | set_min_space(value)  |
+-----------+-----------------------+
| *Getter*  | get_min_space()       |
+-----------+-----------------------+

The blend space's X and Y axes' lower limit for the points' position. See :ref:`add_blend_point<class_AnimationNodeBlendSpace2D_method_add_blend_point>`.

----

.. _class_AnimationNodeBlendSpace2D_property_snap:

- :ref:`Vector2<class_Vector2>` **snap**

+-----------+-------------------------+
| *Default* | ``Vector2( 0.1, 0.1 )`` |
+-----------+-------------------------+
| *Setter*  | set_snap(value)         |
+-----------+-------------------------+
| *Getter*  | get_snap()              |
+-----------+-------------------------+

Position increment to snap to when moving a point.

----

.. _class_AnimationNodeBlendSpace2D_property_x_label:

- :ref:`String<class_String>` **x_label**

+-----------+--------------------+
| *Default* | ``"x"``            |
+-----------+--------------------+
| *Setter*  | set_x_label(value) |
+-----------+--------------------+
| *Getter*  | get_x_label()      |
+-----------+--------------------+

Name of the blend space's X axis.

----

.. _class_AnimationNodeBlendSpace2D_property_y_label:

- :ref:`String<class_String>` **y_label**

+-----------+--------------------+
| *Default* | ``"y"``            |
+-----------+--------------------+
| *Setter*  | set_y_label(value) |
+-----------+--------------------+
| *Getter*  | get_y_label()      |
+-----------+--------------------+

Name of the blend space's Y axis.

Method Descriptions
-------------------

.. _class_AnimationNodeBlendSpace2D_method_add_blend_point:

- void **add_blend_point** **(** :ref:`AnimationRootNode<class_AnimationRootNode>` node, :ref:`Vector2<class_Vector2>` pos, :ref:`int<class_int>` at_index=-1 **)**

Adds a new point that represents a ``node`` at the position set by ``pos``. You can insert it at a specific index using the ``at_index`` argument. If you use the default value for ``at_index``, the point is inserted at the end of the blend points array.

----

.. _class_AnimationNodeBlendSpace2D_method_add_triangle:

- void **add_triangle** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z, :ref:`int<class_int>` at_index=-1 **)**

Creates a new triangle using three points ``x``, ``y``, and ``z``. Triangles can overlap. You can insert the triangle at a specific index using the ``at_index`` argument. If you use the default value for ``at_index``, the point is inserted at the end of the blend points array.

----

.. _class_AnimationNodeBlendSpace2D_method_get_blend_point_count:

- :ref:`int<class_int>` **get_blend_point_count** **(** **)** |const|

Returns the number of points in the blend space.

----

.. _class_AnimationNodeBlendSpace2D_method_get_blend_point_node:

- :ref:`AnimationRootNode<class_AnimationRootNode>` **get_blend_point_node** **(** :ref:`int<class_int>` point **)** |const|

Returns the :ref:`AnimationRootNode<class_AnimationRootNode>` referenced by the point at index ``point``.

----

.. _class_AnimationNodeBlendSpace2D_method_get_blend_point_position:

- :ref:`Vector2<class_Vector2>` **get_blend_point_position** **(** :ref:`int<class_int>` point **)** |const|

Returns the position of the point at index ``point``.

----

.. _class_AnimationNodeBlendSpace2D_method_get_triangle_count:

- :ref:`int<class_int>` **get_triangle_count** **(** **)** |const|

Returns the number of triangles in the blend space.

----

.. _class_AnimationNodeBlendSpace2D_method_get_triangle_point:

- :ref:`int<class_int>` **get_triangle_point** **(** :ref:`int<class_int>` triangle, :ref:`int<class_int>` point **)**

Returns the position of the point at index ``point`` in the triangle of index ``triangle``.

----

.. _class_AnimationNodeBlendSpace2D_method_remove_blend_point:

- void **remove_blend_point** **(** :ref:`int<class_int>` point **)**

Removes the point at index ``point`` from the blend space.

----

.. _class_AnimationNodeBlendSpace2D_method_remove_triangle:

- void **remove_triangle** **(** :ref:`int<class_int>` triangle **)**

Removes the triangle at index ``triangle`` from the blend space.

----

.. _class_AnimationNodeBlendSpace2D_method_set_blend_point_node:

- void **set_blend_point_node** **(** :ref:`int<class_int>` point, :ref:`AnimationRootNode<class_AnimationRootNode>` node **)**

Changes the :ref:`AnimationNode<class_AnimationNode>` referenced by the point at index ``point``.

----

.. _class_AnimationNodeBlendSpace2D_method_set_blend_point_position:

- void **set_blend_point_position** **(** :ref:`int<class_int>` point, :ref:`Vector2<class_Vector2>` pos **)**

Updates the position of the point at index ``point`` on the blend axis.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
