:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the AudioEffectRecord.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AudioEffectRecord:

AudioEffectRecord
=================

**Inherits:** :ref:`AudioEffect<class_AudioEffect>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Audio effect used for recording the sound from an audio bus.

Description
-----------

Allows the user to record the sound from an audio bus. This can include all audio output by Godot when used on the "Master" audio bus.

Can be used (with an :ref:`AudioStreamMicrophone<class_AudioStreamMicrophone>`) to record from a microphone.

It sets and gets the format in which the audio file will be recorded (8-bit, 16-bit, or compressed). It checks whether or not the recording is active, and if it is, records the sound. It then returns the recorded sample.

Tutorials
---------

- :doc:`../tutorials/audio/recording_with_microphone`

- `Audio Mic Record Demo <https://godotengine.org/asset-library/asset/527>`__

Properties
----------

+----------------------------------------------+--------------------------------------------------------+-------+
| :ref:`Format<enum_AudioStreamSample_Format>` | :ref:`format<class_AudioEffectRecord_property_format>` | ``1`` |
+----------------------------------------------+--------------------------------------------------------+-------+

Methods
-------

+---------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`AudioStreamSample<class_AudioStreamSample>` | :ref:`get_recording<class_AudioEffectRecord_method_get_recording>` **(** **)** |const|                                      |
+---------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                           | :ref:`is_recording_active<class_AudioEffectRecord_method_is_recording_active>` **(** **)** |const|                          |
+---------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+
| void                                              | :ref:`set_recording_active<class_AudioEffectRecord_method_set_recording_active>` **(** :ref:`bool<class_bool>` record **)** |
+---------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_AudioEffectRecord_property_format:

- :ref:`Format<enum_AudioStreamSample_Format>` **format**

+-----------+-------------------+
| *Default* | ``1``             |
+-----------+-------------------+
| *Setter*  | set_format(value) |
+-----------+-------------------+
| *Getter*  | get_format()      |
+-----------+-------------------+

Specifies the format in which the sample will be recorded. See :ref:`Format<enum_AudioStreamSample_Format>` for available formats.

Method Descriptions
-------------------

.. _class_AudioEffectRecord_method_get_recording:

- :ref:`AudioStreamSample<class_AudioStreamSample>` **get_recording** **(** **)** |const|

Returns the recorded sample.

----

.. _class_AudioEffectRecord_method_is_recording_active:

- :ref:`bool<class_bool>` **is_recording_active** **(** **)** |const|

Returns whether the recording is active or not.

----

.. _class_AudioEffectRecord_method_set_recording_active:

- void **set_recording_active** **(** :ref:`bool<class_bool>` record **)**

If ``true``, the sound will be recorded. Note that restarting the recording will remove the previously recorded sample.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
