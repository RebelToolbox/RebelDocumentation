:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the AudioEffectPhaser.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AudioEffectPhaser:

AudioEffectPhaser
=================

**Inherits:** :ref:`AudioEffect<class_AudioEffect>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Adds a phaser audio effect to an Audio bus.

Combines the original signal with a copy that is slightly out of phase with the original.

Description
-----------

Combines phase-shifted signals with the original signal. The movement of the phase-shifted signals is controlled using a low-frequency oscillator.

Properties
----------

+---------------------------+--------------------------------------------------------------------+------------+
| :ref:`float<class_float>` | :ref:`depth<class_AudioEffectPhaser_property_depth>`               | ``1.0``    |
+---------------------------+--------------------------------------------------------------------+------------+
| :ref:`float<class_float>` | :ref:`feedback<class_AudioEffectPhaser_property_feedback>`         | ``0.7``    |
+---------------------------+--------------------------------------------------------------------+------------+
| :ref:`float<class_float>` | :ref:`range_max_hz<class_AudioEffectPhaser_property_range_max_hz>` | ``1600.0`` |
+---------------------------+--------------------------------------------------------------------+------------+
| :ref:`float<class_float>` | :ref:`range_min_hz<class_AudioEffectPhaser_property_range_min_hz>` | ``440.0``  |
+---------------------------+--------------------------------------------------------------------+------------+
| :ref:`float<class_float>` | :ref:`rate_hz<class_AudioEffectPhaser_property_rate_hz>`           | ``0.5``    |
+---------------------------+--------------------------------------------------------------------+------------+

Property Descriptions
---------------------

.. _class_AudioEffectPhaser_property_depth:

- :ref:`float<class_float>` **depth**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_depth(value) |
+-----------+------------------+
| *Getter*  | get_depth()      |
+-----------+------------------+

Governs how high the filter frequencies sweep. Low value will primarily affect bass frequencies. High value can sweep high into the treble. Value can range from 0.1 to 4.

----

.. _class_AudioEffectPhaser_property_feedback:

- :ref:`float<class_float>` **feedback**

+-----------+---------------------+
| *Default* | ``0.7``             |
+-----------+---------------------+
| *Setter*  | set_feedback(value) |
+-----------+---------------------+
| *Getter*  | get_feedback()      |
+-----------+---------------------+

Output percent of modified sound. Value can range from 0.1 to 0.9.

----

.. _class_AudioEffectPhaser_property_range_max_hz:

- :ref:`float<class_float>` **range_max_hz**

+-----------+-------------------------+
| *Default* | ``1600.0``              |
+-----------+-------------------------+
| *Setter*  | set_range_max_hz(value) |
+-----------+-------------------------+
| *Getter*  | get_range_max_hz()      |
+-----------+-------------------------+

Determines the maximum frequency affected by the LFO modulations, in Hz. Value can range from 10 to 10000.

----

.. _class_AudioEffectPhaser_property_range_min_hz:

- :ref:`float<class_float>` **range_min_hz**

+-----------+-------------------------+
| *Default* | ``440.0``               |
+-----------+-------------------------+
| *Setter*  | set_range_min_hz(value) |
+-----------+-------------------------+
| *Getter*  | get_range_min_hz()      |
+-----------+-------------------------+

Determines the minimum frequency affected by the LFO modulations, in Hz. Value can range from 10 to 10000.

----

.. _class_AudioEffectPhaser_property_rate_hz:

- :ref:`float<class_float>` **rate_hz**

+-----------+--------------------+
| *Default* | ``0.5``            |
+-----------+--------------------+
| *Setter*  | set_rate_hz(value) |
+-----------+--------------------+
| *Getter*  | get_rate_hz()      |
+-----------+--------------------+

Adjusts the rate in Hz at which the effect sweeps up and down across the frequency range.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
