:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RemoteTransform.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RemoteTransform:

RemoteTransform
===============

**Inherits:** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

RemoteTransform pushes its own :ref:`Transform<class_Transform>` to another :ref:`Spatial<class_Spatial>` derived Node in the scene.

Description
-----------

RemoteTransform pushes its own :ref:`Transform<class_Transform>` to another :ref:`Spatial<class_Spatial>` derived Node (called the remote node) in the scene.

It can be set to update another Node's position, rotation and/or scale. It can use either global or local coordinates.

Properties
----------

+---------------------------------+--------------------------------------------------------------------------------------+------------------+
| :ref:`NodePath<class_NodePath>` | :ref:`remote_path<class_RemoteTransform_property_remote_path>`                       | ``NodePath("")`` |
+---------------------------------+--------------------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`update_position<class_RemoteTransform_property_update_position>`               | ``true``         |
+---------------------------------+--------------------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`update_rotation<class_RemoteTransform_property_update_rotation>`               | ``true``         |
+---------------------------------+--------------------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`update_scale<class_RemoteTransform_property_update_scale>`                     | ``true``         |
+---------------------------------+--------------------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`use_global_coordinates<class_RemoteTransform_property_use_global_coordinates>` | ``true``         |
+---------------------------------+--------------------------------------------------------------------------------------+------------------+

Methods
-------

+------+----------------------------------------------------------------------------------------+
| void | :ref:`force_update_cache<class_RemoteTransform_method_force_update_cache>` **(** **)** |
+------+----------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_RemoteTransform_property_remote_path:

- :ref:`NodePath<class_NodePath>` **remote_path**

+-----------+------------------------+
| *Default* | ``NodePath("")``       |
+-----------+------------------------+
| *Setter*  | set_remote_node(value) |
+-----------+------------------------+
| *Getter*  | get_remote_node()      |
+-----------+------------------------+

The :ref:`NodePath<class_NodePath>` to the remote node, relative to the RemoteTransform's position in the scene.

----

.. _class_RemoteTransform_property_update_position:

- :ref:`bool<class_bool>` **update_position**

+-----------+----------------------------+
| *Default* | ``true``                   |
+-----------+----------------------------+
| *Setter*  | set_update_position(value) |
+-----------+----------------------------+
| *Getter*  | get_update_position()      |
+-----------+----------------------------+

If ``true``, the remote node's position is updated.

----

.. _class_RemoteTransform_property_update_rotation:

- :ref:`bool<class_bool>` **update_rotation**

+-----------+----------------------------+
| *Default* | ``true``                   |
+-----------+----------------------------+
| *Setter*  | set_update_rotation(value) |
+-----------+----------------------------+
| *Getter*  | get_update_rotation()      |
+-----------+----------------------------+

If ``true``, the remote node's rotation is updated.

----

.. _class_RemoteTransform_property_update_scale:

- :ref:`bool<class_bool>` **update_scale**

+-----------+-------------------------+
| *Default* | ``true``                |
+-----------+-------------------------+
| *Setter*  | set_update_scale(value) |
+-----------+-------------------------+
| *Getter*  | get_update_scale()      |
+-----------+-------------------------+

If ``true``, the remote node's scale is updated.

----

.. _class_RemoteTransform_property_use_global_coordinates:

- :ref:`bool<class_bool>` **use_global_coordinates**

+-----------+-----------------------------------+
| *Default* | ``true``                          |
+-----------+-----------------------------------+
| *Setter*  | set_use_global_coordinates(value) |
+-----------+-----------------------------------+
| *Getter*  | get_use_global_coordinates()      |
+-----------+-----------------------------------+

If ``true``, global coordinates are used. If ``false``, local coordinates are used.

Method Descriptions
-------------------

.. _class_RemoteTransform_method_force_update_cache:

- void **force_update_cache** **(** **)**

``RemoteTransform`` caches the remote node. It may not notice if the remote node disappears; :ref:`force_update_cache<class_RemoteTransform_method_force_update_cache>` forces it to update the cache again.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
