:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RegExMatch.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RegExMatch:

RegExMatch
==========

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Contains the results of a :ref:`RegEx<class_RegEx>` search.

Description
-----------

Contains the results of a single :ref:`RegEx<class_RegEx>` match returned by :ref:`RegEx.search<class_RegEx_method_search>` and :ref:`RegEx.search_all<class_RegEx_method_search_all>`. It can be used to find the position and range of the match and its capturing groups, and it can extract its substring for you.

Properties
----------

+-------------------------------------+---------------------------------------------------+----------+
| :ref:`Dictionary<class_Dictionary>` | :ref:`names<class_RegExMatch_property_names>`     | ``{}``   |
+-------------------------------------+---------------------------------------------------+----------+
| :ref:`Array<class_Array>`           | :ref:`strings<class_RegExMatch_property_strings>` | ``[  ]`` |
+-------------------------------------+---------------------------------------------------+----------+
| :ref:`String<class_String>`         | :ref:`subject<class_RegExMatch_property_subject>` | ``""``   |
+-------------------------------------+---------------------------------------------------+----------+

Methods
-------

+-----------------------------+----------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`get_end<class_RegExMatch_method_get_end>` **(** :ref:`Variant<class_Variant>` name=0 **)** |const|       |
+-----------------------------+----------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`get_group_count<class_RegExMatch_method_get_group_count>` **(** **)** |const|                            |
+-----------------------------+----------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`get_start<class_RegExMatch_method_get_start>` **(** :ref:`Variant<class_Variant>` name=0 **)** |const|   |
+-----------------------------+----------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>` | :ref:`get_string<class_RegExMatch_method_get_string>` **(** :ref:`Variant<class_Variant>` name=0 **)** |const| |
+-----------------------------+----------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_RegExMatch_property_names:

- :ref:`Dictionary<class_Dictionary>` **names**

+-----------+-------------+
| *Default* | ``{}``      |
+-----------+-------------+
| *Getter*  | get_names() |
+-----------+-------------+

A dictionary of named groups and its corresponding group number. Only groups that were matched are included. If multiple groups have the same name, that name would refer to the first matching one.

----

.. _class_RegExMatch_property_strings:

- :ref:`Array<class_Array>` **strings**

+-----------+---------------+
| *Default* | ``[  ]``      |
+-----------+---------------+
| *Getter*  | get_strings() |
+-----------+---------------+

An :ref:`Array<class_Array>` of the match and its capturing groups.

----

.. _class_RegExMatch_property_subject:

- :ref:`String<class_String>` **subject**

+-----------+---------------+
| *Default* | ``""``        |
+-----------+---------------+
| *Getter*  | get_subject() |
+-----------+---------------+

The source string used with the search pattern to find this matching result.

Method Descriptions
-------------------

.. _class_RegExMatch_method_get_end:

- :ref:`int<class_int>` **get_end** **(** :ref:`Variant<class_Variant>` name=0 **)** |const|

Returns the end position of the match within the source string. The end position of capturing groups can be retrieved by providing its group number as an integer or its string name (if it's a named group). The default value of 0 refers to the whole pattern.

Returns -1 if the group did not match or doesn't exist.

----

.. _class_RegExMatch_method_get_group_count:

- :ref:`int<class_int>` **get_group_count** **(** **)** |const|

Returns the number of capturing groups.

----

.. _class_RegExMatch_method_get_start:

- :ref:`int<class_int>` **get_start** **(** :ref:`Variant<class_Variant>` name=0 **)** |const|

Returns the starting position of the match within the source string. The starting position of capturing groups can be retrieved by providing its group number as an integer or its string name (if it's a named group). The default value of 0 refers to the whole pattern.

Returns -1 if the group did not match or doesn't exist.

----

.. _class_RegExMatch_method_get_string:

- :ref:`String<class_String>` **get_string** **(** :ref:`Variant<class_Variant>` name=0 **)** |const|

Returns the substring of the match from the source string. Capturing groups can be retrieved by providing its group number as an integer or its string name (if it's a named group). The default value of 0 refers to the whole pattern.

Returns an empty string if the group did not match or doesn't exist.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
