:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CapsuleShape2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CapsuleShape2D:

CapsuleShape2D
==============

**Inherits:** :ref:`Shape2D<class_Shape2D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Capsule shape for 2D collisions.

Description
-----------

Capsule shape for 2D collisions.

Properties
----------

+---------------------------+-----------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`height<class_CapsuleShape2D_property_height>` | ``20.0`` |
+---------------------------+-----------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`radius<class_CapsuleShape2D_property_radius>` | ``10.0`` |
+---------------------------+-----------------------------------------------------+----------+

Property Descriptions
---------------------

.. _class_CapsuleShape2D_property_height:

- :ref:`float<class_float>` **height**

+-----------+-------------------+
| *Default* | ``20.0``          |
+-----------+-------------------+
| *Setter*  | set_height(value) |
+-----------+-------------------+
| *Getter*  | get_height()      |
+-----------+-------------------+

The capsule's height.

----

.. _class_CapsuleShape2D_property_radius:

- :ref:`float<class_float>` **radius**

+-----------+-------------------+
| *Default* | ``10.0``          |
+-----------+-------------------+
| *Setter*  | set_radius(value) |
+-----------+-------------------+
| *Getter*  | get_radius()      |
+-----------+-------------------+

The capsule's radius.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
