:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the SegmentShape2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SegmentShape2D:

SegmentShape2D
==============

**Inherits:** :ref:`Shape2D<class_Shape2D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Segment shape for 2D collisions.

Description
-----------

Segment shape for 2D collisions. Consists of two points, ``a`` and ``b``.

Properties
----------

+-------------------------------+-------------------------------------------+----------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`a<class_SegmentShape2D_property_a>` | ``Vector2( 0, 0 )``  |
+-------------------------------+-------------------------------------------+----------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`b<class_SegmentShape2D_property_b>` | ``Vector2( 0, 10 )`` |
+-------------------------------+-------------------------------------------+----------------------+

Property Descriptions
---------------------

.. _class_SegmentShape2D_property_a:

- :ref:`Vector2<class_Vector2>` **a**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_a(value)        |
+-----------+---------------------+
| *Getter*  | get_a()             |
+-----------+---------------------+

The segment's first point position.

----

.. _class_SegmentShape2D_property_b:

- :ref:`Vector2<class_Vector2>` **b**

+-----------+----------------------+
| *Default* | ``Vector2( 0, 10 )`` |
+-----------+----------------------+
| *Setter*  | set_b(value)         |
+-----------+----------------------+
| *Getter*  | get_b()              |
+-----------+----------------------+

The segment's second point position.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
