:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisualShaderNodeVectorFunc.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualShaderNodeVectorFunc:

VisualShaderNodeVectorFunc
==========================

**Inherits:** :ref:`VisualShaderNode<class_VisualShaderNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

A vector function to be used within the visual shader graph.

Description
-----------

A visual shader node able to perform different functions using vectors.

Properties
----------

+-----------------------------------------------------------+---------------------------------------------------------------------+-------+
| :ref:`Function<enum_VisualShaderNodeVectorFunc_Function>` | :ref:`function<class_VisualShaderNodeVectorFunc_property_function>` | ``0`` |
+-----------------------------------------------------------+---------------------------------------------------------------------+-------+

Enumerations
------------

.. _enum_VisualShaderNodeVectorFunc_Function:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_NORMALIZE:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_SATURATE:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_NEGATE:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_RECIPROCAL:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_RGB2HSV:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_HSV2RGB:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ABS:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ACOS:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ACOSH:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ASIN:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ASINH:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ATAN:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ATANH:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_CEIL:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_COS:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_COSH:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_DEGREES:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_EXP:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_EXP2:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_FLOOR:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_FRAC:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_INVERSE_SQRT:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_LOG:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_LOG2:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_RADIANS:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ROUND:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ROUNDEVEN:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_SIGN:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_SIN:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_SINH:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_SQRT:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_TAN:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_TANH:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_TRUNC:

.. _class_VisualShaderNodeVectorFunc_constant_FUNC_ONEMINUS:

enum **Function**:

- **FUNC_NORMALIZE** = **0** --- Normalizes the vector so that it has a length of ``1`` but points in the same direction.

- **FUNC_SATURATE** = **1** --- Clamps the value between ``0.0`` and ``1.0``.

- **FUNC_NEGATE** = **2** --- Returns the opposite value of the parameter.

- **FUNC_RECIPROCAL** = **3** --- Returns ``1/vector``.

- **FUNC_RGB2HSV** = **4** --- Converts RGB vector to HSV equivalent.

- **FUNC_HSV2RGB** = **5** --- Converts HSV vector to RGB equivalent.

- **FUNC_ABS** = **6** --- Returns the absolute value of the parameter.

- **FUNC_ACOS** = **7** --- Returns the arc-cosine of the parameter.

- **FUNC_ACOSH** = **8** --- Returns the inverse hyperbolic cosine of the parameter.

- **FUNC_ASIN** = **9** --- Returns the arc-sine of the parameter.

- **FUNC_ASINH** = **10** --- Returns the inverse hyperbolic sine of the parameter.

- **FUNC_ATAN** = **11** --- Returns the arc-tangent of the parameter.

- **FUNC_ATANH** = **12** --- Returns the inverse hyperbolic tangent of the parameter.

- **FUNC_CEIL** = **13** --- Finds the nearest integer that is greater than or equal to the parameter.

- **FUNC_COS** = **14** --- Returns the cosine of the parameter.

- **FUNC_COSH** = **15** --- Returns the hyperbolic cosine of the parameter.

- **FUNC_DEGREES** = **16** --- Converts a quantity in radians to degrees.

- **FUNC_EXP** = **17** --- Base-e Exponential.

- **FUNC_EXP2** = **18** --- Base-2 Exponential.

- **FUNC_FLOOR** = **19** --- Finds the nearest integer less than or equal to the parameter.

- **FUNC_FRAC** = **20** --- Computes the fractional part of the argument.

- **FUNC_INVERSE_SQRT** = **21** --- Returns the inverse of the square root of the parameter.

- **FUNC_LOG** = **22** --- Natural logarithm.

- **FUNC_LOG2** = **23** --- Base-2 logarithm.

- **FUNC_RADIANS** = **24** --- Converts a quantity in degrees to radians.

- **FUNC_ROUND** = **25** --- Finds the nearest integer to the parameter.

- **FUNC_ROUNDEVEN** = **26** --- Finds the nearest even integer to the parameter.

- **FUNC_SIGN** = **27** --- Extracts the sign of the parameter, i.e. returns ``-1`` if the parameter is negative, ``1`` if it's positive and ``0`` otherwise.

- **FUNC_SIN** = **28** --- Returns the sine of the parameter.

- **FUNC_SINH** = **29** --- Returns the hyperbolic sine of the parameter.

- **FUNC_SQRT** = **30** --- Returns the square root of the parameter.

- **FUNC_TAN** = **31** --- Returns the tangent of the parameter.

- **FUNC_TANH** = **32** --- Returns the hyperbolic tangent of the parameter.

- **FUNC_TRUNC** = **33** --- Returns a value equal to the nearest integer to the parameter whose absolute value is not larger than the absolute value of the parameter.

- **FUNC_ONEMINUS** = **34** --- Returns ``1.0 - vector``.

Property Descriptions
---------------------

.. _class_VisualShaderNodeVectorFunc_property_function:

- :ref:`Function<enum_VisualShaderNodeVectorFunc_Function>` **function**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_function(value) |
+-----------+---------------------+
| *Getter*  | get_function()      |
+-----------+---------------------+

The function to be performed. See :ref:`Function<enum_VisualShaderNodeVectorFunc_Function>` for options.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
