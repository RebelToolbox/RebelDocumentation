:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the GLTFSpecGloss.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GLTFSpecGloss:

GLTFSpecGloss
=============

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`



Description
-----------

**Note:** This class is only compiled in editor builds. Run-time glTF loading and saving is *not* available in exported projects. References to ``GLTFSpecGloss`` within a script will cause an error in an exported project.

Properties
----------

+---------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>` | :ref:`diffuse_factor<class_GLTFSpecGloss_property_diffuse_factor>`   | ``Color( 1, 1, 1, 1 )`` |
+---------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`Image<class_Image>` | :ref:`diffuse_img<class_GLTFSpecGloss_property_diffuse_img>`         |                         |
+---------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>` | :ref:`gloss_factor<class_GLTFSpecGloss_property_gloss_factor>`       | ``1.0``                 |
+---------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`Image<class_Image>` | :ref:`spec_gloss_img<class_GLTFSpecGloss_property_spec_gloss_img>`   |                         |
+---------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>` | :ref:`specular_factor<class_GLTFSpecGloss_property_specular_factor>` | ``Color( 1, 1, 1, 1 )`` |
+---------------------------+----------------------------------------------------------------------+-------------------------+

Property Descriptions
---------------------

.. _class_GLTFSpecGloss_property_diffuse_factor:

- :ref:`Color<class_Color>` **diffuse_factor**

+-----------+---------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )``   |
+-----------+---------------------------+
| *Setter*  | set_diffuse_factor(value) |
+-----------+---------------------------+
| *Getter*  | get_diffuse_factor()      |
+-----------+---------------------------+

----

.. _class_GLTFSpecGloss_property_diffuse_img:

- :ref:`Image<class_Image>` **diffuse_img**

+----------+------------------------+
| *Setter* | set_diffuse_img(value) |
+----------+------------------------+
| *Getter* | get_diffuse_img()      |
+----------+------------------------+

----

.. _class_GLTFSpecGloss_property_gloss_factor:

- :ref:`float<class_float>` **gloss_factor**

+-----------+-------------------------+
| *Default* | ``1.0``                 |
+-----------+-------------------------+
| *Setter*  | set_gloss_factor(value) |
+-----------+-------------------------+
| *Getter*  | get_gloss_factor()      |
+-----------+-------------------------+

----

.. _class_GLTFSpecGloss_property_spec_gloss_img:

- :ref:`Image<class_Image>` **spec_gloss_img**

+----------+---------------------------+
| *Setter* | set_spec_gloss_img(value) |
+----------+---------------------------+
| *Getter* | get_spec_gloss_img()      |
+----------+---------------------------+

----

.. _class_GLTFSpecGloss_property_specular_factor:

- :ref:`Color<class_Color>` **specular_factor**

+-----------+----------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )``    |
+-----------+----------------------------+
| *Setter*  | set_specular_factor(value) |
+-----------+----------------------------+
| *Getter*  | get_specular_factor()      |
+-----------+----------------------------+

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
