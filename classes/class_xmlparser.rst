:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the XMLParser.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_XMLParser:

XMLParser
=========

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Low-level class for creating parsers for `XML <https://en.wikipedia.org/wiki/XML>`__ files.

Description
-----------

This class can serve as base to make custom XML parsers. Since XML is a very flexible standard, this interface is low-level so it can be applied to any possible schema.

Methods
-------

+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                    | :ref:`get_attribute_count<class_XMLParser_method_get_attribute_count>` **(** **)** |const|                                                        |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_attribute_name<class_XMLParser_method_get_attribute_name>` **(** :ref:`int<class_int>` idx **)** |const|                                |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_attribute_value<class_XMLParser_method_get_attribute_value>` **(** :ref:`int<class_int>` idx **)** |const|                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                    | :ref:`get_current_line<class_XMLParser_method_get_current_line>` **(** **)** |const|                                                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_named_attribute_value<class_XMLParser_method_get_named_attribute_value>` **(** :ref:`String<class_String>` name **)** |const|           |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_named_attribute_value_safe<class_XMLParser_method_get_named_attribute_value_safe>` **(** :ref:`String<class_String>` name **)** |const| |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_node_data<class_XMLParser_method_get_node_data>` **(** **)** |const|                                                                    |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_node_name<class_XMLParser_method_get_node_name>` **(** **)** |const|                                                                    |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                    | :ref:`get_node_offset<class_XMLParser_method_get_node_offset>` **(** **)** |const|                                                                |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`NodeType<enum_XMLParser_NodeType>` | :ref:`get_node_type<class_XMLParser_method_get_node_type>` **(** **)**                                                                            |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`has_attribute<class_XMLParser_method_has_attribute>` **(** :ref:`String<class_String>` name **)** |const|                                   |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`is_empty<class_XMLParser_method_is_empty>` **(** **)** |const|                                                                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`open<class_XMLParser_method_open>` **(** :ref:`String<class_String>` file **)**                                                             |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`open_buffer<class_XMLParser_method_open_buffer>` **(** :ref:`PoolByteArray<class_PoolByteArray>` buffer **)**                               |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`read<class_XMLParser_method_read>` **(** **)**                                                                                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`seek<class_XMLParser_method_seek>` **(** :ref:`int<class_int>` position **)**                                                               |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                     | :ref:`skip_section<class_XMLParser_method_skip_section>` **(** **)**                                                                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_XMLParser_NodeType:

.. _class_XMLParser_constant_NODE_NONE:

.. _class_XMLParser_constant_NODE_ELEMENT:

.. _class_XMLParser_constant_NODE_ELEMENT_END:

.. _class_XMLParser_constant_NODE_TEXT:

.. _class_XMLParser_constant_NODE_COMMENT:

.. _class_XMLParser_constant_NODE_CDATA:

.. _class_XMLParser_constant_NODE_UNKNOWN:

enum **NodeType**:

- **NODE_NONE** = **0** --- There's no node (no file or buffer opened).

- **NODE_ELEMENT** = **1** --- Element (tag).

- **NODE_ELEMENT_END** = **2** --- End of element.

- **NODE_TEXT** = **3** --- Text node.

- **NODE_COMMENT** = **4** --- Comment node.

- **NODE_CDATA** = **5** --- CDATA content.

- **NODE_UNKNOWN** = **6** --- Unknown node.

Method Descriptions
-------------------

.. _class_XMLParser_method_get_attribute_count:

- :ref:`int<class_int>` **get_attribute_count** **(** **)** |const|

Gets the amount of attributes in the current element.

----

.. _class_XMLParser_method_get_attribute_name:

- :ref:`String<class_String>` **get_attribute_name** **(** :ref:`int<class_int>` idx **)** |const|

Gets the name of the attribute specified by the index in ``idx`` argument.

----

.. _class_XMLParser_method_get_attribute_value:

- :ref:`String<class_String>` **get_attribute_value** **(** :ref:`int<class_int>` idx **)** |const|

Gets the value of the attribute specified by the index in ``idx`` argument.

----

.. _class_XMLParser_method_get_current_line:

- :ref:`int<class_int>` **get_current_line** **(** **)** |const|

Gets the current line in the parsed file (currently not implemented).

----

.. _class_XMLParser_method_get_named_attribute_value:

- :ref:`String<class_String>` **get_named_attribute_value** **(** :ref:`String<class_String>` name **)** |const|

Gets the value of a certain attribute of the current element by name. This will raise an error if the element has no such attribute.

----

.. _class_XMLParser_method_get_named_attribute_value_safe:

- :ref:`String<class_String>` **get_named_attribute_value_safe** **(** :ref:`String<class_String>` name **)** |const|

Gets the value of a certain attribute of the current element by name. This will return an empty :ref:`String<class_String>` if the attribute is not found.

----

.. _class_XMLParser_method_get_node_data:

- :ref:`String<class_String>` **get_node_data** **(** **)** |const|

Gets the contents of a text node. This will raise an error in any other type of node.

----

.. _class_XMLParser_method_get_node_name:

- :ref:`String<class_String>` **get_node_name** **(** **)** |const|

Gets the name of the current element node. This will raise an error if the current node type is neither :ref:`NODE_ELEMENT<class_XMLParser_constant_NODE_ELEMENT>` nor :ref:`NODE_ELEMENT_END<class_XMLParser_constant_NODE_ELEMENT_END>`.

----

.. _class_XMLParser_method_get_node_offset:

- :ref:`int<class_int>` **get_node_offset** **(** **)** |const|

Gets the byte offset of the current node since the beginning of the file or buffer.

----

.. _class_XMLParser_method_get_node_type:

- :ref:`NodeType<enum_XMLParser_NodeType>` **get_node_type** **(** **)**

Gets the type of the current node. Compare with :ref:`NodeType<enum_XMLParser_NodeType>` constants.

----

.. _class_XMLParser_method_has_attribute:

- :ref:`bool<class_bool>` **has_attribute** **(** :ref:`String<class_String>` name **)** |const|

Check whether the current element has a certain attribute.

----

.. _class_XMLParser_method_is_empty:

- :ref:`bool<class_bool>` **is_empty** **(** **)** |const|

Check whether the current element is empty (this only works for completely empty tags, e.g. ``<element \>``).

----

.. _class_XMLParser_method_open:

- :ref:`Error<enum_@GlobalScope_Error>` **open** **(** :ref:`String<class_String>` file **)**

Opens an XML file for parsing. This returns an error code.

----

.. _class_XMLParser_method_open_buffer:

- :ref:`Error<enum_@GlobalScope_Error>` **open_buffer** **(** :ref:`PoolByteArray<class_PoolByteArray>` buffer **)**

Opens an XML raw buffer for parsing. This returns an error code.

----

.. _class_XMLParser_method_read:

- :ref:`Error<enum_@GlobalScope_Error>` **read** **(** **)**

Reads the next node of the file. This returns an error code.

----

.. _class_XMLParser_method_seek:

- :ref:`Error<enum_@GlobalScope_Error>` **seek** **(** :ref:`int<class_int>` position **)**

Moves the buffer cursor to a certain offset (since the beginning) and read the next node there. This returns an error code.

----

.. _class_XMLParser_method_skip_section:

- void **skip_section** **(** **)**

Skips the current section. If the node contains other elements, they will be ignored and the cursor will go to the closing of the current element.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
