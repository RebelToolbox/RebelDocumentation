:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CPUParticles2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CPUParticles2D:

CPUParticles2D
==============

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

CPU-based 2D particle emitter.

Description
-----------

CPU-based 2D particle node used to create a variety of particle systems and effects.

See also :ref:`Particles2D<class_Particles2D>`, which provides the same functionality with hardware acceleration, but may not run on older devices.

**Note:** Unlike :ref:`Particles2D<class_Particles2D>`, the visibility rect is generated on-the-fly and doesn't need to be configured by the user.

Tutorials
---------

- :doc:`../tutorials/2d/particle_systems_2d`

Properties
----------

+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                   | :ref:`amount<class_CPUParticles2D_property_amount>`                                   | ``8``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angle<class_CPUParticles2D_property_angle>`                                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`angle_curve<class_CPUParticles2D_property_angle_curve>`                         |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angle_random<class_CPUParticles2D_property_angle_random>`                       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angular_velocity<class_CPUParticles2D_property_angular_velocity>`               | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`angular_velocity_curve<class_CPUParticles2D_property_angular_velocity_curve>`   |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angular_velocity_random<class_CPUParticles2D_property_angular_velocity_random>` | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_offset<class_CPUParticles2D_property_anim_offset>`                         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`anim_offset_curve<class_CPUParticles2D_property_anim_offset_curve>`             |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_offset_random<class_CPUParticles2D_property_anim_offset_random>`           | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_speed<class_CPUParticles2D_property_anim_speed>`                           | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`anim_speed_curve<class_CPUParticles2D_property_anim_speed_curve>`               |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_speed_random<class_CPUParticles2D_property_anim_speed_random>`             | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                               | :ref:`color<class_CPUParticles2D_property_color>`                                     | ``Color( 1, 1, 1, 1 )`` |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Gradient<class_Gradient>`                         | :ref:`color_ramp<class_CPUParticles2D_property_color_ramp>`                           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`damping<class_CPUParticles2D_property_damping>`                                 | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`damping_curve<class_CPUParticles2D_property_damping_curve>`                     |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`damping_random<class_CPUParticles2D_property_damping_random>`                   | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                           | :ref:`direction<class_CPUParticles2D_property_direction>`                             | ``Vector2( 1, 0 )``     |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`DrawOrder<enum_CPUParticles2D_DrawOrder>`         | :ref:`draw_order<class_CPUParticles2D_property_draw_order>`                           | ``0``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`PoolColorArray<class_PoolColorArray>`             | :ref:`emission_colors<class_CPUParticles2D_property_emission_colors>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>`         | :ref:`emission_normals<class_CPUParticles2D_property_emission_normals>`               |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>`         | :ref:`emission_points<class_CPUParticles2D_property_emission_points>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                           | :ref:`emission_rect_extents<class_CPUParticles2D_property_emission_rect_extents>`     |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`EmissionShape<enum_CPUParticles2D_EmissionShape>` | :ref:`emission_shape<class_CPUParticles2D_property_emission_shape>`                   | ``0``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`emission_sphere_radius<class_CPUParticles2D_property_emission_sphere_radius>`   |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`emitting<class_CPUParticles2D_property_emitting>`                               | ``true``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`explosiveness<class_CPUParticles2D_property_explosiveness>`                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                   | :ref:`fixed_fps<class_CPUParticles2D_property_fixed_fps>`                             | ``0``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`flag_align_y<class_CPUParticles2D_property_flag_align_y>`                       | ``false``               |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`fract_delta<class_CPUParticles2D_property_fract_delta>`                         | ``true``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                           | :ref:`gravity<class_CPUParticles2D_property_gravity>`                                 | ``Vector2( 0, 98 )``    |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`hue_variation<class_CPUParticles2D_property_hue_variation>`                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`hue_variation_curve<class_CPUParticles2D_property_hue_variation_curve>`         |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`hue_variation_random<class_CPUParticles2D_property_hue_variation_random>`       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`initial_velocity<class_CPUParticles2D_property_initial_velocity>`               | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`initial_velocity_random<class_CPUParticles2D_property_initial_velocity_random>` | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`lifetime<class_CPUParticles2D_property_lifetime>`                               | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`lifetime_randomness<class_CPUParticles2D_property_lifetime_randomness>`         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`linear_accel<class_CPUParticles2D_property_linear_accel>`                       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`linear_accel_curve<class_CPUParticles2D_property_linear_accel_curve>`           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`linear_accel_random<class_CPUParticles2D_property_linear_accel_random>`         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`local_coords<class_CPUParticles2D_property_local_coords>`                       | ``true``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                           | :ref:`normalmap<class_CPUParticles2D_property_normalmap>`                             |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`one_shot<class_CPUParticles2D_property_one_shot>`                               | ``false``               |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`orbit_velocity<class_CPUParticles2D_property_orbit_velocity>`                   | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`orbit_velocity_curve<class_CPUParticles2D_property_orbit_velocity_curve>`       |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`orbit_velocity_random<class_CPUParticles2D_property_orbit_velocity_random>`     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`preprocess<class_CPUParticles2D_property_preprocess>`                           | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`radial_accel<class_CPUParticles2D_property_radial_accel>`                       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`radial_accel_curve<class_CPUParticles2D_property_radial_accel_curve>`           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`radial_accel_random<class_CPUParticles2D_property_radial_accel_random>`         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`randomness<class_CPUParticles2D_property_randomness>`                           | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`scale_amount<class_CPUParticles2D_property_scale_amount>`                       | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`scale_amount_curve<class_CPUParticles2D_property_scale_amount_curve>`           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`scale_amount_random<class_CPUParticles2D_property_scale_amount_random>`         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`speed_scale<class_CPUParticles2D_property_speed_scale>`                         | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`spread<class_CPUParticles2D_property_spread>`                                   | ``45.0``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`tangential_accel<class_CPUParticles2D_property_tangential_accel>`               | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`tangential_accel_curve<class_CPUParticles2D_property_tangential_accel_curve>`   |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`tangential_accel_random<class_CPUParticles2D_property_tangential_accel_random>` | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                           | :ref:`texture<class_CPUParticles2D_property_texture>`                                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+

Methods
-------

+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`convert_from_particles<class_CPUParticles2D_method_convert_from_particles>` **(** :ref:`Node<class_Node>` particles **)**                                                       |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_param<class_CPUParticles2D_method_get_param>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|                                                     |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Curve<class_Curve>` | :ref:`get_param_curve<class_CPUParticles2D_method_get_param_curve>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|                                         |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_param_randomness<class_CPUParticles2D_method_get_param_randomness>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|                               |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`get_particle_flag<class_CPUParticles2D_method_get_particle_flag>` **(** :ref:`Flags<enum_CPUParticles2D_Flags>` flag **)** |const|                                              |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`restart<class_CPUParticles2D_method_restart>` **(** **)**                                                                                                                       |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param<class_CPUParticles2D_method_set_param>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`float<class_float>` value **)**                            |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**                |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`float<class_float>` randomness **)** |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_particle_flag<class_CPUParticles2D_method_set_particle_flag>` **(** :ref:`Flags<enum_CPUParticles2D_Flags>` flag, :ref:`bool<class_bool>` enable **)**                      |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_CPUParticles2D_DrawOrder:

.. _class_CPUParticles2D_constant_DRAW_ORDER_INDEX:

.. _class_CPUParticles2D_constant_DRAW_ORDER_LIFETIME:

enum **DrawOrder**:

- **DRAW_ORDER_INDEX** = **0** --- Particles are drawn in the order emitted.

- **DRAW_ORDER_LIFETIME** = **1** --- Particles are drawn in order of remaining lifetime.

----

.. _enum_CPUParticles2D_Parameter:

.. _class_CPUParticles2D_constant_PARAM_INITIAL_LINEAR_VELOCITY:

.. _class_CPUParticles2D_constant_PARAM_ANGULAR_VELOCITY:

.. _class_CPUParticles2D_constant_PARAM_ORBIT_VELOCITY:

.. _class_CPUParticles2D_constant_PARAM_LINEAR_ACCEL:

.. _class_CPUParticles2D_constant_PARAM_RADIAL_ACCEL:

.. _class_CPUParticles2D_constant_PARAM_TANGENTIAL_ACCEL:

.. _class_CPUParticles2D_constant_PARAM_DAMPING:

.. _class_CPUParticles2D_constant_PARAM_ANGLE:

.. _class_CPUParticles2D_constant_PARAM_SCALE:

.. _class_CPUParticles2D_constant_PARAM_HUE_VARIATION:

.. _class_CPUParticles2D_constant_PARAM_ANIM_SPEED:

.. _class_CPUParticles2D_constant_PARAM_ANIM_OFFSET:

.. _class_CPUParticles2D_constant_PARAM_MAX:

enum **Parameter**:

- **PARAM_INITIAL_LINEAR_VELOCITY** = **0** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set initial velocity properties.

- **PARAM_ANGULAR_VELOCITY** = **1** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set angular velocity properties.

- **PARAM_ORBIT_VELOCITY** = **2** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set orbital velocity properties.

- **PARAM_LINEAR_ACCEL** = **3** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set linear acceleration properties.

- **PARAM_RADIAL_ACCEL** = **4** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set radial acceleration properties.

- **PARAM_TANGENTIAL_ACCEL** = **5** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set tangential acceleration properties.

- **PARAM_DAMPING** = **6** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set damping properties.

- **PARAM_ANGLE** = **7** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set angle properties.

- **PARAM_SCALE** = **8** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set scale properties.

- **PARAM_HUE_VARIATION** = **9** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set hue variation properties.

- **PARAM_ANIM_SPEED** = **10** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set animation speed properties.

- **PARAM_ANIM_OFFSET** = **11** --- Use with :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` to set animation offset properties.

- **PARAM_MAX** = **12** --- Represents the size of the :ref:`Parameter<enum_CPUParticles2D_Parameter>` enum.

----

.. _enum_CPUParticles2D_Flags:

.. _class_CPUParticles2D_constant_FLAG_ALIGN_Y_TO_VELOCITY:

.. _class_CPUParticles2D_constant_FLAG_ROTATE_Y:

.. _class_CPUParticles2D_constant_FLAG_DISABLE_Z:

.. _class_CPUParticles2D_constant_FLAG_MAX:

enum **Flags**:

- **FLAG_ALIGN_Y_TO_VELOCITY** = **0** --- Use with :ref:`set_particle_flag<class_CPUParticles2D_method_set_particle_flag>` to set :ref:`flag_align_y<class_CPUParticles2D_property_flag_align_y>`.

- **FLAG_ROTATE_Y** = **1** --- Present for consistency with 3D particle nodes, not used in 2D.

- **FLAG_DISABLE_Z** = **2** --- Present for consistency with 3D particle nodes, not used in 2D.

- **FLAG_MAX** = **3** --- Represents the size of the :ref:`Flags<enum_CPUParticles2D_Flags>` enum.

----

.. _enum_CPUParticles2D_EmissionShape:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_POINT:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_SPHERE:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_RECTANGLE:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_POINTS:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_DIRECTED_POINTS:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_MAX:

enum **EmissionShape**:

- **EMISSION_SHAPE_POINT** = **0** --- All particles will be emitted from a single point.

- **EMISSION_SHAPE_SPHERE** = **1** --- Particles will be emitted on the surface of a sphere flattened to two dimensions.

- **EMISSION_SHAPE_RECTANGLE** = **2** --- Particles will be emitted in the area of a rectangle.

- **EMISSION_SHAPE_POINTS** = **3** --- Particles will be emitted at a position chosen randomly among :ref:`emission_points<class_CPUParticles2D_property_emission_points>`. Particle color will be modulated by :ref:`emission_colors<class_CPUParticles2D_property_emission_colors>`.

- **EMISSION_SHAPE_DIRECTED_POINTS** = **4** --- Particles will be emitted at a position chosen randomly among :ref:`emission_points<class_CPUParticles2D_property_emission_points>`. Particle velocity and rotation will be set based on :ref:`emission_normals<class_CPUParticles2D_property_emission_normals>`. Particle color will be modulated by :ref:`emission_colors<class_CPUParticles2D_property_emission_colors>`.

- **EMISSION_SHAPE_MAX** = **5** --- Represents the size of the :ref:`EmissionShape<enum_CPUParticles2D_EmissionShape>` enum.

Property Descriptions
---------------------

.. _class_CPUParticles2D_property_amount:

- :ref:`int<class_int>` **amount**

+-----------+-------------------+
| *Default* | ``8``             |
+-----------+-------------------+
| *Setter*  | set_amount(value) |
+-----------+-------------------+
| *Getter*  | get_amount()      |
+-----------+-------------------+

The number of particles emitted in one emission cycle (corresponding to the :ref:`lifetime<class_CPUParticles2D_property_lifetime>`).

**Note:** Changing :ref:`amount<class_CPUParticles2D_property_amount>` will reset the particle emission, therefore removing all particles that were already emitted before changing :ref:`amount<class_CPUParticles2D_property_amount>`.

----

.. _class_CPUParticles2D_property_angle:

- :ref:`float<class_float>` **angle**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial rotation applied to each particle, in degrees.

----

.. _class_CPUParticles2D_property_angle_curve:

- :ref:`Curve<class_Curve>` **angle_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's rotation will be animated along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_angle_random:

- :ref:`float<class_float>` **angle_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Rotation randomness ratio.

----

.. _class_CPUParticles2D_property_angular_velocity:

- :ref:`float<class_float>` **angular_velocity**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial angular velocity applied to each particle in *degrees* per second. Sets the speed of rotation of the particle.

----

.. _class_CPUParticles2D_property_angular_velocity_curve:

- :ref:`Curve<class_Curve>` **angular_velocity_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's angular velocity will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_angular_velocity_random:

- :ref:`float<class_float>` **angular_velocity_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Angular velocity randomness ratio.

----

.. _class_CPUParticles2D_property_anim_offset:

- :ref:`float<class_float>` **anim_offset**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Particle animation offset.

----

.. _class_CPUParticles2D_property_anim_offset_curve:

- :ref:`Curve<class_Curve>` **anim_offset_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's animation offset will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_anim_offset_random:

- :ref:`float<class_float>` **anim_offset_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Animation offset randomness ratio.

----

.. _class_CPUParticles2D_property_anim_speed:

- :ref:`float<class_float>` **anim_speed**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Particle animation speed.

----

.. _class_CPUParticles2D_property_anim_speed_curve:

- :ref:`Curve<class_Curve>` **anim_speed_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's animation speed will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_anim_speed_random:

- :ref:`float<class_float>` **anim_speed_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Animation speed randomness ratio.

----

.. _class_CPUParticles2D_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_color(value)        |
+-----------+-------------------------+
| *Getter*  | get_color()             |
+-----------+-------------------------+

Each particle's initial color. If :ref:`texture<class_CPUParticles2D_property_texture>` is defined, it will be multiplied by this color.

----

.. _class_CPUParticles2D_property_color_ramp:

- :ref:`Gradient<class_Gradient>` **color_ramp**

+----------+-----------------------+
| *Setter* | set_color_ramp(value) |
+----------+-----------------------+
| *Getter* | get_color_ramp()      |
+----------+-----------------------+

Each particle's color will vary along this :ref:`Gradient<class_Gradient>` (multiplied with :ref:`color<class_CPUParticles2D_property_color>`).

----

.. _class_CPUParticles2D_property_damping:

- :ref:`float<class_float>` **damping**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

The rate at which particles lose velocity.

----

.. _class_CPUParticles2D_property_damping_curve:

- :ref:`Curve<class_Curve>` **damping_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Damping will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_damping_random:

- :ref:`float<class_float>` **damping_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Damping randomness ratio.

----

.. _class_CPUParticles2D_property_direction:

- :ref:`Vector2<class_Vector2>` **direction**

+-----------+----------------------+
| *Default* | ``Vector2( 1, 0 )``  |
+-----------+----------------------+
| *Setter*  | set_direction(value) |
+-----------+----------------------+
| *Getter*  | get_direction()      |
+-----------+----------------------+

Unit vector specifying the particles' emission direction.

----

.. _class_CPUParticles2D_property_draw_order:

- :ref:`DrawOrder<enum_CPUParticles2D_DrawOrder>` **draw_order**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_draw_order(value) |
+-----------+-----------------------+
| *Getter*  | get_draw_order()      |
+-----------+-----------------------+

Particle draw order. Uses :ref:`DrawOrder<enum_CPUParticles2D_DrawOrder>` values.

----

.. _class_CPUParticles2D_property_emission_colors:

- :ref:`PoolColorArray<class_PoolColorArray>` **emission_colors**

+----------+----------------------------+
| *Setter* | set_emission_colors(value) |
+----------+----------------------------+
| *Getter* | get_emission_colors()      |
+----------+----------------------------+

Sets the :ref:`Color<class_Color>`\ s to modulate particles by when using :ref:`EMISSION_SHAPE_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_POINTS>` or :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_CPUParticles2D_property_emission_normals:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **emission_normals**

+----------+-----------------------------+
| *Setter* | set_emission_normals(value) |
+----------+-----------------------------+
| *Getter* | get_emission_normals()      |
+----------+-----------------------------+

Sets the direction the particles will be emitted in when using :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_CPUParticles2D_property_emission_points:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **emission_points**

+----------+----------------------------+
| *Setter* | set_emission_points(value) |
+----------+----------------------------+
| *Getter* | get_emission_points()      |
+----------+----------------------------+

Sets the initial positions to spawn particles when using :ref:`EMISSION_SHAPE_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_POINTS>` or :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_CPUParticles2D_property_emission_rect_extents:

- :ref:`Vector2<class_Vector2>` **emission_rect_extents**

+----------+----------------------------------+
| *Setter* | set_emission_rect_extents(value) |
+----------+----------------------------------+
| *Getter* | get_emission_rect_extents()      |
+----------+----------------------------------+

The rectangle's extents if :ref:`emission_shape<class_CPUParticles2D_property_emission_shape>` is set to :ref:`EMISSION_SHAPE_RECTANGLE<class_CPUParticles2D_constant_EMISSION_SHAPE_RECTANGLE>`.

----

.. _class_CPUParticles2D_property_emission_shape:

- :ref:`EmissionShape<enum_CPUParticles2D_EmissionShape>` **emission_shape**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_emission_shape(value) |
+-----------+---------------------------+
| *Getter*  | get_emission_shape()      |
+-----------+---------------------------+

Particles will be emitted inside this region. See :ref:`EmissionShape<enum_CPUParticles2D_EmissionShape>` for possible values.

----

.. _class_CPUParticles2D_property_emission_sphere_radius:

- :ref:`float<class_float>` **emission_sphere_radius**

+----------+-----------------------------------+
| *Setter* | set_emission_sphere_radius(value) |
+----------+-----------------------------------+
| *Getter* | get_emission_sphere_radius()      |
+----------+-----------------------------------+

The sphere's radius if :ref:`emission_shape<class_CPUParticles2D_property_emission_shape>` is set to :ref:`EMISSION_SHAPE_SPHERE<class_CPUParticles2D_constant_EMISSION_SHAPE_SPHERE>`.

----

.. _class_CPUParticles2D_property_emitting:

- :ref:`bool<class_bool>` **emitting**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_emitting(value) |
+-----------+---------------------+
| *Getter*  | is_emitting()       |
+-----------+---------------------+

If ``true``, particles are being emitted.

----

.. _class_CPUParticles2D_property_explosiveness:

- :ref:`float<class_float>` **explosiveness**

+-----------+--------------------------------+
| *Default* | ``0.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_explosiveness_ratio(value) |
+-----------+--------------------------------+
| *Getter*  | get_explosiveness_ratio()      |
+-----------+--------------------------------+

How rapidly particles in an emission cycle are emitted. If greater than ``0``, there will be a gap in emissions before the next cycle begins.

----

.. _class_CPUParticles2D_property_fixed_fps:

- :ref:`int<class_int>` **fixed_fps**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_fixed_fps(value) |
+-----------+----------------------+
| *Getter*  | get_fixed_fps()      |
+-----------+----------------------+

The particle system's frame rate is fixed to a value. For instance, changing the value to 2 will make the particles render at 2 frames per second. Note this does not slow down the simulation of the particle system itself.

----

.. _class_CPUParticles2D_property_flag_align_y:

- :ref:`bool<class_bool>` **flag_align_y**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_particle_flag(value) |
+-----------+--------------------------+
| *Getter*  | get_particle_flag()      |
+-----------+--------------------------+

Align Y axis of particle with the direction of its velocity.

----

.. _class_CPUParticles2D_property_fract_delta:

- :ref:`bool<class_bool>` **fract_delta**

+-----------+-----------------------------+
| *Default* | ``true``                    |
+-----------+-----------------------------+
| *Setter*  | set_fractional_delta(value) |
+-----------+-----------------------------+
| *Getter*  | get_fractional_delta()      |
+-----------+-----------------------------+

If ``true``, results in fractional delta calculation which has a smoother particles display effect.

----

.. _class_CPUParticles2D_property_gravity:

- :ref:`Vector2<class_Vector2>` **gravity**

+-----------+----------------------+
| *Default* | ``Vector2( 0, 98 )`` |
+-----------+----------------------+
| *Setter*  | set_gravity(value)   |
+-----------+----------------------+
| *Getter*  | get_gravity()        |
+-----------+----------------------+

Gravity applied to every particle.

----

.. _class_CPUParticles2D_property_hue_variation:

- :ref:`float<class_float>` **hue_variation**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial hue variation applied to each particle.

----

.. _class_CPUParticles2D_property_hue_variation_curve:

- :ref:`Curve<class_Curve>` **hue_variation_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's hue will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_hue_variation_random:

- :ref:`float<class_float>` **hue_variation_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Hue variation randomness ratio.

----

.. _class_CPUParticles2D_property_initial_velocity:

- :ref:`float<class_float>` **initial_velocity**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial velocity magnitude for each particle. Direction comes from :ref:`spread<class_CPUParticles2D_property_spread>` and the node's orientation.

----

.. _class_CPUParticles2D_property_initial_velocity_random:

- :ref:`float<class_float>` **initial_velocity_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Initial velocity randomness ratio.

----

.. _class_CPUParticles2D_property_lifetime:

- :ref:`float<class_float>` **lifetime**

+-----------+---------------------+
| *Default* | ``1.0``             |
+-----------+---------------------+
| *Setter*  | set_lifetime(value) |
+-----------+---------------------+
| *Getter*  | get_lifetime()      |
+-----------+---------------------+

The amount of time each particle will exist (in seconds).

----

.. _class_CPUParticles2D_property_lifetime_randomness:

- :ref:`float<class_float>` **lifetime_randomness**

+-----------+--------------------------------+
| *Default* | ``0.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_lifetime_randomness(value) |
+-----------+--------------------------------+
| *Getter*  | get_lifetime_randomness()      |
+-----------+--------------------------------+

Particle lifetime randomness ratio.

----

.. _class_CPUParticles2D_property_linear_accel:

- :ref:`float<class_float>` **linear_accel**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Linear acceleration applied to each particle in the direction of motion.

----

.. _class_CPUParticles2D_property_linear_accel_curve:

- :ref:`Curve<class_Curve>` **linear_accel_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's linear acceleration will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_linear_accel_random:

- :ref:`float<class_float>` **linear_accel_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Linear acceleration randomness ratio.

----

.. _class_CPUParticles2D_property_local_coords:

- :ref:`bool<class_bool>` **local_coords**

+-----------+----------------------------------+
| *Default* | ``true``                         |
+-----------+----------------------------------+
| *Setter*  | set_use_local_coordinates(value) |
+-----------+----------------------------------+
| *Getter*  | get_use_local_coordinates()      |
+-----------+----------------------------------+

If ``true``, particles use the parent node's coordinate space. If ``false``, they use global coordinates.

----

.. _class_CPUParticles2D_property_normalmap:

- :ref:`Texture<class_Texture>` **normalmap**

+----------+----------------------+
| *Setter* | set_normalmap(value) |
+----------+----------------------+
| *Getter* | get_normalmap()      |
+----------+----------------------+

Normal map to be used for the :ref:`texture<class_CPUParticles2D_property_texture>` property.

**Note:** Godot expects the normal map to use X+, Y-, and Z+ coordinates. See `this page <http://wiki.polycount.com/wiki/Normal_Map_Technical_Details#Common_Swizzle_Coordinates>`__ for a comparison of normal map coordinates expected by popular engines.

----

.. _class_CPUParticles2D_property_one_shot:

- :ref:`bool<class_bool>` **one_shot**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_one_shot(value) |
+-----------+---------------------+
| *Getter*  | get_one_shot()      |
+-----------+---------------------+

If ``true``, only one emission cycle occurs. If set ``true`` during a cycle, emission will stop at the cycle's end.

----

.. _class_CPUParticles2D_property_orbit_velocity:

- :ref:`float<class_float>` **orbit_velocity**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Orbital velocity applied to each particle. Makes the particles circle around origin. Specified in number of full rotations around origin per second.

----

.. _class_CPUParticles2D_property_orbit_velocity_curve:

- :ref:`Curve<class_Curve>` **orbit_velocity_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's orbital velocity will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_orbit_velocity_random:

- :ref:`float<class_float>` **orbit_velocity_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Orbital velocity randomness ratio.

----

.. _class_CPUParticles2D_property_preprocess:

- :ref:`float<class_float>` **preprocess**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_pre_process_time(value) |
+-----------+-----------------------------+
| *Getter*  | get_pre_process_time()      |
+-----------+-----------------------------+

Particle system starts as if it had already run for this many seconds.

----

.. _class_CPUParticles2D_property_radial_accel:

- :ref:`float<class_float>` **radial_accel**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Radial acceleration applied to each particle. Makes particle accelerate away from origin.

----

.. _class_CPUParticles2D_property_radial_accel_curve:

- :ref:`Curve<class_Curve>` **radial_accel_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's radial acceleration will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_radial_accel_random:

- :ref:`float<class_float>` **radial_accel_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Radial acceleration randomness ratio.

----

.. _class_CPUParticles2D_property_randomness:

- :ref:`float<class_float>` **randomness**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_randomness_ratio(value) |
+-----------+-----------------------------+
| *Getter*  | get_randomness_ratio()      |
+-----------+-----------------------------+

Emission lifetime randomness ratio.

----

.. _class_CPUParticles2D_property_scale_amount:

- :ref:`float<class_float>` **scale_amount**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial scale applied to each particle.

----

.. _class_CPUParticles2D_property_scale_amount_curve:

- :ref:`Curve<class_Curve>` **scale_amount_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's scale will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_scale_amount_random:

- :ref:`float<class_float>` **scale_amount_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Scale randomness ratio.

----

.. _class_CPUParticles2D_property_speed_scale:

- :ref:`float<class_float>` **speed_scale**

+-----------+------------------------+
| *Default* | ``1.0``                |
+-----------+------------------------+
| *Setter*  | set_speed_scale(value) |
+-----------+------------------------+
| *Getter*  | get_speed_scale()      |
+-----------+------------------------+

Particle system's running speed scaling ratio. A value of ``0`` can be used to pause the particles.

----

.. _class_CPUParticles2D_property_spread:

- :ref:`float<class_float>` **spread**

+-----------+-------------------+
| *Default* | ``45.0``          |
+-----------+-------------------+
| *Setter*  | set_spread(value) |
+-----------+-------------------+
| *Getter*  | get_spread()      |
+-----------+-------------------+

Each particle's initial direction range from ``+spread`` to ``-spread`` degrees.

----

.. _class_CPUParticles2D_property_tangential_accel:

- :ref:`float<class_float>` **tangential_accel**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Tangential acceleration applied to each particle. Tangential acceleration is perpendicular to the particle's velocity giving the particles a swirling motion.

----

.. _class_CPUParticles2D_property_tangential_accel_curve:

- :ref:`Curve<class_Curve>` **tangential_accel_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Each particle's tangential acceleration will vary along this :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_tangential_accel_random:

- :ref:`float<class_float>` **tangential_accel_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Tangential acceleration randomness ratio.

----

.. _class_CPUParticles2D_property_texture:

- :ref:`Texture<class_Texture>` **texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

Particle texture. If ``null``, particles will be squares.

Method Descriptions
-------------------

.. _class_CPUParticles2D_method_convert_from_particles:

- void **convert_from_particles** **(** :ref:`Node<class_Node>` particles **)**

Sets this node's properties to match a given :ref:`Particles2D<class_Particles2D>` node with an assigned :ref:`ParticlesMaterial<class_ParticlesMaterial>`.

----

.. _class_CPUParticles2D_method_get_param:

- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|

Returns the base value of the parameter specified by :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_get_param_curve:

- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|

Returns the :ref:`Curve<class_Curve>` of the parameter specified by :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_get_param_randomness:

- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|

Returns the randomness factor of the parameter specified by :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_get_particle_flag:

- :ref:`bool<class_bool>` **get_particle_flag** **(** :ref:`Flags<enum_CPUParticles2D_Flags>` flag **)** |const|

Returns the enabled state of the given flag (see :ref:`Flags<enum_CPUParticles2D_Flags>` for options).

----

.. _class_CPUParticles2D_method_restart:

- void **restart** **(** **)**

Restarts the particle emitter.

----

.. _class_CPUParticles2D_method_set_param:

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`float<class_float>` value **)**

Sets the base value of the parameter specified by :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_set_param_curve:

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**

Sets the :ref:`Curve<class_Curve>` of the parameter specified by :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_set_param_randomness:

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`float<class_float>` randomness **)**

Sets the randomness factor of the parameter specified by :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_set_particle_flag:

- void **set_particle_flag** **(** :ref:`Flags<enum_CPUParticles2D_Flags>` flag, :ref:`bool<class_bool>` enable **)**

Enables or disables the given flag (see :ref:`Flags<enum_CPUParticles2D_Flags>` for options).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
